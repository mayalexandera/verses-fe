{"ast":null,"code":"// import { updateCartProductSize } from \"../actions\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null\n};\n\nconst setCart = (state, action) => {\n  console.log(action.payload);\n  return updateObject(state, {\n    cart_id: action.payload.cart.id,\n    member_id: action.payload.cart.member_id,\n    cart_items: action.payload.cart_items,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n    error: null,\n    message: null\n  });\n};\n\nconst startFetchCart = state => {\n  return updateObject(state, {\n    loading: true,\n    error: false,\n    message: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  let updatedCart;\n\n  if (state.cart_items !== [] || state.cart_items !== undefined) {\n    updatedCart = [...state.cart_items, { ...action.payload.cart_item\n    }];\n  } else {\n    updatedCart = [action.payload.cart_item];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst updateCartProductSize = (state, action) => {\n  let cart_item = state.cart_items.filter(item => item.id === action.payload.cart_item.id)[0];\n  const updatedCart = [];\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== cart_item.id) updatedCart.push({ ...cartItem\n    });\n  });\n  updatedCart.push({ ...action.payload.cart_item\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false\n  });\n};\n\nconst updateCartProductQty = (state, action) => {\n  let cart_item = state.cart_items.filter(item => item.id === action.payload.cart_item.id)[0];\n  const updatedCart = [];\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== cart_item.id) {\n      updatedCart.push({ ...cartItem\n      });\n    }\n  });\n  updatedCart.push({ ...action.payload.cart_item\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [];\n  action.payload.cart_items.map(item => updatedCart.push({ ...item\n  }));\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload.cart_total\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: action.payload.message\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.UPDATE_CART_PRODUCT_SIZE:\n      return updateCartProductSize(state, action);\n\n    case actionTypes.UPDATE_CART_PRODUCT_QTY:\n      return updateCartProductQty(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","error","cart_total","loading","message","setCart","state","action","console","log","payload","cart","id","total_cost_string","startFetchCart","addProductToCart","updatedCart","undefined","cart_item","updateCartProductSize","filter","item","map","cartItem","push","updateCartProductQty","removeProductFromCart","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","UPDATE_CART_PRODUCT_SIZE","UPDATE_CART_PRODUCT_QTY","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["// import { updateCartProductSize } from \"../actions\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null,\n};\n\nconst setCart = (state, action) => {\n  console.log(action.payload )\n    return updateObject(state, {\n      cart_id: action.payload.cart.id,\n      member_id: action.payload.cart.member_id,\n      cart_items: action.payload.cart_items,\n      cart_total: action.payload.cart.total_cost_string,\n      loading: false,\n      error: null,\n      message: null,\n    });\n  }\n\nconst startFetchCart = (state) => {\n  return updateObject(state, {\n    loading: true,\n    error: false,\n    message: null,\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  let updatedCart;\n  if (state.cart_items !== [] || state.cart_items !== undefined) {\n    updatedCart = [...state.cart_items, { ...action.payload.cart_item }];\n  } else {\n    updatedCart = [action.payload.cart_item];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst updateCartProductSize = (state, action) => {\n  let cart_item = state.cart_items.filter(item => item.id === action.payload.cart_item.id)[0]\n  const updatedCart = []\n\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== cart_item.id) updatedCart.push({...cartItem})\n  })\n  \n  updatedCart.push({...action.payload.cart_item})\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n  })\n}\n\nconst updateCartProductQty = (state, action) => {\n  let cart_item = state.cart_items.filter(\n    (item) => item.id === action.payload.cart_item.id\n  )[0];\n  const updatedCart = [];\n\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== cart_item.id) {\n      updatedCart.push({ ...cartItem });\n    }\n  });\n  \n  updatedCart.push({ ...action.payload.cart_item });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n  });\n}\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [];\n\n  action.payload.cart_items.map(item => updatedCart.push({...item}))\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload.cart_total\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: action.payload.message,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.UPDATE_CART_PRODUCT_SIZE:\n      return updateCartProductSize(state, action);\n    case actionTypes.UPDATE_CART_PRODUCT_QTY:\n      return updateCartProductQty(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}