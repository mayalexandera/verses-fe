{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/ProductCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.fetchShowProductSizes(this.props.product.brand_id, this.props.product.id);\n  }\n\n  render() {\n    console.log(this.props.brand.name);\n    let img = this.props.product.images.split(\",\")[0];\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"col span-1-of-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col product-outer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"product-photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: this.props.product.name,\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"product-card-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"product-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, this.props.brand.name)), /*#__PURE__*/React.createElement(Link, {\n      className: \"product-subtitle\",\n      to: `/products/${this.props.product.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"product-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, this.props.product.name)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"product-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, this.props.product.price_string)))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps);\n  return {\n    sizes: state.size.sizes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchShowProductSizes: (brand_id, product_id) => dispatch(actions.fetchShowProductSizes(brand_id, product_id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/ProductCard.js"],"names":["React","connect","actions","Link","ProductCard","Component","state","componentDidMount","props","fetchShowProductSizes","product","brand_id","id","render","console","log","brand","name","img","images","split","price_string","mapStateToProps","ownProps","sizes","size","mapDispatchToProps","dispatch","product_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport { Link } from \"react-router-dom\";\n\nclass ProductCard extends React.Component {\n  state = {\n    \n  }\n\n  componentDidMount() {\n    this.props.fetchShowProductSizes(this.props.product.brand_id, this.props.product.id)\n  }\n  render() {\n    console.log(this.props.brand.name);\n    let img = this.props.product.images.split(\",\")[0];\n    return (\n      <li className='col span-1-of-3'>\n        <div className='product-card'>\n          <div className='col product-outer'>\n            <div className='product-photo'>\n              <img alt={this.props.product.name} src={img} />\n            </div>\n            <React.Fragment>\n              <ul className='product-card-details'>\n                <li className='product-title'>\n                  <li>{this.props.brand.name}</li>\n                </li>\n\n                <Link\n                  className='product-subtitle'\n                  to={`/products/${this.props.product.id}`}\n                >\n                  <li className='product-subtitle'>\n                    {this.props.product.name}\n                  </li>\n                </Link>\n\n                <li className='product-subtitle'>\n                  <li>{this.props.product.price_string}</li>\n                </li>\n              </ul>\n            </React.Fragment>\n          </div>\n        </div>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps);\n  return { sizes: state.size.sizes };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchShowProductSizes: (brand_id, product_id) =>\n      dispatch(actions.fetchShowProductSizes(brand_id, product_id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);\n"]},"metadata":{},"sourceType":"module"}