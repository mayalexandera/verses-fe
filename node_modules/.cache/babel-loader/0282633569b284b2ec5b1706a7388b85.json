{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/OrderContainer.js\";\nimport React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass OrderContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderOrders = () => {\n      if (this.props.orders && this.props.orders) {\n        return this.props.orders.map(order => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"order-card\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }\n          }, \"Ordered:\"), \" \", order.ordered_date, /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }\n          }, \"Order\"), \"#\", order.number);\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"orders-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(React.Fragment, null, \" \", this.renderOrders()));\n  }\n\n}\n\nconst msp = state => {\n  return {\n    orders: state.order.orders\n  };\n};\n\nconst mdp = dispatch => {\n  return {\n    fetchOrders: () => dispatch(actions.fetchOrders())\n  };\n};\n\nexport default connect(msp, mdp)(OrderContainer);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/OrderContainer.js"],"names":["React","actions","connect","Link","OrderContainer","Component","renderOrders","props","orders","map","order","ordered_date","number","componentDidMount","fetchOrders","render","msp","state","mdp","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAK3CC,YAL2C,GAK5B,MAAM;AACnB,UAAI,KAAKC,KAAL,CAAWC,MAAX,IAAqB,KAAKD,KAAL,CAAWC,MAApC,EAA4C;AAC1C,eAAO,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAuBC,KAAD,IAAW;AACtC,8BACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,OAC2BA,KAAK,CAACC,YADjC,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,OAGMD,KAAK,CAACE,MAHZ,CADF;AAOD,SARM,CAAP;AASD;AACF,KAjB0C;AAAA;;AAC3CC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,KAAL,CAAWO,WAAX;AACD;;AAgBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,+CAAI,KAAKT,YAAL,EAAJ,CAFF,CADF;AAMD;;AA1B0C;;AA6B7C,MAAMU,GAAG,GAAIC,KAAD,IAAW;AACrB,SAAO;AAAET,IAAAA,MAAM,EAAES,KAAK,CAACP,KAAN,CAAYF;AAAtB,GAAP;AACD,CAFD;;AAIA,MAAMU,GAAG,GAAIC,QAAD,IAAc;AACxB,SAAO;AACLL,IAAAA,WAAW,EAAE,MAAMK,QAAQ,CAAClB,OAAO,CAACa,WAAR,EAAD;AADtB,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAACc,GAAD,EAAME,GAAN,CAAP,CAAkBd,cAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nclass OrderContainer extends React.Component {\n  componentDidMount() {\n    this.props.fetchOrders();\n  }\n\n  renderOrders = () => {\n    if (this.props.orders && this.props.orders) {\n      return this.props.orders.map((order) => {\n        return (\n          <div className='order-card'>\n              <span>Ordered:</span> {order.ordered_date}\n              <span>Order</span>\n              #{order.number}\n          </div>\n        );\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className='orders-container'>\n        <div className='order-title'>Orders</div>\n        <> {this.renderOrders()}</>\n      </div>\n    );\n  }\n}\n\nconst msp = (state) => {\n  return { orders: state.order.orders };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    fetchOrders: () => dispatch(actions.fetchOrders()),\n  };\n};\n\nexport default connect(msp, mdp)(OrderContainer);\n"]},"metadata":{},"sourceType":"module"}