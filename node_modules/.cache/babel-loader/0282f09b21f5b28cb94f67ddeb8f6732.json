{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport const addProductToCart = (product_id, size_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size: size\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.ADD_PRODUCT_TO_CART,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const updateCartProductQty = (cart_item, quantity, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.patch(`/users/${user}/cart/cart_items/${cart_item.id}`, {\n    cart_item_id: JSON.stringify(cart_item.id),\n    cart_id: JSON.stringify(cart_item.cart_id),\n    product_id: JSON.stringify(cart_item.product_id),\n    value: quantity,\n    type: \"quantity\"\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.UPDATE_CART_PRODUCT_QTY,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const updateCartProductSize = (cart_item, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.patch(`users/${user}/cart/cart_items/${cart_item.id}`, {\n    cart_item_id: JSON.stringify(cart_item.id),\n    cart_id: JSON.stringify(cart_item.cart_id),\n    product_id: JSON.stringify(cart_item.product_id),\n    value: size,\n    type: \"size\"\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.UPDATE_CART_PRODUCT_SIZE,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const addCartToFavorite = (product_id, size, cart_item_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id)\n  });\n  dispatch(removeProductFromCart(cart_item_id));\n};\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api.get(`/users/${user}/cart`).then(response => {\n    dispatch(setCart(response.data));\n  }).catch(error => {\n    dispatch(fetchCartFailed(error));\n  });\n};\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART\n  };\n};\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/refresh`).then(response => dispatch(setCart(response)));\n};\nexport const fetchCartFailed = error => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error\n  };\n};\nexport const addProductToCartFailed = error => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error\n  };\n};\nexport const setCart = cart => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart\n  };\n};\nexport const removeProductFromCart = cart_item_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/cart_items/${cart_item_id}`).then(response => {\n    dispatch({\n      type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n      payload: response.data\n    });\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/CartActions.js"],"names":["api","actionTypes","addProductToCart","product_id","size_id","dispatch","getState","user","auth","userId","post","JSON","stringify","size","then","resp","type","ADD_PRODUCT_TO_CART","payload","data","catch","err","addProductToCartFailed","updateCartProductQty","cart_item","quantity","patch","id","cart_item_id","cart_id","value","UPDATE_CART_PRODUCT_QTY","updateCartProductSize","UPDATE_CART_PRODUCT_SIZE","addCartToFavorite","member_id","removeProductFromCart","initCart","startFetchCart","get","response","setCart","error","fetchCartFailed","START_FETCH_CART","refreshCart","delete","FETCH_CART_FAILED","ADD_PRODUCT_TO_CART_FAILED","cart","SET_CART","REMOVE_PRODUCT_FROM_CART"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const addProductToCart = (product_id, size_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .post(`/users/${user}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size: size,\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.ADD_PRODUCT_TO_CART,\n        payload: resp.data,\n      });\n    })\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const updateCartProductQty = (cart_item, quantity, size) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .patch(`/users/${user}/cart/cart_items/${cart_item.id}`, {\n      cart_item_id: JSON.stringify(cart_item.id),\n      cart_id: JSON.stringify(cart_item.cart_id),\n      product_id: JSON.stringify(cart_item.product_id),\n      value: quantity,\n      type: \"quantity\",\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.UPDATE_CART_PRODUCT_QTY,\n        payload: resp.data,\n      });\n    })\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const updateCartProductSize = (cart_item, size) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .patch(`users/${user}/cart/cart_items/${cart_item.id}`, {\n      cart_item_id: JSON.stringify(cart_item.id),\n      cart_id: JSON.stringify(cart_item.cart_id),\n      product_id: JSON.stringify(cart_item.product_id),\n      value: size,\n      type: \"size\",\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.UPDATE_CART_PRODUCT_SIZE,\n        payload: resp.data,\n      });\n    })\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const addCartToFavorite = (product_id, size, cart_item_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id),\n  });\n  dispatch(removeProductFromCart(cart_item_id));\n};\n\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api\n    .get(`/users/${user}/cart`)\n    .then((response) => {\n      dispatch(setCart(response.data));\n    })\n    .catch((error) => {\n      dispatch(fetchCartFailed(error));\n    });\n};\n\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART,\n  };\n};\n\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/refresh`)\n    .then((response) => dispatch(setCart(response)));\n};\n\nexport const fetchCartFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const addProductToCartFailed = (error) => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart,\n  };\n};\n\nexport const removeProductFromCart = (cart_item_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/cart_items/${cart_item_id}`)\n    .then((response) => {\n      dispatch({\n        type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n        payload: response.data,\n      });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}