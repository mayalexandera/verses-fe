{"ast":null,"code":"import api from '../apis/api';\nimport _ from 'lodash';\nexport const fetchProdByBrand = brand_id => async dispatch => {\n  const response = await api.get(`/brands/${brand_id}/products`);\n  dispatch({\n    type: 'FETCH_PRODUCTS_BY_BRAND',\n    payload: response.data\n  });\n};\nexport const fetchProdByCategory = category => async dispatch => {\n  const response = await api.get(`/products/`, {\n    params: {\n      category: category\n    }\n  });\n  dispatch({\n    type: \"FETCH_PRODUCTS_BY_CATEGORY\",\n    payload: response.data\n  });\n};\nexport const fetchProdBySize = size => async dispatch => {\n  const response = await api.get(`/products/`, {\n    params: {\n      size: size\n    }\n  });\n  dispatch({\n    type: \"FETCH_PRODUCTS_BY_CATEGORY\",\n    payload: response.data\n  });\n};\nexport const fetchAllProd = () => async dispatch => {\n  const response = await api.get(`/products/`);\n  dispatch({\n    type: 'FETCH_ALL_PRODUCTS',\n    payload: response.data\n  });\n};\nexport const fetchProdByNumber = product_number => async dispatch => {\n  const response = await api.get(`/products/${product_number}`);\n  dispatch({\n    type: 'FETCH_PRODUCTS_BY_NUM',\n    payload: response.data\n  });\n};\nexport const fetchProdById = prod_id => async dispatch => {\n  const response = await api.get(`products/${prod_id}`);\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_PROD_BY_ID\",\n    payload: response.data\n  });\n}; // export const fetchBrand = (brand_id) => async (dispatch) => {\n//   const response = await api.get(`/brands/${brand_id}`);\n//   dispatch({ type: \"FETCH_BRAND\", payload: response.data });\n// };\n// export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };","map":{"version":3,"sources":["/Users/mayablevins/Desktop/HELP/verses_fe-85220142a93b1b708e9311944f3c85a3d9621c1e/src/store/actions/ProductsActions.js"],"names":["api","_","fetchProdByBrand","brand_id","dispatch","response","get","type","payload","data","fetchProdByCategory","category","params","fetchProdBySize","size","fetchAllProd","fetchProdByNumber","product_number","fetchProdById","prod_id","console","log"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEC,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AAC7D,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,WAAUH,QAAS,WAA5B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,yBAAP;AAAkCC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApD,GAAD,CAAR;AACF,CAHM;AAKP,OAAO,MAAMC,mBAAmB,GAAIC,QAAD,IAAc,MAAOP,QAAP,IAAoB;AACnE,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,YAAT,EAAsB;AAC3CM,IAAAA,MAAM,EAAE;AACND,MAAAA,QAAQ,EAAEA;AADJ;AADmC,GAAtB,CAAvB;AAKAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,4BAAR;AAAsCC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxD,GAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMI,eAAe,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AAC3D,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,YAAT,EAAsB;AAC3CM,IAAAA,MAAM,EAAE;AACNE,MAAAA,IAAI,EAAEA;AADA;AADmC,GAAtB,CAAvB;AAKAV,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,4BAAR;AAAsCC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAxD,GAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMM,YAAY,GAAG,MAAM,MAAMX,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,YAAT,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,oBAAP;AAA6BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA/C,GAAD,CAAR;AACF,CAHM;AAKR,OAAO,MAAMO,iBAAiB,GAAIC,cAAD,IAAqB,MAAMb,QAAN,IAAkB;AACtE,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,aAAYW,cAAe,EAApC,CAAvB;AACAb,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE,uBAAP;AAAgCC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAlD,GAAD,CAAR;AACA,CAHK;AAKL,OAAO,MAAMS,aAAa,GAAIC,OAAD,IAAa,MAAMf,QAAN,IAAkB;AACzD,QAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAJ,CAAS,YAAWa,OAAQ,EAA5B,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACI,IAArB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA9C,GAAD,CAAR;AACF,CAJM,C,CAOT;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import api from '../apis/api'\nimport _ from 'lodash'\n\n export const fetchProdByBrand = (brand_id) => async dispatch => {\n    const response = await api.get(`/brands/${brand_id}/products`)\n    dispatch({type: 'FETCH_PRODUCTS_BY_BRAND', payload: response.data})\n }\n\n export const fetchProdByCategory = (category) => async (dispatch) => {\n   const response = await api.get(`/products/`, {\n     params: {\n       category: category,\n     },\n   });\n   dispatch({ type: \"FETCH_PRODUCTS_BY_CATEGORY\", payload: response.data });\n };\n\n export const fetchProdBySize = (size) => async (dispatch) => {\n   const response = await api.get(`/products/`, {\n     params: {\n       size: size,\n     },\n   });\n   dispatch({ type: \"FETCH_PRODUCTS_BY_CATEGORY\", payload: response.data });\n };\n \n export const fetchAllProd = () => async dispatch => {\n    const response = await api.get(`/products/`)\n    dispatch({type: 'FETCH_ALL_PRODUCTS', payload: response.data})\n }\n\nexport const fetchProdByNumber = (product_number) =>  async dispatch => {\n  const response = await api.get(`/products/${product_number}`)\n  dispatch({type: 'FETCH_PRODUCTS_BY_NUM', payload: response.data })\n };\n\n  export const fetchProdById = (prod_id) => async dispatch => {\n     const response = await api.get(`products/${prod_id}`)\n     console.log(response.data)\n     dispatch({ type: \"FETCH_PROD_BY_ID\", payload: response.data });\n  }\n\n\n// export const fetchBrand = (brand_id) => async (dispatch) => {\n//   const response = await api.get(`/brands/${brand_id}`);\n//   dispatch({ type: \"FETCH_BRAND\", payload: response.data });\n// };\n\n// export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };"]},"metadata":{},"sourceType":"module"}