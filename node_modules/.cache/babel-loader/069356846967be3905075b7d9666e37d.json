{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const setShowBrand = brand_id => async (dispatch, getState) => {\n  let brands = getState().brand.select;\n  let brand = brands.filter(brand => brand.id === brand_id);\n  console.log(brand_id);\n  dispatch({\n    type: actionTypes.SET_SHOW_BRAND,\n    brand: brand[0]\n  });\n};\nexport const initBrands = () => async dispatch => {\n  await api.get(`/brands/`).then(resp => {\n    dispatch(setBrands(resp.data));\n  }).catch(error => {\n    dispatch(fetchBrandsFailed(error));\n  });\n};\nexport const setBrands = brands => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  };\n};\nexport const fetchBrandsFailed = error => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/BrandsActions.js"],"names":["api","actionTypes","setShowBrand","brand_id","dispatch","getState","brands","brand","select","filter","id","console","log","type","SET_SHOW_BRAND","initBrands","get","then","resp","setBrands","data","catch","error","fetchBrandsFailed","SET_BRANDS","FETCH_BRANDS_FAILED","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,MAAIC,MAAM,GAAGD,QAAQ,GAAGE,KAAX,CAAiBC,MAA9B;AACA,MAAID,KAAK,GAAGD,MAAM,CAACG,MAAP,CAAcF,KAAK,IAAIA,KAAK,CAACG,EAAN,KAAaP,QAApC,CAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAC,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEZ,WAAW,CAACa,cAApB;AAAoCP,IAAAA,KAAK,EAAEA,KAAK,CAAC,CAAD;AAAhD,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAMQ,UAAU,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAClD,QAAMJ,GAAG,CACNgB,GADG,CACE,UADF,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdd,IAAAA,QAAQ,CAACe,SAAS,CAACD,IAAI,CAACE,IAAN,CAAV,CAAR;AACD,GAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBlB,IAAAA,QAAQ,CAACmB,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACD,GAPG,CAAN;AAQD,CATM;AAWP,OAAO,MAAMH,SAAS,GAAIb,MAAD,IAAY;AACnC,SAAO;AACLO,IAAAA,IAAI,EAAEZ,WAAW,CAACuB,UADb;AAELlB,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMiB,iBAAiB,GAAID,KAAD,IAAW;AAC1C,SAAO;AACLT,IAAAA,IAAI,EAAEZ,WAAW,CAACwB,mBADb;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const setShowBrand = (brand_id) => async (dispatch, getState) => {\n  let brands = getState().brand.select \n  let brand = brands.filter(brand => brand.id === brand_id)\n  console.log(brand_id)\n  dispatch({ type: actionTypes.SET_SHOW_BRAND, brand: brand[0]});\n}\n\nexport const initBrands = () => async (dispatch) => {\n  await api\n    .get(`/brands/`)\n    .then((resp) => {\n      dispatch(setBrands(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchBrandsFailed(error));\n    });\n};\n\nexport const setBrands = (brands) => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  }\n}\n\nexport const fetchBrandsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error,\n  };\n};"]},"metadata":{},"sourceType":"module"}