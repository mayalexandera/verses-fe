{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/Cart.js\";\nimport React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport SizeButton from \"./UI/Button/SizeButton\";\n\nclass Cart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorites: []\n    };\n\n    this.clickHandler = e => {\n      e.preventDefault();\n      console.log('hi', e.target.id);\n      this.props.initOrder(this.props.cart_id);\n    };\n\n    this.findProduct = item => {\n      console.log('in findproduct', item);\n      let product = this.props.products.filter(product => product.id === item.product_id);\n      console.log('in find profuct', product, this.props.products);\n      return product[0];\n    };\n\n    this.findBrand = product => {\n      console.log('in find brand', product);\n      let brand = [];\n\n      if (product !== 'undefined' && product !== 'undefined') {\n        brand = this.props.brands.filter(brand => brand.id === product.brand_id);\n        console.log('in find brand', this.props.brands, brand[0]);\n      }\n\n      return brand[0];\n    };\n\n    this.renderList = () => {\n      return this.props.cart_items.map(item => {\n        let product = this.findProduct(item);\n        let brand = this.findBrand(product);\n        return /*#__PURE__*/React.createElement(CartItem, {\n          brand: brand,\n          key: item.id,\n          product: product,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.initCart();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-summary-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"col order-buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SizeButton, {\n      clicked: e => this.clickHandler(e),\n      className: \"product-show-title\",\n      id: \"size-button\",\n      selected: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"SUBMIT ORDER\"))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.renderList()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    cart_id: state.cart.cart_id,\n    member_id: state.cart.member_id,\n    cart_items: state.cart.cart_items,\n    products: state.product.select,\n    brands: state.brand.select,\n    loading: state.cart.loading,\n    error: state.cart.error,\n    orders: state.order\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initCart: () => dispatch(actions.initCart()),\n    addToCart: (user_id, product_id, size) => dispatch(actions.addProductToCart(user_id, product_id, size)),\n    removeProductFromCart: (user_id, product_id, size) => dispatch(actions.removeProductFromCart(user_id, product_id, size)),\n    initOrder: () => dispatch(actions.initOrder())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/Cart.js"],"names":["React","actions","connect","CartItem","SizeButton","Cart","Component","state","favorites","clickHandler","e","preventDefault","console","log","target","id","props","initOrder","cart_id","findProduct","item","product","products","filter","product_id","findBrand","brand","brands","brand_id","renderList","cart_items","map","componentDidMount","initCart","render","mapStateToProps","cart","member_id","select","loading","error","orders","order","mapDispatchToProps","dispatch","addToCart","user_id","size","addProductToCart","removeProductFromCart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./CartItem\";\nimport SizeButton from \"./UI/Button/SizeButton\";\n\nclass Cart extends React.Component {\n  state = {\n    favorites: []\n  }\n  componentDidMount() {\n    this.props.initCart()\n  }\n\n  clickHandler = (e) => {\n    e.preventDefault()\n    console.log('hi', e.target.id)\n    this.props.initOrder(this.props.cart_id)\n  }\n\n  findProduct = (item) => {\n    console.log('in findproduct', item)\n    let product = this.props.products.filter(product => product.id === item.product_id)\n    console.log('in find profuct', product, this.props.products)\n    return product[0]\n  }\n\n  findBrand = (product) => {\n    console.log('in find brand', product)\n      let brand = []\n      if (product !== 'undefined' && product !== 'undefined' ){brand = this.props.brands.filter(brand => brand.id === product.brand_id)\n      console.log('in find brand', this.props.brands, brand[0])\n      }\n      return brand[0]\n    }\n  \n  renderList = () => {\n    return this.props.cart_items.map(item => {\n      let product = this.findProduct(item)\n      let brand = this.findBrand(product)\n      return <CartItem brand={brand} key={item.id} product={product} />;\n    })\n  }\n\n  render() {\n    return (\n      <section>\n        <div className='order-summary-container'>\n          <section className='col order-buttons-container'>\n            <SizeButton\n              clicked={(e) => this.clickHandler(e)}\n              className='product-show-title'\n              id='size-button'\n              selected={false}\n            >\n              SUBMIT ORDER\n            </SizeButton>\n            {/* <SizeButton\n              clicked={(e) => clickHandler(e)}\n              className='product-show-title'\n              id='size-button'\n              selected={false}\n            >\n              EDIT\n            </SizeButton> */}\n          </section>\n        </div>\n        <React.Fragment>{this.renderList()}</React.Fragment>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    cart_id: state.cart.cart_id,\n    member_id: state.cart.member_id,\n    cart_items: state.cart.cart_items,\n    products: state.product.select,\n    brands: state.brand.select,\n    loading: state.cart.loading,\n    error: state.cart.error,\n    orders: state.order\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initCart: () => dispatch(actions.initCart()),\n    addToCart: (user_id, product_id, size) => dispatch(actions.addProductToCart(user_id, product_id, size)),\n    removeProductFromCart: (user_id, product_id, size) =>\n      dispatch(actions.removeProductFromCart(user_id, product_id, size)),\n      initOrder: () => dispatch(actions.initOrder())\n \n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}