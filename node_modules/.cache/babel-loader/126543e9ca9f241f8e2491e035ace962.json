{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = userInfo => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: userInfo.session_token,\n    userId: userInfo.id,\n    current_user: userInfo\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n    api.post(path, authData).then(response => {\n      console.log(response.data);\n      localStorage.setItem(\"token\", response.data.session_token);\n      console.log(localStorage);\n      localStorage.setItem(\"userId\", response.data.id);\n      dispatch(authSuccess(response.data));\n    }).catch(err => {\n      dispatch(authFail());\n    });\n  };\n};\nexport const fetchUserStart = () => {\n  return {\n    type: actionTypes.FETCH_USER_START\n  };\n};\nexport const fetchUser = () => async (dispatch, getState) => {\n  dispatch(fetchUserStart());\n  let user = localStorage.getItem('userId');\n  JSON.stringify(user);\n  console.log(user);\n  await api.get(`/users/`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = user => {\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","authStart","type","AUTH_START","authSuccess","userInfo","AUTH_SUCCESS","idToken","session_token","userId","id","current_user","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","dispatch","authData","returnSecureToken","path","post","then","response","console","log","data","setItem","catch","err","fetchUserStart","FETCH_USER_START","fetchUser","getState","user","getItem","JSON","stringify","get","fetchUserSuccess","fetchUserFail","FETCH_USER_FAIL","FETCH_USER_SUCCESS","authCheckState","token"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (userInfo) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: userInfo.session_token,\n    userId: userInfo.id,\n    current_user: userInfo\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n     let path = !isSignup ? `/session` : `/users/`;\n\n    api\n      .post(path, authData)\n      .then((response) => {\n        console.log(response.data);\n        localStorage.setItem(\"token\", response.data.session_token);\n        console.log(localStorage)\n        localStorage.setItem(\"userId\", response.data.id);\n        dispatch(authSuccess(response.data));\n      })\n      .catch((err) => {\n        dispatch(authFail());\n      });\n  };\n};\n \nexport const fetchUserStart = () => {\n  return ({type: actionTypes.FETCH_USER_START})\n}\n\n\nexport const fetchUser = () => async (dispatch, getState) => {\n  dispatch(fetchUserStart())\n  let user = localStorage.getItem('userId')\n  JSON.stringify(user)\n  console.log(user)\n   await api.get(`/users/`)\n  .then(response => {dispatch(fetchUserSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(fetchUserFail(err))\n  })\n  }\n\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (user) => {\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}