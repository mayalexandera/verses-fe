{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const initFavorites = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startFetchFavorites());\n  await api.get(`/users/${user}/favorites`).then(resp => {\n    dispatch(setFavorites(resp.data));\n  }).catch(error => {\n    dispatch(fetchFavoritesFailed(error));\n  });\n};\nexport const addFavoriteToCart = (product_id, size_id, size, favorite_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size_id: JSON.stringify(size_id),\n    size: size,\n    favorite_id: JSON.stringify(favorite_id)\n  }).then(dispatch(deleteFavorite(favorite_id)));\n};\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  };\n};\nexport const fetchFavoritesFailed = error => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n    payload: error\n  };\n};\nexport const setFavorites = favorites => {\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites\n  };\n};\nexport const deleteFavorite = favorite_id => async (dispatch, getState) => {\n  let user_id = getState().auth.userId;\n  let id = JSON.stringify(favorite_id);\n  await api.delete(`/users/${user_id}/favorites/${id}`, {\n    params: {\n      user_id: user_id.value,\n      favorite_id: JSON.stringify(favorite_id)\n    }\n  }).then(dispatch({\n    type: actionTypes.DELETE_FAVORITE,\n    payload: favorite_id\n  }));\n};\nexport const createFavorite = (product_id, size_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/favorites`, {\n    member_id: JSON.stringify(user),\n    product_id: product_id,\n    size_id: size_id\n  }).then(response => dispatch({\n    type: actionTypes.CREATE_FAVORITE,\n    payload: response.data\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/FavoritesActions.js"],"names":["api","actionTypes","initFavorites","dispatch","getState","user","auth","userId","startFetchFavorites","get","then","resp","setFavorites","data","catch","error","fetchFavoritesFailed","addFavoriteToCart","product_id","size_id","size","favorite_id","post","JSON","stringify","deleteFavorite","type","START_FETCH_FAVORITES","FETCH_FAVORITES_FAILED","payload","favorites","SET_FAVORITES","user_id","id","delete","params","value","DELETE_FAVORITE","createFavorite","member_id","response","CREATE_FAVORITE"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const initFavorites = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startFetchFavorites());\n  await api\n    .get(`/users/${user}/favorites`)\n    .then((resp) => {\n      dispatch(setFavorites(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchFavoritesFailed(error));\n    });\n};\n\nexport const addFavoriteToCart = (\n  product_id,\n  size_id,\n  size,\n  favorite_id\n) => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api\n    .post(`/users/${user}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size_id: JSON.stringify(size_id),\n      size: size,\n      favorite_id: JSON.stringify(favorite_id),\n    })\n    .then(dispatch(deleteFavorite(favorite_id)));\n};\n\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES,\n  };\n};\n\nexport const fetchFavoritesFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n    payload: error,\n  };\n};\n\nexport const setFavorites = (favorites) => {\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites,\n  };\n};\n\nexport const deleteFavorite = (favorite_id) => async (dispatch, getState) => {\n  let user_id = getState().auth.userId;\n  let id = JSON.stringify(favorite_id);\n  await api\n    .delete(`/users/${user_id}/favorites/${id}`, {\n      params: {\n        user_id: user_id.value,\n        favorite_id: JSON.stringify(favorite_id),\n      },\n    })\n    .then(\n      dispatch({ type: actionTypes.DELETE_FAVORITE, payload: favorite_id })\n    );\n};\n\nexport const createFavorite = (product_id, size_id) => async (\n  dispatch, getState\n) => {\n  let user = getState().auth.userId\n  await api\n    .post(`/users/${user}/favorites`, {\n      member_id: JSON.stringify(user),\n      product_id: product_id,\n      size_id: size_id\n    })\n    .then((response) =>\n      dispatch({ type: actionTypes.CREATE_FAVORITE, payload: response.data })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}