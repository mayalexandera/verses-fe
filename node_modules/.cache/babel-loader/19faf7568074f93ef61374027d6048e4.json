{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nimport { remove } from \"lodash\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  cart_products: []\n};\n\nconst setCart = (state, action) => {\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      cart_products: action.payload.products\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state.cart_items, action.payload];\n  return updateObject(state, {\n    cart_items: updatedCart\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [...action.payload.cart_items];\n  const updatedCartProducts = [...action.payload.products];\n  return updateObject(state, {\n    cart_items: updatedCart,\n    cart_products: updatedCartProducts\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","remove","initialState","cart_id","member_id","cart_items","cart_products","setCart","state","action","payload","id","products","startFetchCart","loading","addProductToCart","updatedCart","removeProductFromCart","updatedCartProducts","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","fetchCartFailed","START_FETCH_CART"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,SAAS,EAAE,IAFM;AAGjBC,EAAAA,UAAU,EAAE,EAHK;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,OAAP,KAAkB,IAAtB,EAA4B;AAC5B,WAAOV,YAAY,CAACQ,KAAD,EAAQ;AACvBL,MAAAA,OAAO,EAAEM,MAAM,CAACC,OAAP,CAAeC,EADD;AAEvBP,MAAAA,SAAS,EAAEK,MAAM,CAACC,OAAP,CAAeN,SAFH;AAGvBC,MAAAA,UAAU,EAAEI,MAAM,CAACC,OAAP,CAAeL,UAHJ;AAIvBC,MAAAA,aAAa,EAAEG,MAAM,CAACC,OAAP,CAAeE;AAJP,KAAR,CAAnB;AAMC;AACF,CATD;;AAWA,MAAMC,cAAc,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBM,IAAAA,OAAO,EAAE;AADgB,GAAR,CAAnB;AAGD,CAJD;;AAOA,MAAMC,gBAAgB,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAMO,WAAW,GAAG,CAAC,GAAGR,KAAK,CAACH,UAAV,EAAsBI,MAAM,CAACC,OAA7B,CAApB;AACA,SAAOV,YAAY,CAACQ,KAAD,EAAQ;AACzBH,IAAAA,UAAU,EAAEW;AADa,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMC,qBAAqB,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC/C,QAAMO,WAAW,GAAG,CAAC,GAAGP,MAAM,CAACC,OAAP,CAAeL,UAAnB,CAApB;AACA,QAAMa,mBAAmB,GAAG,CAAC,GAAGT,MAAM,CAACC,OAAP,CAAeE,QAAnB,CAA5B;AACA,SAAOZ,YAAY,CAACQ,KAAD,EAAQ;AACzBH,IAAAA,UAAU,EAAEW,WADa;AAEzBV,IAAAA,aAAa,EAAEY;AAFU,GAAR,CAAnB;AAID,CAPD;;AASA,MAAMC,OAAO,GAAG,CAACX,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACW,IAAf;AACE,SAAKrB,WAAW,CAACsB,QAAjB;AACE,aAAOd,OAAO,CAACC,KAAD,EAAQC,MAAR,CAAd;;AACF,SAAKV,WAAW,CAACuB,mBAAjB;AACE,aAAOP,gBAAgB,CAACP,KAAD,EAAQC,MAAR,CAAvB;;AACF,SAAKV,WAAW,CAACwB,wBAAjB;AACE,aAAON,qBAAqB,CAACT,KAAD,EAAQC,MAAR,CAA5B;;AACF,SAAKV,WAAW,CAACyB,iBAAjB;AACE,aAAOC,eAAe,CAACjB,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKV,WAAW,CAAC2B,gBAAjB;AACE,aAAOb,cAAc,CAACL,KAAD,EAAQC,MAAR,CAArB;;AACF;AACE,aAAOD,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeW,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nimport { remove } from \"lodash\";\n\n\nconst initialState = {\n    cart_id: null,\n    member_id: null,\n    cart_items: [],\n    cart_products: []\n};\n\nconst setCart = (state, action) => {\n  if (action.payload !==null ){\n  return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      cart_products: action.payload.products\n    })\n  } \n}\n\nconst startFetchCart = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  })\n}\n\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state.cart_items, action.payload]\n  return updateObject(state, {\n    cart_items: updatedCart\n  })\n}\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [...action.payload.cart_items];\n  const updatedCartProducts = [...action.payload.products];\n  return updateObject(state, {\n    cart_items: updatedCart,\n    cart_products: updatedCartProducts,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}