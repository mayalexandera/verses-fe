{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId, user) => {\n  console.log(token, userId, user);\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n    user: user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => {\n  return dispatch => {\n    console.log('in auth');\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n    api.post(path, authData).then(response => {\n      console.log(response.data);\n      localStorage.setItem(\"token\", response.data.session_token);\n      console.log(localStorage);\n      localStorage.setItem(\"userId\", response.data.id);\n      localStorage.setItem(response.data);\n      dispatch(authSuccess(response.data.session_token, response.data.id, response.data));\n    }).catch(err => {\n      dispatch(authFail());\n    });\n  };\n};\nexport const fetchUserStart = () => {\n  return {\n    type: actionTypes.FETCH_USER_START\n  };\n};\nexport const fetchUser = () => async (dispatch, getState) => {\n  let user = localStorage.getItem('userId');\n  JSON.stringify(user);\n  console.log(user);\n  await api.get(`/users/${user}`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = user => async dispatch => {\n  console.log(user);\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","user","console","log","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","dispatch","authData","returnSecureToken","path","post","then","response","data","setItem","session_token","id","catch","err","fetchUserStart","FETCH_USER_START","fetchUser","getState","getItem","JSON","stringify","get","fetchUserSuccess","fetchUserFail","FETCH_USER_FAIL","FETCH_USER_SUCCESS","authCheckState"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, userId, user) => {\n  console.log(token, userId, user)\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n    user: user,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => {\n  return (dispatch) => {\n    console.log('in auth')\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n     let path = !isSignup ? `/session` : `/users/`;\n\n    api\n      .post(path, authData)\n      .then((response) => {\n        console.log(response.data);\n        localStorage.setItem(\"token\", response.data.session_token);\n        console.log(localStorage)\n        localStorage.setItem(\"userId\", response.data.id);\n        localStorage.setItem(response.data);\n        dispatch(authSuccess(response.data.session_token, response.data.id, response.data));\n      })\n      .catch((err) => {\n        dispatch(authFail());\n      });\n  };\n};\n \nexport const fetchUserStart = () => {\n  return ({type: actionTypes.FETCH_USER_START})\n}\n\n\nexport const fetchUser = () => async (dispatch, getState) => {\n\n  let user = localStorage.getItem('userId')\n  JSON.stringify(user)\n  console.log(user)\n   await api.get(`/users/${user}`)\n  .then(response => {dispatch(fetchUserSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(fetchUserFail(err))\n  })\n  }\n\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (user) =>  async dispatch => {\n  console.log(user)\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}