{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => async dispatch => {\n  dispatch(authStart());\n  const authData = {\n    email: email,\n    password: password,\n    name: name,\n    returnSecureToken: true\n  };\n  let path = !isSignup ? `/session` : `/users/`;\n  await api.post(`/users/`, authData).then(response => {\n    localStorage.setItem(\"token\", response.data.session_token);\n    localStorage.setItem(\"userId\", response.data.id);\n    dispatch(authSuccess(response.data.session_token, response.data.id, response.data));\n  }).catch(err => {\n    dispatch(authFail(err));\n  });\n};\nexport const fetchUser = () => async dispatch => {\n  let user = localStorage.getItem(\"userId\");\n  JSON.stringify(user);\n  await api.get(`/users/${user}`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = user => {\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","dispatch","authData","returnSecureToken","path","post","then","response","setItem","data","session_token","id","catch","err","fetchUser","user","getItem","JSON","stringify","get","fetchUserSuccess","fetchUserFail","FETCH_USER_FAIL","FETCH_USER_SUCCESS","setAuthRedirectPath","SET_AUTH_REDIRECT_PATH","authCheckState"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => \n   async (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n\n    await api\n      .post(`/users/`, authData)\n      .then((response) => {\n        localStorage.setItem(\"token\", response.data.session_token);\n        localStorage.setItem(\"userId\", response.data.id);\n        dispatch(\n          authSuccess(\n            response.data.session_token,\n            response.data.id,\n            response.data\n          )\n        );\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n\n\nexport const fetchUser = () => async (dispatch) => {\n  let user = localStorage.getItem(\"userId\");\n  JSON.stringify(user);\n  await api\n    .get(`/users/${user}`)\n    .then((response) => {\n      dispatch(fetchUserSuccess(response.data));\n    })\n    .catch((err) => {\n      dispatch(fetchUserFail(err));\n    });\n};\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (user) => {\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user,\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}