{"ast":null,"code":"// import { updateCartProductSize } from \"../actions\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null\n};\n\nconst setCart = (state, action) => {\n  return updateObject(state, {\n    cart_id: action.payload.cart.id,\n    member_id: action.payload.cart.member_id,\n    cart_items: action.payload.cart_items,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n    error: null,\n    message: null\n  });\n};\n\nconst startFetchCart = state => {\n  return updateObject(state, {\n    loading: true,\n    error: false,\n    message: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  let updatedCart;\n\n  if (state.cart_items !== [] || state.cart_items !== undefined) {\n    updatedCart = [...state.cart_items, { ...action.payload.cart_item\n    }];\n  } else {\n    updatedCart = [action.payload.cart_item];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst updateCartProductSize = (state, action) => {\n  let cart_item = state.cart_items.filter(item => item.id === action.payload.cart_item.id)[0];\n  let updatedCart = [];\n  state.cart_items.map(cartItem => {\n    return cartItem.id !== cart_item.id ? updatedCart = [...updatedCart, { ...cartItem\n    }] : updatedCart;\n  });\n  updatedCart.push({ ...action.payload.cart_item\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false\n  });\n};\n\nconst updateCartProductQty = (state, action) => {\n  let cart_item = state.cart_items.filter(item => item.id === action.payload.cart_item.id)[0];\n  let updatedCart = [action.payload.cart_item];\n  state.cart_items.map(cartItem => {\n    return cartItem.id !== cart_item.id ? updatedCart = [...updatedCart, { ...cartItem\n    }] : updatedCart;\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [];\n  action.payload.cart_items.map(item => updatedCart.push({ ...item\n  }));\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload.cart_total\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: action.payload.message\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.UPDATE_CART_PRODUCT_SIZE:\n      return updateCartProductSize(state, action);\n\n    case actionTypes.UPDATE_CART_PRODUCT_QTY:\n      return updateCartProductQty(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","error","cart_total","loading","message","setCart","state","action","payload","cart","id","total_cost_string","startFetchCart","addProductToCart","updatedCart","undefined","cart_item","updateCartProductSize","filter","item","map","cartItem","push","updateCartProductQty","removeProductFromCart","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","UPDATE_CART_PRODUCT_SIZE","UPDATE_CART_PRODUCT_QTY","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["// import { updateCartProductSize } from \"../actions\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null,\n};\n\nconst setCart = (state, action) => {\n  return updateObject(state, {\n    cart_id: action.payload.cart.id,\n    member_id: action.payload.cart.member_id,\n    cart_items: action.payload.cart_items,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n    error: null,\n    message: null,\n  });\n};\n\nconst startFetchCart = (state) => {\n  return updateObject(state, {\n    loading: true,\n    error: false,\n    message: null,\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  let updatedCart;\n  if (state.cart_items !== [] || state.cart_items !== undefined) {\n    updatedCart = [...state.cart_items, { ...action.payload.cart_item }];\n  } else {\n    updatedCart = [action.payload.cart_item];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst updateCartProductSize = (state, action) => {\n  let cart_item = state.cart_items.filter(\n    (item) => item.id === action.payload.cart_item.id\n  )[0];\n  let updatedCart = [];\n\n  state.cart_items.map((cartItem) => {\n    return (cartItem.id !== cart_item.id) ? updatedCart = [...updatedCart,{ ...cartItem }] : updatedCart\n  });\n\n  updatedCart.push({ ...action.payload.cart_item });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n  });\n};\n\nconst updateCartProductQty = (state, action) => {\n  let cart_item = state.cart_items.filter(\n    (item) => item.id === action.payload.cart_item.id\n  )[0];\n  let updatedCart = [action.payload.cart_item];\n\n  state.cart_items.map((cartItem) => {\n    return cartItem.id !== cart_item.id ? updatedCart = [...updatedCart, { ...cartItem }] : updatedCart\n    })\n    \n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    message: null,\n    cart_total: action.payload.cart.total_cost_string,\n    loading: false,\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [];\n\n  action.payload.cart_items.map((item) => updatedCart.push({ ...item }));\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload.cart_total,\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: action.payload.message,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.UPDATE_CART_PRODUCT_SIZE:\n      return updateCartProductSize(state, action);\n    case actionTypes.UPDATE_CART_PRODUCT_QTY:\n      return updateCartProductQty(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}