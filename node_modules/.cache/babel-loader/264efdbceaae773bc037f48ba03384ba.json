{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: null,\n  current_user: null\n};\n\nconst authStart = state => {\n  return updateObject(state, {\n    error: null\n  });\n};\n\nconst authSuccess = (state, action) => {\n  localStorage.setItem(\"token\", action.idToken);\n  localStorage.setItem(\"user\", action.userId);\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst fetchUserStart = state => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst fetchUserFail = state => {\n  return updateObject(state, {\n    error: true,\n    loading: false\n  });\n};\n\nconst fetchUserSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    current_user: action.user,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    current_user: null\n  });\n};\n\nconst authLogout = state => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null,\n    cart: []\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/AuthReducer.js"],"names":["actionTypes","updateObject","initialState","token","localStorage","getItem","userId","JSON","parse","error","loading","current_user","authStart","state","authSuccess","action","setItem","idToken","fetchUserStart","fetchUserFail","fetchUserSuccess","user","authFail","authLogout","cart","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","FETCH_USER_SUCCESS","FETCH_USER_START","FETCH_USER_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: null,\n  \n  current_user: null,\n};\n\nconst authStart = (state) => {\n  return updateObject(state, { error: null });\n};\n\nconst authSuccess = (state, action) => {\n  localStorage.setItem(\"token\", action.idToken);\n  localStorage.setItem(\"user\", action.userId);\n\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  });\n};\n\nconst fetchUserStart = (state) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst fetchUserFail = (state) => {\n  return updateObject(state, { error: true, loading: false });\n};\n\nconst fetchUserSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    current_user: action.user,\n    loading: false,\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    current_user: null,\n  });\n};\n\nconst authLogout = (state) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null,\n    cart: [],\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}