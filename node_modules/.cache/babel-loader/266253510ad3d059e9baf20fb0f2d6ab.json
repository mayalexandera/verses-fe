{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nimport { remove, isUndefined } from \"lodash\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  cart_products: [],\n  error: null,\n  loading: false\n};\n\nconst setCart = (state, action) => {\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: [...action.payload.id],\n      member_id: [...action.payload.member_id],\n      cart_items: [...action.payload.cart_items],\n      cart_products: [...action.payload.products],\n      loading: false,\n      error: null\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state, action.payload);\n  const updatedCart = [...state.cart_items, action.payload];\n  return updateObject(state, {\n    cart_items: updatedCart\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload);\n  const updatedCart = [];\n  const updatedCartProducts = [];\n  state.cart_products.map(product => {\n    if (product.id !== action.payload.product_id) {\n      updatedCartProducts.push({ ...product\n      });\n    }\n  });\n  console.log(action.payload.product_id, updatedCartProducts);\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== action.payload.cart_item_id) {\n      updatedCartProducts.push({ ...cartItem\n      });\n    }\n  });\n  console.log(action.payload.cart_item_id, updatedCart);\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    cart_products: [...updatedCartProducts]\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    error: true,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","remove","isUndefined","initialState","cart_id","member_id","cart_items","cart_products","error","loading","setCart","state","action","payload","id","products","startFetchCart","console","log","addProductToCart","updatedCart","removeProductFromCart","updatedCartProducts","map","product","product_id","push","cartItem","cart_item_id","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nimport { remove, isUndefined } from \"lodash\";\n\n\nconst initialState = {\n    cart_id: null,\n    member_id: null,\n    cart_items: [],\n    cart_products: [],\n    error: null,\n    loading: false,\n};\n\nconst setCart = (state, action) => {\n  if (action.payload !==null ){\n  return updateObject(state, {\n      cart_id: [...action.payload.id],\n      member_id: [...action.payload.member_id],\n      cart_items: [...action.payload.cart_items],\n      cart_products: [...action.payload.products],\n      loading: false,\n      error: null\n    })\n  } \n}\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state, {\n    loading: true, error: null\n  })\n}\n\nconst addProductToCart = (state, action) => {\n    console.log(state, action.payload);\n  const updatedCart = [...state.cart_items, action.payload]\n  return updateObject(state, {\n    cart_items: updatedCart,\n  })\n}\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload)\n  const updatedCart = [];\n  const updatedCartProducts = [];\n  state.cart_products.map(product => {\n    if(product.id !== action.payload.product_id) {\n      updatedCartProducts.push({...product})\n    }\n  })\n  console.log(action.payload.product_id, updatedCartProducts)\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== action.payload.cart_item_id) {\n      updatedCartProducts.push({ ...cartItem });\n    }\n  })\n  console.log(action.payload.cart_item_id, updatedCart)\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    cart_products: [...updatedCartProducts],\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state,{ error: true, loading: false})\n} \n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}