{"ast":null,"code":"import api from \"../apis/api\";\nimport _ from \"lodash\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const fetchProdByBrand = brand_id => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      brand_id: brand_id\n    }\n  }).then(resp => {\n    console.log(resp);\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchProdByCategory = category => async dispatch => {\n  const response = await api.get(`/products/`, {\n    params: {\n      category: category\n    }\n  });\n  dispatch({\n    type: actionTypes.FETCH_PRODUCTS_BY_CATEGORY,\n    payload: response.data\n  });\n};\nexport const fetchProdBySize = size => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      size: size\n    }\n  }).then(resp => {\n    console.log(resp);\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchProductsFailed = () => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED\n  };\n};\nexport const setProducts = products => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    products: products\n  };\n};\nexport const setShowProduct = product => async dispatch => {\n  console.log(product);\n  dispatch(actions.setBrand(product.brand_id)).then(dispatch(actions.fetchShowProductSizes(product.brand_id, product.id))).then(dispatch({\n    type: actionTypes.SET_SHOW_PRODUCT,\n    payload: product\n  }));\n};\nexport const initProducts = () => async dispatch => {\n  await api.get(`/products/`).then(resp => {\n    dispatch(setProducts(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchShowProduct = prod_id => async dispatch => {\n  console.log(\"in fetchSHow\");\n  await api.get(`products/${prod_id}`).then(resp => {\n    dispatch(setShowProduct(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchFaveProduct = prod_id => async dispatch => {\n  const response = await api.get(`products/${prod_id}`);\n  dispatch({\n    type: actionTypes.FETCH_FAVE_PROD,\n    payload: response.data\n  });\n}; // export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/ProductsActions.js"],"names":["api","_","actionTypes","actions","fetchProdByBrand","brand_id","dispatch","get","params","then","resp","console","log","setProducts","data","catch","err","fetchProductsFailed","fetchProdByCategory","category","response","type","FETCH_PRODUCTS_BY_CATEGORY","payload","fetchProdBySize","size","FETCH_PRODUCTS_FAILED","products","SET_PRODUCTS","setShowProduct","product","setBrand","fetchShowProductSizes","id","SET_SHOW_PRODUCT","initProducts","error","fetchShowProduct","prod_id","fetchFaveProduct","FETCH_FAVE_PROD"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport _ from \"lodash\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nexport const fetchProdByBrand = (brand_id) => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        brand_id: brand_id,\n      },\n    })\n    .then((resp) => {\n      console.log(resp);\n      dispatch(setProducts(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchProductsFailed());\n    });\n};\n\nexport const fetchProdByCategory = (category) => async (dispatch) => {\n  const response = await api.get(`/products/`, {\n    params: {\n      category: category,\n    },\n  });\n  dispatch({\n    type: actionTypes.FETCH_PRODUCTS_BY_CATEGORY,\n    payload: response.data,\n  });\n};\n\nexport const fetchProdBySize = (size) => async (dispatch) => {\n  await api.get(`/products/`, {\n      params: {\n        size: size,\n      },\n    })\n    .then(resp => {\n      console.log(resp)\n      dispatch(setProducts(resp.data))\n    })\n    .catch(err => {\n      dispatch(fetchProductsFailed())\n    })\n};\n\nexport const fetchProductsFailed = () => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED,\n  };\n};\n\nexport const setProducts = (products) => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    products: products,\n  };\n};\n\nexport const setShowProduct = (product) => async dispatch => {\n  console.log(product);\n  dispatch(actions.setBrand(product.brand_id)).then(\n    dispatch(actions.fetchShowProductSizes(product.brand_id, product.id))\n  ).then(dispatch({type: actionTypes.SET_SHOW_PRODUCT, payload: product}))\n\n};\n\n\n\nexport const initProducts = () => async (dispatch) => {\n  await api\n    .get(`/products/`)\n    .then((resp) => {\n      dispatch(setProducts(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailed());\n    });\n};\n\nexport const fetchShowProduct = (prod_id) => async (dispatch) => {\n  console.log(\"in fetchSHow\");\n  await api\n    .get(`products/${prod_id}`)\n    .then((resp) => {\n      dispatch(setShowProduct(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailed());\n    });\n};\n\nexport const fetchFaveProduct = (prod_id) => async (dispatch) => {\n  const response = await api.get(`products/${prod_id}`);\n  dispatch({ type: actionTypes.FETCH_FAVE_PROD, payload: response.data });\n};\n\n\n// export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };\n"]},"metadata":{},"sourceType":"module"}