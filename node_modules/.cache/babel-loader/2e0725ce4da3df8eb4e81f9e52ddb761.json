{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  products: [],\n  error: false,\n  loading: false\n};\n\nconst updateFavorites = (state, action) => {\n  console.log(action);\n  const updatedFavorites = [...state.select, action.payload];\n  const updatedProducts = [...state.products, { ...action.payload.product\n  }];\n  return updateObject(state, {\n    select: updatedFavorites,\n    products: updatedProducts\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = [];\n  const updatedProducts = [];\n  state.select.map(fave => {\n    if (fave.id !== action.favorite_id) updatedFavorites.push({ ...fave\n    });\n  });\n  state.products.map(prod => {\n    if (prod.id !== action.favorite_id) updatedProducts.push({ ...prod\n    });\n  });\n  return updateObject(state, {\n    select: updatedFavorites,\n    products: updatedProducts\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst setFavorites = (state, action) => {\n  console.log(\"in set favorites\", state, action);\n  return updateObject(state, {\n    select: [...action.select],\n    products: [...action.products],\n    loading: false\n  });\n};\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/favoritesReducer.js"],"names":["actionTypes","updateObject","initialState","select","products","error","loading","updateFavorites","state","action","console","log","updatedFavorites","payload","updatedProducts","product","deleteFavorite","map","fave","id","favorite_id","push","prod","startFetchFavorites","setFavorites","fetchFavoritesFailed","reducer","type","CREATE_FAVORITE","DELETE_FAVORITE","SET_FAVORITES","FETCH_FAVORITES_FAILED","START_FETCH_FAVORITES"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  products: [],\n  error: false,\n  loading: false\n};\n\nconst updateFavorites = (state, action) => {\n  console.log(action)\n  const updatedFavorites = [...state.select, action.payload];\n  const updatedProducts = [...state.products, {...action.payload.product}]\n  return updateObject(state, {\n    select: updatedFavorites,\n    products: updatedProducts\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = []\n  const updatedProducts = []\n  \n  state.select.map((fave) => {\n  if(fave.id !== action.favorite_id) updatedFavorites.push({...fave})\n  })\n  state.products.map(prod => {\n    if(prod.id !== action.favorite_id) updatedProducts.push({...prod})\n  })\n  return updateObject(state, {\n    select: updatedFavorites,\n    products: updatedProducts\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  })\n}\n\nconst setFavorites = (state, action) => {\n  console.log(\"in set favorites\", state, action);\n  return updateObject(state, {\n    select: [...action.select],\n    products: [...action.products],\n    loading: false,\n  });\n};\n\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}