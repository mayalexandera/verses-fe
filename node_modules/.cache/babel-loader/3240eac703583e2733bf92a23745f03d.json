{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const fetchBrand = brand_id => async dispatch => {\n  console.log(\"in fetch brand\");\n  await api.get(`/brands/${brand_id}`).then(resp => {\n    for (let key in resp.data) {\n      brand[key] = resp.data[key];\n    }\n\n    console.log(brand);\n  });\n  dispatch({\n    type: actionTypes.FETCH_BRAND,\n    payload: brand\n  });\n};\nexport const fetchBrands = () => async dispatch => {\n  const brands = [];\n  await api.get(`/brands/`).then(resp => {\n    for (let key in resp.data) {\n      brands[key] = resp.data[key];\n    }\n  });\n  dispatch({\n    type: actionTypes.FETCH_BRANDS,\n    payload: brands\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/BrandsActions.js"],"names":["api","actionTypes","actions","fetchBrand","brand_id","dispatch","console","log","get","then","resp","key","data","brand","type","FETCH_BRAND","payload","fetchBrands","brands","FETCH_BRANDS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAGA,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,QAAMP,GAAG,CAACQ,GAAJ,CAAS,WAAUJ,QAAS,EAA5B,EACLK,IADK,CACAC,IAAI,IAAI;AACZ,SAAI,IAAIC,GAAR,IAAeD,IAAI,CAACE,IAApB,EAA0B;AACxBC,MAAAA,KAAK,CAACF,GAAD,CAAL,GAAaD,IAAI,CAACE,IAAL,CAAUD,GAAV,CAAb;AACD;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,GANK,CAAN;AAOAR,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEb,WAAW,CAACc,WAApB;AAAiCC,IAAAA,OAAO,EAAEH;AAA1C,GAAD,CAAR;AACD,CAXM;AAcP,OAAO,MAAMI,WAAW,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACnD,QAAMa,MAAM,GAAG,EAAf;AACA,QAAMlB,GAAG,CAACQ,GAAJ,CAAS,UAAT,EACLC,IADK,CACAC,IAAI,IAAI;AACZ,SAAI,IAAIC,GAAR,IAAeD,IAAI,CAACE,IAApB,EAA0B;AACxBM,MAAAA,MAAM,CAACP,GAAD,CAAN,GAAcD,IAAI,CAACE,IAAL,CAAUD,GAAV,CAAd;AACD;AACF,GALK,CAAN;AAMAN,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEb,WAAW,CAACkB,YAApB;AAAkCH,IAAAA,OAAO,EAAEE;AAA3C,GAAD,CAAR;AACD,CATM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\n\nexport const fetchBrand = (brand_id) => async (dispatch) => {\n  console.log(\"in fetch brand\")\n\n  await api.get(`/brands/${brand_id}`)\n  .then(resp => {\n    for(let key in resp.data) {\n      brand[key] = resp.data[key]\n    }\n    console.log(brand)\n  })\n  dispatch({ type: actionTypes.FETCH_BRAND, payload: brand });\n};\n\n\nexport const fetchBrands = () => async (dispatch) => {\n  const brands = []\n  await api.get(`/brands/`)\n  .then(resp => {\n    for(let key in resp.data) {\n      brands[key] = resp.data[key]\n    }\n  })\n  dispatch({ type: actionTypes.FETCH_BRANDS, payload: brands});\n};\n\n "]},"metadata":{},"sourceType":"module"}