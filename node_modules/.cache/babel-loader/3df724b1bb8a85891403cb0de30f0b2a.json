{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport _ from \"lodash\";\nexport const initFavorites = () => async (dispatch, getState) => {\n  console.log('in init');\n  let user = getState().auth.userId;\n  dispatch(startFetchFavorites());\n  await api.get(`/users/${user}/favorites`).then(resp => {\n    dispatch(setFavorites(resp.data));\n  }).catch(error => {\n    dispatch(fetchFavoritesFailed(error));\n  });\n};\nexport const addFavoriteToCart = (user_id, product_id, size, favorite_id) => async dispatch => {\n  await api.post(`/users/${user_id}/cart/cart_items`, {\n    user_id: user_id,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    favorite_id: JSON.stringify(favorite_id)\n  }).then(dispatch(deleteFavorite(favorite_id)));\n};\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  };\n};\nexport const fetchFavoritesFailed = error => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n    payload: error\n  };\n};\nexport const setFavorites = favorites => {\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites\n  };\n};\nexport const deleteFavorite = favorite_id => async (dispatch, getState) => {\n  let user_id = getState().auth.userId;\n  let id = JSON.stringify(favorite_id);\n  console.log(user_id, favorite_id);\n  await api.delete(`/users/${user_id}/favorites/${id}`, {\n    params: {\n      user_id: user_id.value,\n      favorite_id: JSON.stringify(favorite_id)\n    }\n  }).then(dispatch({\n    type: actionTypes.DELETE_FAVORITE,\n    payload: favorite_id\n  }));\n  ;\n};\nexport const createFavorite = (user_id, product_id, size) => async dispatch => {\n  console.log(size);\n  await api.post(`/users/${user_id}/favorites`, {\n    member_id: user_id,\n    product_id: product_id,\n    size: size\n  }).then(response => dispatch({\n    type: actionTypes.CREATE_FAVORITE,\n    payload: response.data\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/FavoritesActions.js"],"names":["api","actionTypes","_","initFavorites","dispatch","getState","console","log","user","auth","userId","startFetchFavorites","get","then","resp","setFavorites","data","catch","error","fetchFavoritesFailed","addFavoriteToCart","user_id","product_id","size","favorite_id","post","JSON","stringify","deleteFavorite","type","START_FETCH_FAVORITES","FETCH_FAVORITES_FAILED","payload","favorites","SET_FAVORITES","id","delete","params","value","DELETE_FAVORITE","createFavorite","member_id","response","CREATE_FAVORITE"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nimport _ from \"lodash\";\n\nexport const initFavorites = () => async (dispatch, getState) =>{\n  console.log('in init')\n  let user = getState().auth.userId\n  dispatch(startFetchFavorites())\n   await api\n    .get(`/users/${user}/favorites`)\n    .then((resp) => {\n      dispatch(setFavorites(resp.data))\n    })\n    .catch((error) => {\n      dispatch(fetchFavoritesFailed(error))\n    });\n};\n\nexport const addFavoriteToCart = (user_id, product_id, size, favorite_id) => \n  async dispatch => {\n    await api\n    .post(`/users/${user_id}/cart/cart_items`, {\n      user_id: user_id,\n      product_id: JSON.stringify(product_id),\n      size: size,\n      favorite_id: JSON.stringify(favorite_id),\n    })\n    .then(dispatch(deleteFavorite(favorite_id)));\n};\n\n\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  }\n}\n\nexport const fetchFavoritesFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n    payload: error\n  };\n};\n\nexport const setFavorites = (favorites)=> {\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites\n  };\n};\n\nexport const deleteFavorite = (favorite_id) => async (dispatch, getState) => {\n  let user_id = getState().auth.userId\n  let id = JSON.stringify(favorite_id)\nconsole.log(user_id, favorite_id)\n  await api\n    .delete(`/users/${user_id}/favorites/${id}`, {\n      params: {\n        user_id: user_id.value,\n        favorite_id: JSON.stringify(favorite_id)\n      },\n    })\n    .then(\n      dispatch({ type: actionTypes.DELETE_FAVORITE, payload: favorite_id })\n    );\n  ;\n};\n\nexport const createFavorite = (user_id, product_id, size)  => async dispatch => {\n  console.log(size)\n  await api\n    .post(`/users/${user_id}/favorites`, {\n      member_id: user_id,\n      product_id: product_id,\n      size: size,\n    })\n    .then(response =>\n      dispatch({ type: actionTypes.CREATE_FAVORITE, payload: response.data })\n    );\n\n};\n"]},"metadata":{},"sourceType":"module"}