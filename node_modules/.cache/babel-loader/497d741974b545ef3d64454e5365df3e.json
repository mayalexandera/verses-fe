{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const initPlan = () => async (dispatch, getState) => {\n  dispatch(startFetchPlan());\n  let user = getState().auth.userId;\n  console.log(user);\n  await api.get(`/`);\n};\nexport const userPlanStart = (member_id, plan_id) => {\n  console.log('in plan start');\n  return {\n    type: actionTypes.USER_PLAN_START\n  };\n};\nexport const userPlanDelete = (member_id, plan_id) => {\n  return {\n    type: actionTypes.USER_PLAN_DELETE\n  };\n};\nexport const fetchPlans = () => async dispatch => {\n  const response = [];\n  console.log('in fetch plans');\n  dispatch(userPlanStart());\n  await api.get(`/plans`).then(resp => {\n    for (let key in resp.data) {\n      response[key] = resp.data[key];\n    }\n\n    console.log(response);\n    dispatch({\n      type: actionTypes.FETCH_PLANS,\n      plans: response\n    });\n  });\n};\nexport const userPlanInit = (member_id, plan_id) => {\n  return dispatch => {\n    dispatch(userPlanStart());\n    const planData = {\n      member_id: member_id,\n      plan_id: plan_id\n    };\n    api.post(`/plans/`, planData).then(response => {\n      console.log(response.data);\n      dispatch(userPlanSuccess(response.data));\n    }).catch(err => {\n      dispatch(userPlanFail(err.response.data.error));\n    });\n  };\n};\nexport const userPlanSuccess = plan_id => {\n  return {\n    type: actionTypes.USER_PLAN_SUCCESS,\n    plan: plan_id\n  };\n};\nexport const userPlanFail = error => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL,\n    error: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/PlansActions.js"],"names":["api","actionTypes","initPlan","dispatch","getState","startFetchPlan","user","auth","userId","console","log","get","userPlanStart","member_id","plan_id","type","USER_PLAN_START","userPlanDelete","USER_PLAN_DELETE","fetchPlans","response","then","resp","key","data","FETCH_PLANS","plans","userPlanInit","planData","post","userPlanSuccess","catch","err","userPlanFail","error","USER_PLAN_SUCCESS","plan","USER_PLAN_FAIL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC1DD,EAAAA,QAAQ,CAACE,cAAc,EAAf,CAAR;AACA,MAAIC,IAAI,GAAGF,QAAQ,GAAGG,IAAX,CAAgBC,MAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAMN,GAAG,CAACW,GAAJ,CAAS,GAAT,CAAN;AAED,CANM;AAOP,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACnDL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,SAAO;AACLK,IAAAA,IAAI,EAAEd,WAAW,CAACe;AADb,GAAP;AAGA,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,CAACJ,SAAD,EAAYC,OAAZ,KAAwB;AACpD,SAAO;AACLC,IAAAA,IAAI,EAAEd,WAAW,CAACiB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAG,MAAO,MAAMhB,QAAN,IAAkB;AACjD,QAAMiB,QAAQ,GAAG,EAAjB;AACEX,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAP,EAAAA,QAAQ,CAACS,aAAa,EAAd,CAAR;AAEA,QAAMZ,GAAG,CAACW,GAAJ,CAAS,QAAT,EACLU,IADK,CACAC,IAAI,IAAI;AACZ,SAAI,IAAIC,GAAR,IAAeD,IAAI,CAACE,IAApB,EAA0B;AACxBJ,MAAAA,QAAQ,CAACG,GAAD,CAAR,GAAgBD,IAAI,CAACE,IAAL,CAAUD,GAAV,CAAhB;AACD;;AACDd,IAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACAjB,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEd,WAAW,CAACwB,WAApB;AAAiCC,MAAAA,KAAK,EAAEN;AAAxC,KAAD,CAAR;AACD,GAPK,CAAN;AAQD,CAbI;AAgBP,OAAO,MAAMO,YAAY,GAAG,CAACd,SAAD,EAAYC,OAAZ,KAAwB;AACnD,SAAOX,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACS,aAAa,EAAd,CAAR;AACA,UAAMgB,QAAQ,GAAG;AACff,MAAAA,SAAS,EAAEA,SADI;AAEfC,MAAAA,OAAO,EAAEA;AAFM,KAAjB;AAKAd,IAAAA,GAAG,CACF6B,IADD,CACO,SADP,EACiBD,QADjB,EAECP,IAFD,CAEMD,QAAQ,IAAI;AAChBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACI,IAArB;AACArB,MAAAA,QAAQ,CAAC2B,eAAe,CAACV,QAAQ,CAACI,IAAV,CAAhB,CAAR;AACD,KALD,EAMCO,KAND,CAMOC,GAAG,IAAI;AACZ7B,MAAAA,QAAQ,CAAC8B,YAAY,CAACD,GAAG,CAACZ,QAAJ,CAAaI,IAAb,CAAkBU,KAAnB,CAAb,CAAR;AACD,KARD;AASA,GAhBD;AAiBA,CAlBM;AAoBP,OAAO,MAAMJ,eAAe,GAAIhB,OAAD,IAAa;AAC1C,SAAO;AACNC,IAAAA,IAAI,EAAEd,WAAW,CAACkC,iBADZ;AAC+BC,IAAAA,IAAI,EAAEtB;AADrC,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMmB,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAO;AACLnB,IAAAA,IAAI,EAAEd,WAAW,CAACoC,cADb;AAC6BH,IAAAA,KAAK,EAAEA;AADpC,GAAP;AAGD,CAJM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\n\nexport const initPlan = () => async (dispatch, getState) => {\n  dispatch(startFetchPlan())\n  let user = getState().auth.userId\n  console.log(user)\n  await api.get(`/`)\n\n}\nexport const userPlanStart = (member_id, plan_id) => {\n  console.log('in plan start')\n return {\n   type: actionTypes.USER_PLAN_START\n }\n}\n\nexport const userPlanDelete = (member_id, plan_id) => {\n  return {\n    type: actionTypes.USER_PLAN_DELETE,\n  };\n};\n\nexport const fetchPlans = () =>  async dispatch => {\n  const response = []\n    console.log('in fetch plans')\n    dispatch(userPlanStart())\n\n    await api.get(`/plans`)\n    .then(resp => {\n      for(let key in resp.data) {\n        response[key] = resp.data[key]\n      }\n      console.log(response)\n      dispatch({ type: actionTypes.FETCH_PLANS, plans: response });\n    })\n  }\n\n\nexport const userPlanInit = (member_id, plan_id) => {\n return dispatch => {\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: member_id,\n    plan_id: plan_id\n  }\n\n  api\n  .post(`/plans/`, planData)\n  .then(response => {\n    console.log(response.data)\n    dispatch(userPlanSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(userPlanFail(err.response.data.error))\n  })\n }\n}\n\nexport const userPlanSuccess = (plan_id) => {\n  return {\n   type: actionTypes.USER_PLAN_SUCCESS, plan: plan_id\n  }\n}\n\nexport const userPlanFail = (error) => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL, error: error\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}