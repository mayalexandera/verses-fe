{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: null,\n  current_plan: null\n};\n\nconst userPlanStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n    message: null\n  });\n};\n\nconst userPlanDelete = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    message: null,\n    current_plan: null\n  });\n};\n\nconst fetchPlansFail = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    loading: false,\n    error: true,\n    message: action.payload\n  });\n};\n\nconst userPlanSuccess = (state, action) => {\n  if (action.payload.status === 204) {\n    return updateObject(state, {\n      loading: false,\n      error: true,\n      message: action.payload.message\n    });\n  }\n\n  console.log(\"In userplanSuccess\", action.payload);\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    current_plan: { ...action.payload\n    }\n  });\n};\n\nconst userPlanFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    message: null\n  });\n};\n\nconst fetchPlansSuccess = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst fetchPlansStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/plansReducer.js"],"names":["actionTypes","updateObject","initialState","select","loading","error","message","current_plan","userPlanStart","state","action","userPlanDelete","fetchPlansFail","payload","userPlanSuccess","status","console","log","userPlanFail","fetchPlansSuccess","fetchPlansStart","reducer","type","USER_PLAN_SUCCESS","USER_PLAN_START","USER_PLAN_FAIL","USER_PLAN_DELETE","FETCH_PLANS_START","FETCH_PLANS_FAIL","FETCH_PLANS_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,OAAO,EAAE,IAJU;AAKnBC,EAAAA,YAAY,EAAE;AALK,CAArB;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeD,IAAAA,OAAO,EAAE,IAAxB;AAA8BE,IAAAA,OAAO,EAAE;AAAvC,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMK,cAAc,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBL,IAAAA,OAAO,EAAE,KADgB;AAEzBC,IAAAA,KAAK,EAAE,IAFkB;AAGzBC,IAAAA,OAAO,EAAE,IAHgB;AAIzBC,IAAAA,YAAY,EAAE;AAJW,GAAR,CAAnB;AAMD,CAPD;;AASA,MAAMK,cAAc,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACxC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,MAAM,EAAEO,MAAM,CAACG,OADU;AAEzBT,IAAAA,OAAO,EAAE,KAFgB;AAGzBC,IAAAA,KAAK,EAAE,IAHkB;AAIzBC,IAAAA,OAAO,EAAEI,MAAM,CAACG;AAJS,GAAR,CAAnB;AAMD,CAPD;;AASA,MAAMC,eAAe,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzC,MAAIA,MAAM,CAACG,OAAP,CAAeE,MAAf,KAA0B,GAA9B,EAAmC;AACjC,WAAOd,YAAY,CAACQ,KAAD,EAAQ;AACzBL,MAAAA,OAAO,EAAE,KADgB;AAEzBC,MAAAA,KAAK,EAAE,IAFkB;AAGzBC,MAAAA,OAAO,EAAEI,MAAM,CAACG,OAAP,CAAeP;AAHC,KAAR,CAAnB;AAKD;;AACDU,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCP,MAAM,CAACG,OAAzC;AACA,SAAOZ,YAAY,CAACQ,KAAD,EAAQ;AACzBJ,IAAAA,KAAK,EAAE,IADkB;AAEzBD,IAAAA,OAAO,EAAE,KAFgB;AAGzBG,IAAAA,YAAY,EAAE,EAAE,GAAGG,MAAM,CAACG;AAAZ;AAHW,GAAR,CAAnB;AAKD,CAdD;;AAgBA,MAAMK,YAAY,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBJ,IAAAA,KAAK,EAAEK,MAAM,CAACL,KADW;AAEzBD,IAAAA,OAAO,EAAE,KAFgB;AAGzBE,IAAAA,OAAO,EAAE;AAHgB,GAAR,CAAnB;AAKD,CAND;;AAQA,MAAMa,iBAAiB,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AACzBN,IAAAA,MAAM,EAAEO,MAAM,CAACG,OADU;AAEzBR,IAAAA,KAAK,EAAE,IAFkB;AAGzBD,IAAAA,OAAO,EAAE,KAHgB;AAIzBE,IAAAA,OAAO,EAAE;AAJgB,GAAR,CAAnB;AAMD,CAPD;;AASA,MAAMc,eAAe,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOT,YAAY,CAACQ,KAAD,EAAQ;AAAEJ,IAAAA,KAAK,EAAE,IAAT;AAAeD,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMiB,OAAO,GAAG,CAACZ,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACY,IAAf;AACE,SAAKtB,WAAW,CAACuB,iBAAjB;AACE,aAAOT,eAAe,CAACL,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKV,WAAW,CAACwB,eAAjB;AACE,aAAOhB,aAAa,CAACC,KAAD,EAAQC,MAAR,CAApB;;AACF,SAAKV,WAAW,CAACyB,cAAjB;AACE,aAAOP,YAAY,CAACT,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKV,WAAW,CAAC0B,gBAAjB;AACE,aAAOf,cAAc,CAACF,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKV,WAAW,CAAC2B,iBAAjB;AACE,aAAOP,eAAe,CAACX,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKV,WAAW,CAAC4B,gBAAjB;AACE,aAAOhB,cAAc,CAACH,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKV,WAAW,CAAC6B,mBAAjB;AACE,aAAOV,iBAAiB,CAACV,KAAD,EAAQC,MAAR,CAAxB;;AACF;AACE,aAAOD,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeY,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: null,\n  current_plan: null,\n};\n\nconst userPlanStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true, message: null });\n};\n\nconst userPlanDelete = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    message: null,\n    current_plan: null,\n  });\n};\n\nconst fetchPlansFail = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    loading: false,\n    error: true,\n    message: action.payload,\n  });\n};\n\nconst userPlanSuccess = (state, action) => {\n  if (action.payload.status === 204) {\n    return updateObject(state, {\n      loading: false,\n      error: true,\n      message: action.payload.message,\n    });\n  }\n  console.log(\"In userplanSuccess\", action.payload)\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    current_plan: { ...action.payload },\n  });\n};\n\nconst userPlanFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    message: null,\n  });\n};\n\nconst fetchPlansSuccess = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst fetchPlansStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}