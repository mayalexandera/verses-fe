{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport const addProductToCart = (user_id, product_id, size) => async (dispatch) => {\n  await api.post(`/users/${user_id}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size: size\n  }).then(resp => dispatch({\n    type: actionTypes.ADD_PRODUCT_TO_CART,\n    payload: resp.data\n  })).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const addCartToFavorite = (member_id, product_id, size, cart_item_id) => async dispatch => {\n  await api.post(`/users/${member_id}/favorites`, {\n    member_id: member_id,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id)\n  }).then(dispatch(removeProductFromCart(cart_item_id)));\n};\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api.get(`/users/${user}/cart`).then(response => {\n    dispatch(setCart(response.data));\n  }).catch(error => {\n    dispatch(fetchCartFailed(error));\n  });\n};\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART\n  };\n};\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/refresh`).then(response => dispatch(setCart(response)));\n};\nexport const fetchCartFailed = error => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error\n  };\n};\nexport const addProductToCartFailed = err => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: err\n  };\n};\nexport const setCart = cart => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart\n  };\n};\nexport const removeProductFromCart = cart_item_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/cart_items/`, {\n    params: {\n      item_id: cart_item_id\n    }\n  }).then(dispatch({\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n    payload: cart_item_id\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/CartActions.js"],"names":["api","actionTypes","addProductToCart","user_id","product_id","size","dispatch","post","JSON","stringify","then","resp","type","ADD_PRODUCT_TO_CART","payload","data","catch","err","addProductToCartFailed","addCartToFavorite","member_id","cart_item_id","removeProductFromCart","initCart","getState","startFetchCart","user","auth","userId","get","response","setCart","error","fetchCartFailed","START_FETCH_CART","refreshCart","delete","FETCH_CART_FAILED","ADD_PRODUCT_TO_CART_FAILED","cart","SET_CART","params","item_id","REMOVE_PRODUCT_FROM_CART"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const addProductToCart = (user_id, product_id, size) => async (\n  dispatch\n) => {\n  await api\n    .post(`/users/${user_id}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size: size,\n    })\n    .then((resp) =>\n      dispatch({\n        type: actionTypes.ADD_PRODUCT_TO_CART,\n        payload: resp.data,\n      })\n    )\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const addCartToFavorite = (\n  member_id,\n  product_id,\n  size,\n  cart_item_id\n) => async (dispatch) => {\n  await api\n    .post(`/users/${member_id}/favorites`, {\n      member_id: member_id,\n      product_id: JSON.stringify(product_id),\n      size: size,\n      cart_item_id: JSON.stringify(cart_item_id),\n    })\n    .then(dispatch(removeProductFromCart(cart_item_id)));\n};\n\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api\n    .get(`/users/${user}/cart`)\n    .then((response) => {\n      dispatch(setCart(response.data));\n    })\n    .catch((error) => {\n      dispatch(fetchCartFailed(error));\n    });\n};\n\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART,\n  };\n};\n\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/refresh`)\n    .then((response) => dispatch(setCart(response)));\n};\n\nexport const fetchCartFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const addProductToCartFailed = (err) => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: err,\n  };\n};\n\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart,\n  };\n};\n\nexport const removeProductFromCart = (cart_item_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/cart_items/`, {\n      params: { item_id: cart_item_id },\n    })\n    .then(\n      dispatch({\n        type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n        payload: cart_item_id\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}