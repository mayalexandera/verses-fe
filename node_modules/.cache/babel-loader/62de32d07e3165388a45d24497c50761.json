{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/Cart.js\";\nimport React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nclass Cart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickHandler = e => {\n      e.preventDefault();\n      this.props.current_user === null ? this.props.history.push(\"/plans\") : this.authorized();\n    };\n\n    this.authorized = () => {\n      !this.props.current_user.plan_membership_id ? this.props.history.push(\"/plans\") : this.props.initOrder();\n    };\n\n    this.findProduct = item => {\n      let product;\n      product = this.props.products.filter(product => product.id === item.product_id);\n      return product !== undefined ? product[0] : null;\n    };\n\n    this.findBrand = product => {\n      let brand;\n\n      if (product !== undefined && product !== null) {\n        brand = this.props.brands.filter(brand => brand.id === product.brand_id);\n        return brand[0];\n      } else {\n        return null;\n      }\n    };\n\n    this.renderList = () => {\n      return this.props.cart_items === undefined ? null : this.props.cart_items.map(item => {\n        let product = this.findProduct(item);\n        let brand = this.findBrand(product);\n        return /*#__PURE__*/React.createElement(CartItem, {\n          cart_item: item,\n          brand: brand,\n          key: item.id,\n          product: product,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.initCart();\n  }\n\n  render() {\n    let submitButton, message;\n    this.props.cart_items === undefined ? message = \"0 Items | $0.00\" : message = null;\n    this.props.cart_items === undefined || this.props.cart_items.length === 0 ? submitButton = null : submitButton = /*#__PURE__*/React.createElement(\"button\", {\n      id: \"add-to-favorites-button\",\n      onClick: e => this.clickHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Submit\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, \"Cart\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"guest-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, this.renderList()), submitButton);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.auth.current_user,\n    cart_items: state.cart.cart_items,\n    products: state.product.select,\n    brands: state.brand.select\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initCart: () => dispatch(actions.initCart()),\n    addToCart: (user_id, product_id, size) => dispatch(actions.addProductToCart(user_id, product_id, size)),\n    removeProductFromCart: (user_id, product_id, size) => dispatch(actions.removeProductFromCart(user_id, product_id, size)),\n    initOrder: () => dispatch(actions.initOrder())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/Cart.js"],"names":["React","actions","connect","CartItem","Cart","Component","clickHandler","e","preventDefault","props","current_user","history","push","authorized","plan_membership_id","initOrder","findProduct","item","product","products","filter","id","product_id","undefined","findBrand","brand","brands","brand_id","renderList","cart_items","map","componentDidMount","initCart","render","submitButton","message","length","mapStateToProps","state","auth","cart","select","mapDispatchToProps","dispatch","addToCart","user_id","size","addProductToCart","removeProductFromCart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"./CartItem\";\n\nclass Cart extends React.Component {\n  componentDidMount() {\n    this.props.initCart();\n  }\n\n  clickHandler = (e) => {\n    e.preventDefault();\n    this.props.current_user === null\n      ? this.props.history.push(\"/plans\")\n      : this.authorized();\n  };\n\n  authorized = () => {\n    !this.props.current_user.plan_membership_id\n      ? this.props.history.push(\"/plans\")\n      : this.props.initOrder();\n  };\n\n  findProduct = (item) => {\n    let product;\n    product = this.props.products.filter(\n      (product) => product.id === item.product_id\n    );\n    return product !== undefined ? product[0] : null;\n  };\n\n  findBrand = (product) => {\n    let brand;\n    if (product !== undefined && product !== null) {\n      brand = this.props.brands.filter(\n        (brand) => brand.id === product.brand_id\n      );\n      return brand[0];\n    } else {\n      return null;\n    }\n  };\n\n  renderList = () => {\n    return this.props.cart_items === undefined ? (\n      null\n    ) : (\n      this.props.cart_items.map((item) => {\n        let product = this.findProduct(item);\n        let brand = this.findBrand(product);\n        return (\n          <CartItem\n            cart_item={item}\n            brand={brand}\n            key={item.id}\n            product={product}\n          />\n        );\n      })\n    );\n  };\n\n  render() {\n    let submitButton, message\n    this.props.cart_items === undefined ? message = \"0 Items | $0.00\" : message = null\n    this.props.cart_items === undefined || this.props.cart_items.length === 0\n      ? (submitButton = null)\n      : (submitButton = (\n          <button\n            id='add-to-favorites-button'\n            onClick={(e) => this.clickHandler(e)}\n          >\n            Submit\n          </button>\n        ));\n    return (\n      <div className='section-products'>\n          Cart\n          <div className=\"guest-message\">\n            {message}\n          </div>\n        <div className='cart-container'>\n          {this.renderList()}\n        </div>\n        {submitButton}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    current_user: state.auth.current_user,\n    cart_items: state.cart.cart_items,\n    products: state.product.select,\n    brands: state.brand.select,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initCart: () => dispatch(actions.initCart()),\n    addToCart: (user_id, product_id, size) =>\n      dispatch(actions.addProductToCart(user_id, product_id, size)),\n    removeProductFromCart: (user_id, product_id, size) =>\n      dispatch(actions.removeProductFromCart(user_id, product_id, size)),\n    initOrder: () => dispatch(actions.initOrder()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}