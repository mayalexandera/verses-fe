{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const setShowBrand = brand_id => async (dispatch, getState) => {\n  console.log(\"in fetch brand\", 'brand-id', brand_id);\n  await api.get(`/brands/${brand_id}`).then(resp => {\n    console.log(resp.data);\n    dispatch({\n      type: actionTypes.SET_SHOW_BRAND,\n      brand: resp.data\n    });\n  });\n};\nexport const initBrands = () => async dispatch => {\n  await api.get(`/brands/`).then(resp => {\n    dispatch(setBrands(resp.data));\n  }).catch(error => {\n    dispatch(fetchBrandsFailed(error));\n  });\n};\nexport const setBrands = brands => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  };\n};\nexport const fetchBrandsFailed = error => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/BrandsActions.js"],"names":["api","actionTypes","setShowBrand","brand_id","dispatch","getState","console","log","get","then","resp","data","type","SET_SHOW_BRAND","brand","initBrands","setBrands","catch","error","fetchBrandsFailed","brands","SET_BRANDS","FETCH_BRANDS_FAILED","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEtEC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,UAA9B,EAA0CJ,QAA1C;AACA,QAAMH,GAAG,CAACQ,GAAJ,CAAS,WAAUL,QAAS,EAA5B,EAA+BM,IAA/B,CAAqCC,IAAD,IAAU;AAClDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,IAAjB;AACAP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAEX,WAAW,CAACY,cAApB;AAAoCC,MAAAA,KAAK,EAAEJ,IAAI,CAACC;AAAhD,KAAD,CAAR;AACD,GAHK,CAAN;AAID,CAPM;AASP,OAAO,MAAMI,UAAU,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAClD,QAAMJ,GAAG,CACNQ,GADG,CACE,UADF,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdN,IAAAA,QAAQ,CAACY,SAAS,CAACN,IAAI,CAACC,IAAN,CAAV,CAAR;AACD,GAJG,EAKHM,KALG,CAKIC,KAAD,IAAW;AAChBd,IAAAA,QAAQ,CAACe,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACD,GAPG,CAAN;AAQD,CATM;AAWP,OAAO,MAAMF,SAAS,GAAII,MAAD,IAAY;AACnC,SAAO;AACLR,IAAAA,IAAI,EAAEX,WAAW,CAACoB,UADb;AAELD,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMD,iBAAiB,GAAID,KAAD,IAAW;AAC1C,SAAO;AACLN,IAAAA,IAAI,EAAEX,WAAW,CAACqB,mBADb;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const setShowBrand = (brand_id) => async (dispatch, getState) => {\n\n  console.log(\"in fetch brand\", 'brand-id', brand_id);\n  await api.get(`/brands/${brand_id}`).then((resp) => {\n    console.log(resp.data)\n    dispatch({ type: actionTypes.SET_SHOW_BRAND, brand: resp.data });\n  });\n}\n\nexport const initBrands = () => async (dispatch) => {\n  await api\n    .get(`/brands/`)\n    .then((resp) => {\n      dispatch(setBrands(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchBrandsFailed(error));\n    });\n};\n\nexport const setBrands = (brands) => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  }\n}\n\nexport const fetchBrandsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error,\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}