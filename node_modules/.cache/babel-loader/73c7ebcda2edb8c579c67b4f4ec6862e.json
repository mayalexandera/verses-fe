{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\"; // export const initPlan = () => async (dispatch, getState) => {\n//   dispatch(startFetchPlan())\n//   let user = getState().auth.userId\n//   console.log(user)\n//   await api.get(`/`)\n// }\n\nexport const userPlanStart = plan_id => {\n  console.log('in plan start');\n  return {\n    type: actionTypes.USER_PLAN_START\n  };\n};\nexport const userPlanDelete = (member_id, plan_id) => {\n  return {\n    type: actionTypes.USER_PLAN_DELETE\n  };\n};\nexport const fetchPlans = () => async dispatch => {\n  const response = [];\n  console.log('in fetch plans');\n  dispatch(userPlanStart());\n  await api.get(`/plans`).then(resp => {\n    for (let key in resp.data) {\n      response[key] = resp.data[key];\n    }\n\n    console.log(response);\n    dispatch({\n      type: actionTypes.FETCH_PLANS,\n      plans: response\n    });\n  });\n};\nexport const userPlanInit = (member_id, plan_id) => {\n  return dispatch => {\n    dispatch(userPlanStart());\n    const planData = {\n      member_id: member_id,\n      plan_id: plan_id\n    };\n    api.post(`/plans/`, planData).then(response => {\n      console.log(response.data);\n      dispatch(userPlanSuccess(response.data));\n    }).catch(err => {\n      dispatch(userPlanFail(err.response.data.error));\n    });\n  };\n};\nexport const userPlanSuccess = plan_id => {\n  return {\n    type: actionTypes.USER_PLAN_SUCCESS,\n    plan: plan_id\n  };\n};\nexport const userPlanFail = error => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL,\n    error: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/PlansActions.js"],"names":["api","actionTypes","userPlanStart","plan_id","console","log","type","USER_PLAN_START","userPlanDelete","member_id","USER_PLAN_DELETE","fetchPlans","dispatch","response","get","then","resp","key","data","FETCH_PLANS","plans","userPlanInit","planData","post","userPlanSuccess","catch","err","userPlanFail","error","USER_PLAN_SUCCESS","plan","USER_PLAN_FAIL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAGA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,SAAO;AACLC,IAAAA,IAAI,EAAEL,WAAW,CAACM;AADb,GAAP;AAGA,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,CAACC,SAAD,EAAYN,OAAZ,KAAwB;AACpD,SAAO;AACLG,IAAAA,IAAI,EAAEL,WAAW,CAACS;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAG,MAAO,MAAMC,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,EAAjB;AACET,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAO,EAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AAEA,QAAMF,GAAG,CAACc,GAAJ,CAAS,QAAT,EACLC,IADK,CACAC,IAAI,IAAI;AACZ,SAAI,IAAIC,GAAR,IAAeD,IAAI,CAACE,IAApB,EAA0B;AACxBL,MAAAA,QAAQ,CAACI,GAAD,CAAR,GAAgBD,IAAI,CAACE,IAAL,CAAUD,GAAV,CAAhB;AACD;;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAD,IAAAA,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAEL,WAAW,CAACkB,WAApB;AAAiCC,MAAAA,KAAK,EAAEP;AAAxC,KAAD,CAAR;AACD,GAPK,CAAN;AAQD,CAbI;AAgBP,OAAO,MAAMQ,YAAY,GAAG,CAACZ,SAAD,EAAYN,OAAZ,KAAwB;AACnD,SAAOS,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACV,aAAa,EAAd,CAAR;AACA,UAAMoB,QAAQ,GAAG;AACfb,MAAAA,SAAS,EAAEA,SADI;AAEfN,MAAAA,OAAO,EAAEA;AAFM,KAAjB;AAKAH,IAAAA,GAAG,CACFuB,IADD,CACO,SADP,EACiBD,QADjB,EAECP,IAFD,CAEMF,QAAQ,IAAI;AAChBT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACK,IAArB;AACAN,MAAAA,QAAQ,CAACY,eAAe,CAACX,QAAQ,CAACK,IAAV,CAAhB,CAAR;AACD,KALD,EAMCO,KAND,CAMOC,GAAG,IAAI;AACZd,MAAAA,QAAQ,CAACe,YAAY,CAACD,GAAG,CAACb,QAAJ,CAAaK,IAAb,CAAkBU,KAAnB,CAAb,CAAR;AACD,KARD;AASA,GAhBD;AAiBA,CAlBM;AAoBP,OAAO,MAAMJ,eAAe,GAAIrB,OAAD,IAAa;AAC1C,SAAO;AACNG,IAAAA,IAAI,EAAEL,WAAW,CAAC4B,iBADZ;AAC+BC,IAAAA,IAAI,EAAE3B;AADrC,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMwB,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAO;AACLtB,IAAAA,IAAI,EAAEL,WAAW,CAAC8B,cADb;AAC6BH,IAAAA,KAAK,EAAEA;AADpC,GAAP;AAGD,CAJM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\n\n// export const initPlan = () => async (dispatch, getState) => {\n//   dispatch(startFetchPlan())\n//   let user = getState().auth.userId\n//   console.log(user)\n//   await api.get(`/`)\n\n// }\nexport const userPlanStart = (plan_id) => {\n  console.log('in plan start')\n return {\n   type: actionTypes.USER_PLAN_START\n }\n}\n\nexport const userPlanDelete = (member_id, plan_id) => {\n  return {\n    type: actionTypes.USER_PLAN_DELETE,\n  };\n};\n\nexport const fetchPlans = () =>  async dispatch => {\n  const response = []\n    console.log('in fetch plans')\n    dispatch(userPlanStart())\n\n    await api.get(`/plans`)\n    .then(resp => {\n      for(let key in resp.data) {\n        response[key] = resp.data[key]\n      }\n      console.log(response)\n      dispatch({ type: actionTypes.FETCH_PLANS, plans: response });\n    })\n  }\n\n\nexport const userPlanInit = (member_id, plan_id) => {\n return dispatch => {\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: member_id,\n    plan_id: plan_id\n  }\n\n  api\n  .post(`/plans/`, planData)\n  .then(response => {\n    console.log(response.data)\n    dispatch(userPlanSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(userPlanFail(err.response.data.error))\n  })\n }\n}\n\nexport const userPlanSuccess = (plan_id) => {\n  return {\n   type: actionTypes.USER_PLAN_SUCCESS, plan: plan_id\n  }\n}\n\nexport const userPlanFail = (error) => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL, error: error\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}