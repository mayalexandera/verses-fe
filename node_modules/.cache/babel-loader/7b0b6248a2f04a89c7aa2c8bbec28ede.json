{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = user => {\n  actions.userPlanSuccess(user);\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user: user.user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => async dispatch => {\n  dispatch(authStart());\n  const authData = {\n    email: email,\n    password: password,\n    name: name,\n    returnSecureToken: true\n  };\n  let path = !isSignup ? `/session` : `/users/`;\n  await api.post(path, authData).then(response => {\n    dispatch(authSuccess(response.data));\n    localStorage.setItem(\"token\", response.data.user.session_token);\n    localStorage.setItem(\"userId\", response.data.user.id);\n  });\n};\nexport const fetchUser = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(authStart());\n  JSON.stringify(user);\n  await api.get(`/users/${user}`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n    ;\n    console.log(response.data);\n  }).then(response => {\n    actions.userPlanSuccess(response.data);\n    console.log(response.data);\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = response => {\n  console.log(response);\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: response.user\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","actions","authStart","type","AUTH_START","authSuccess","user","userPlanSuccess","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","dispatch","authData","returnSecureToken","path","post","then","response","data","setItem","session_token","id","fetchUser","getState","userId","JSON","stringify","get","fetchUserSuccess","console","log","catch","err","fetchUserFail","FETCH_USER_FAIL","FETCH_USER_SUCCESS","setAuthRedirectPath","SET_AUTH_REDIRECT_PATH"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (user) => {\n  actions.userPlanSuccess(user)\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    user: user.user\n  };\n};\n\nexport const authFail = (error) => {\n\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => \n   async (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n\n    await api\n      .post(path, authData)\n      .then((response) => {\n          dispatch(authSuccess(response.data))\n          localStorage.setItem(\"token\", response.data.user.session_token);\n          localStorage.setItem(\"userId\", response.data.user.id);\n        }\n      )\n  };\n\n\nexport const fetchUser = () => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  dispatch(authStart())\n  JSON.stringify(user);\n  await api\n    .get(`/users/${user}`)\n    .then((response) => {\n      dispatch(fetchUserSuccess(response.data));\n    ;console.log(response.data)}).then(response => {actions.userPlanSuccess(response.data); console.log(response.data)})\n    .catch((err) => {\n      dispatch(fetchUserFail(err));\n    })\n};\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (response) => {\n  console.log(response)\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: response.user\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};"]},"metadata":{},"sourceType":"module"}