{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: false,\n  current_user: null\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(action);\n  localStorage.setItem(\"token\", action.idToken);\n  console.log(localStorage);\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst fetchUserStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst fetchUserFail = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false\n  });\n};\n\nconst fetchUserSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    current_user: action.user,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/AuthReducer.js"],"names":["actionTypes","updateObject","initialState","token","localStorage","getItem","userId","JSON","parse","error","loading","current_user","authStart","state","action","authSuccess","console","log","setItem","idToken","fetchUserStart","fetchUserFail","fetchUserSuccess","user","authFail","authLogout","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","FETCH_USER_SUCCESS","FETCH_USER_START","FETCH_USER_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: false,\n  current_user: null\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(action)\n  localStorage.setItem(\"token\", action.idToken);\n  console.log(localStorage)\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n  });\n};\n\nconst fetchUserStart = (state, action) => {\n  return updateObject(state, {error: null, loading: true})\n}\n\nconst fetchUserFail = (state, action) => {\n  return updateObject(state, { error: true, loading: false})\n}\n\nconst fetchUserSuccess = (state, action) => {\n  \n  return updateObject(state, {error: null, current_user: action.user, loading: false})\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null, current_user: null });\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}