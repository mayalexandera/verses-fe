{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const setShowBrand = brand => async dispatch => {\n  console.log(\"in fetch brand\", 'brand-id', brand);\n  dispatch({\n    type: actionTypes.SET_SHOW_BRAND,\n    brand: brand\n  });\n};\nexport const initBrands = () => async dispatch => {\n  await api.get(`/brands/`).then(resp => {\n    dispatch(setBrands(resp.data));\n  }).catch(error => {\n    dispatch(fetchBrandsFailed(error));\n  });\n};\nexport const setBrands = brands => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  };\n};\nexport const fetchBrandsFailed = error => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/BrandsActions.js"],"names":["api","actionTypes","setShowBrand","brand","dispatch","console","log","type","SET_SHOW_BRAND","initBrands","get","then","resp","setBrands","data","catch","error","fetchBrandsFailed","brands","SET_BRANDS","FETCH_BRANDS_FAILED","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW,MAAOC,QAAP,IAAoB;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,UAA9B,EAA0CH,KAA1C;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,WAAW,CAACO,cAApB;AAAoCL,IAAAA,KAAK,EAAEA;AAA3C,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,UAAU,GAAG,MAAM,MAAOL,QAAP,IAAoB;AAClD,QAAMJ,GAAG,CACNU,GADG,CACE,UADF,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdR,IAAAA,QAAQ,CAACS,SAAS,CAACD,IAAI,CAACE,IAAN,CAAV,CAAR;AACD,GAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBZ,IAAAA,QAAQ,CAACa,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACD,GAPG,CAAN;AAQD,CATM;AAWP,OAAO,MAAMH,SAAS,GAAIK,MAAD,IAAY;AACnC,SAAO;AACLX,IAAAA,IAAI,EAAEN,WAAW,CAACkB,UADb;AAELD,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMD,iBAAiB,GAAID,KAAD,IAAW;AAC1C,SAAO;AACLT,IAAAA,IAAI,EAAEN,WAAW,CAACmB,mBADb;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const setShowBrand = (brand) => async (dispatch) => {\n  console.log(\"in fetch brand\", 'brand-id', brand);\n  dispatch({ type: actionTypes.SET_SHOW_BRAND, brand: brand});\n}\n\nexport const initBrands = () => async (dispatch) => {\n  await api\n    .get(`/brands/`)\n    .then((resp) => {\n      dispatch(setBrands(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchBrandsFailed(error));\n    });\n};\n\nexport const setBrands = (brands) => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  }\n}\n\nexport const fetchBrandsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error,\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}