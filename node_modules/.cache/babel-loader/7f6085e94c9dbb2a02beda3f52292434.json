{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\"; // export const initPlan = () => async (dispatch, getState) => {\n//   dispatch(startFetchPlan())\n//   let user = getState().auth.userId\n//   console.log(user)\n//   await api.get(`/`)\n// }\n\nexport const userPlanStart = () => {\n  console.log('in plan start');\n  return {\n    type: actionTypes.USER_PLAN_START\n  };\n};\nexport const userPlanDelete = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/plan_membership`).then(dispatch({\n    type: actionTypes.USER_PLAN_DELETE\n  }));\n};\nexport const initFetchPlans = () => async dispatch => {\n  dispatch(fetchPlansStart());\n  await api.get(`/plans`).then(resp => {\n    dispatch(fetchPlansSuccess(resp.data));\n  }).catch(err => {\n    dispatch(fetchPlansFail(err.message));\n  });\n};\nexport const fetchPlansFail = error => {\n  return {\n    type: actionTypes.FETCH_PLANS_FAIL,\n    payload: error\n  };\n};\nexport const fetchPlansStart = () => {\n  return {\n    type: actionTypes.FETCH_PLANS_START\n  };\n};\nexport const initPlanMembership = plan_id => async (dispatch, getState) => {\n  console.log('in initPlanMembership');\n  let user = getState().auth.userId;\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: user.id,\n    plan_id: plan_id\n  };\n  await api.post(`/users/${user}/plan_membership`, planData).then(response => {\n    console.log(response.data);\n    dispatch(userPlanSuccess(response.data));\n  }).catch(err => {\n    dispatch(userPlanFail(err.message));\n  });\n};\nexport const userPlanSuccess = plan_id => {\n  return {\n    type: actionTypes.USER_PLAN_SUCCESS,\n    payload: plan_id\n  };\n};\nexport const userPlanFail = error => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/PlansActions.js"],"names":["api","actionTypes","userPlanStart","console","log","type","USER_PLAN_START","userPlanDelete","dispatch","getState","user","auth","userId","delete","then","USER_PLAN_DELETE","initFetchPlans","fetchPlansStart","get","resp","fetchPlansSuccess","data","catch","err","fetchPlansFail","message","error","FETCH_PLANS_FAIL","payload","FETCH_PLANS_START","initPlanMembership","plan_id","planData","member_id","id","post","response","userPlanSuccess","userPlanFail","USER_PLAN_SUCCESS","USER_PLAN_FAIL"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAGA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AADb,GAAP;AAGA,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAIC,IAAI,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,MAA3B;AACA,QAAMZ,GAAG,CAACa,MAAJ,CAAY,UAASH,IAAK,kBAA1B,EAA6CI,IAA7C,CAAkDN,QAAQ,CAAC;AAC/DH,IAAAA,IAAI,EAAEJ,WAAW,CAACc;AAD6C,GAAD,CAA1D,CAAN;AAID,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAACS,eAAe,EAAhB,CAAR;AACA,QAAMjB,GAAG,CAACkB,GAAJ,CAAS,QAAT,EACLJ,IADK,CACAK,IAAI,IAAI;AACZX,IAAAA,QAAQ,CAACY,iBAAiB,CAACD,IAAI,CAACE,IAAN,CAAlB,CAAR;AACD,GAHK,EAILC,KAJK,CAICC,GAAG,IAAI;AACZf,IAAAA,QAAQ,CAACgB,cAAc,CAACD,GAAG,CAACE,OAAL,CAAf,CAAR;AACD,GANK,CAAN;AAOD,CATM;AAYP,OAAO,MAAMD,cAAc,GAAIE,KAAD,IAAW;AACvC,SAAO;AACLrB,IAAAA,IAAI,EAAEJ,WAAW,CAAC0B,gBADb;AAC+BC,IAAAA,OAAO,EAAEF;AADxC,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMT,eAAe,GAAG,MAAM;AACnC,SAAO;AAACZ,IAAAA,IAAI,EAAEJ,WAAW,CAAC4B;AAAnB,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,kBAAkB,GAAIC,OAAD,IAAa,OAAOvB,QAAP,EAAiBC,QAAjB,KAA6B;AAC1EN,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,MAAIM,IAAI,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,MAA3B;AACAJ,EAAAA,QAAQ,CAACN,aAAa,EAAd,CAAR;AACA,QAAM8B,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAEvB,IAAI,CAACwB,EADD;AAEfH,IAAAA,OAAO,EAAEA;AAFM,GAAjB;AAIA,QAAM/B,GAAG,CACRmC,IADK,CACC,UAASzB,IAAK,kBADf,EACkCsB,QADlC,EAELlB,IAFK,CAEAsB,QAAQ,IAAI;AAChBjC,IAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAQ,CAACf,IAArB;AACAb,IAAAA,QAAQ,CAAC6B,eAAe,CAACD,QAAQ,CAACf,IAAV,CAAhB,CAAR;AACD,GALK,EAMLC,KANK,CAMCC,GAAG,IAAI;AACZf,IAAAA,QAAQ,CAAC8B,YAAY,CAACf,GAAG,CAACE,OAAL,CAAb,CAAR;AACD,GARK,CAAN;AASA,CAjBK;AAmBP,OAAO,MAAMY,eAAe,GAAIN,OAAD,IAAa;AAC1C,SAAO;AACN1B,IAAAA,IAAI,EAAEJ,WAAW,CAACsC,iBADZ;AAC+BX,IAAAA,OAAO,EAAEG;AADxC,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIZ,KAAD,IAAW;AACrC,SAAO;AACLrB,IAAAA,IAAI,EAAEJ,WAAW,CAACuC,cADb;AAC6BZ,IAAAA,OAAO,EAAEF;AADtC,GAAP;AAGD,CAJM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\n\n// export const initPlan = () => async (dispatch, getState) => {\n//   dispatch(startFetchPlan())\n//   let user = getState().auth.userId\n//   console.log(user)\n//   await api.get(`/`)\n\n// }\nexport const userPlanStart = () => {\n  console.log('in plan start')\n return {\n   type: actionTypes.USER_PLAN_START\n }\n}\n\nexport const userPlanDelete = () => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api.delete(`/users/${user}/plan_membership`).then(dispatch({\n    type: actionTypes.USER_PLAN_DELETE,\n  })\n  )\n};\n\nexport const initFetchPlans = () => async (dispatch) => {\n  dispatch(fetchPlansStart())\n  await api.get(`/plans`)\n  .then(resp => {\n    dispatch(fetchPlansSuccess(resp.data))\n  })\n  .catch(err => {\n    dispatch(fetchPlansFail(err.message))\n  })\n}\n\n\nexport const fetchPlansFail = (error) => {\n  return {\n    type: actionTypes.FETCH_PLANS_FAIL, payload: error\n  }\n}\n\nexport const fetchPlansStart = () => {\n  return {type: actionTypes.FETCH_PLANS_START }\n}\n\nexport const initPlanMembership = (plan_id) => async (dispatch, getState) =>{\n  console.log('in initPlanMembership')\n  let user = getState().auth.userId\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: user.id,\n    plan_id: plan_id\n  }\n  await api\n  .post(`/users/${user}/plan_membership`, planData)\n  .then(response => {\n    console.log(response.data)\n    dispatch(userPlanSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(userPlanFail(err.message))\n  })\n }\n\nexport const userPlanSuccess = (plan_id) => {\n  return {\n   type: actionTypes.USER_PLAN_SUCCESS, payload: plan_id\n  }\n}\n\nexport const userPlanFail = (error) => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL, payload: error\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}