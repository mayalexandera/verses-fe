{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart: [],\n  cart_items: []\n};\n\nconst fetchCart = (state, action) => {\n  return updateObject(state, {\n    cart: action.payload\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state, action.payload];\n  return updateObject(state, {\n    cart_items: updatedCart\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CART:\n      return setBrands(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return setBrand(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/HELP/verses_fe-85220142a93b1b708e9311944f3c85a3d9621c1e/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart","cart_items","fetchCart","state","action","payload","addProductToCart","updatedCart","reducer","type","FETCH_CART","setBrands","ADD_PRODUCT_TO_CART","setBrand"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAGA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBH,IAAAA,IAAI,EAAEI,MAAM,CAACC;AADY,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMC,gBAAgB,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAMG,WAAW,GAAG,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CAApB;AACA,SAAOP,YAAY,CAACK,KAAD,EAAQ;AACzBF,IAAAA,UAAU,EAAEM;AADa,GAAR,CAAnB;AAGD,CALD;;AAMA,MAAMC,OAAO,GAAG,CAACL,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACK,IAAf;AACE,SAAKZ,WAAW,CAACa,UAAjB;AACE,aAAOC,SAAS,CAACR,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKP,WAAW,CAACe,mBAAjB;AACE,aAAOC,QAAQ,CAACV,KAAD,EAAQC,MAAR,CAAf;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeK,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\n\nconst initialState = {\n  cart: [],\n  cart_items: [],\n};\n\nconst fetchCart = (state, action) => {\n  return updateObject(state, {\n    cart: action.payload\n  })\n}\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state, action.payload]\n  return updateObject(state, {\n    cart_items: updatedCart\n  })\n}\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CART:\n      return setBrands(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return setBrand(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}