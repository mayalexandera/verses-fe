{"ast":null,"code":"import _ from 'lodash';\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  productSelection: [],\n  selectedProduct: [],\n  selectProdBrand: [],\n  selectProdSizes: []\n};\n\nconst setProducts = (state, action) => {\n  console.log('in set products', state, action);\n  const updatedProducts = action.payload;\n  return updateObject(state, {\n    productSelection: updatedProducts\n  });\n};\n\nconst setSelectedProduct = (state, action) => {\n  let newData = {\n    selectedProduct: action.payload.product,\n    selectProdBrand: action.payload.brand,\n    selectProdSizes: action.payload.sizes,\n    selectProdImages: action.payload.product.images.split(\",\")\n  };\n  console.log(action, state);\n  return updateObject(state, newData);\n};\n\nconst setFaveProducts = (state, action) => {\n  return updateObject(state, {\n    productSelection: action.payload\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_PRODUCTS_BY_BRAND:\n      return setProducts(state, action);\n\n    case actionTypes.FETCH_ALL_PRODUCTS:\n      return setProducts(state, action);\n\n    case actionTypes.FETCH_PRODUCTS_BY_CATEGORY:\n      return setProducts(state, action);\n\n    case actionTypes.FETCH_PRODUCTS_BY_SIZE:\n      return setProducts(state, action);\n\n    case actionTypes.FETCH_PROD_BY_ID:\n      return setSelectedProduct(state, action);\n\n    case actionTypes.FETCH_FAVE_PROD:\n      return setFaveProducts(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses_backup/verses_fe-85220142a93b1b708e9311944f3c85a3d9621c1e/src/store/reducers/productsReducer.js"],"names":["_","actionTypes","updateObject","initialState","productSelection","selectedProduct","selectProdBrand","selectProdSizes","setProducts","state","action","console","log","updatedProducts","payload","setSelectedProduct","newData","product","brand","sizes","selectProdImages","images","split","setFaveProducts","reducer","type","FETCH_PRODUCTS_BY_BRAND","FETCH_ALL_PRODUCTS","FETCH_PRODUCTS_BY_CATEGORY","FETCH_PRODUCTS_BY_SIZE","FETCH_PROD_BY_ID","FETCH_FAVE_PROD"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,EADC;AAEnBC,EAAAA,eAAe,EAAE,EAFE;AAGnBC,EAAAA,eAAe,EAAE,EAHE;AAInBC,EAAAA,eAAe,EAAE;AAJE,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B,EAAsCC,MAAtC;AACA,QAAMG,eAAe,GAAGH,MAAM,CAACI,OAA/B;AACA,SAAOZ,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,gBAAgB,EAAES;AADO,GAAR,CAAnB;AAGD,CAND;;AAQA,MAAME,kBAAkB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC5C,MAAIM,OAAO,GAAG;AACZX,IAAAA,eAAe,EAAEK,MAAM,CAACI,OAAP,CAAeG,OADpB;AAEZX,IAAAA,eAAe,EAAEI,MAAM,CAACI,OAAP,CAAeI,KAFpB;AAGZX,IAAAA,eAAe,EAAEG,MAAM,CAACI,OAAP,CAAeK,KAHpB;AAIZC,IAAAA,gBAAgB,EAAEV,MAAM,CAACI,OAAP,CAAeG,OAAf,CAAuBI,MAAvB,CAA8BC,KAA9B,CAAoC,GAApC;AAJN,GAAd;AAMAX,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBD,KAApB;AACA,SAAOP,YAAY,CAACO,KAAD,EAAQO,OAAR,CAAnB;AACD,CATD;;AAWA,MAAMO,eAAe,GAAG,CAACd,KAAD,EAAQC,MAAR,KAAmB;AAEzC,SAAOR,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,gBAAgB,EAAEM,MAAM,CAACI;AADA,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMU,OAAO,GAAG,CAACf,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACe,IAAf;AACE,SAAKxB,WAAW,CAACyB,uBAAjB;AACE,aAAOlB,WAAW,CAACC,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKT,WAAW,CAAC0B,kBAAjB;AACE,aAAOnB,WAAW,CAACC,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKT,WAAW,CAAC2B,0BAAjB;AACE,aAAOpB,WAAW,CAACC,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKT,WAAW,CAAC4B,sBAAjB;AACE,aAAOrB,WAAW,CAACC,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKT,WAAW,CAAC6B,gBAAjB;AACE,aAAOf,kBAAkB,CAACN,KAAD,EAAQC,MAAR,CAAzB;;AACF,SAAKT,WAAW,CAAC8B,eAAjB;AACE,aAAOR,eAAe,CAACd,KAAD,EAAQC,MAAR,CAAtB;;AACF;AACE,aAAOD,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAee,OAAf","sourcesContent":["import _ from 'lodash'\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  productSelection: [],\n  selectedProduct: [],\n  selectProdBrand: [],\n  selectProdSizes: [],\n};\n\nconst setProducts = (state, action) => {\n  console.log('in set products', state, action)\n  const updatedProducts = action.payload\n  return updateObject(state, {\n    productSelection: updatedProducts,\n  });\n};\n\nconst setSelectedProduct = (state, action) => {\n  let newData = {\n    selectedProduct: action.payload.product,\n    selectProdBrand: action.payload.brand,\n    selectProdSizes: action.payload.sizes,\n    selectProdImages: action.payload.product.images.split(\",\"),\n  };\n  console.log(action, state)\n  return updateObject(state, newData);\n};\n\nconst setFaveProducts = (state, action) => {\n\n  return updateObject(state, {\n    productSelection: action.payload\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_PRODUCTS_BY_BRAND:\n      return setProducts(state, action);\n    case actionTypes.FETCH_ALL_PRODUCTS:\n      return setProducts(state, action);\n    case actionTypes.FETCH_PRODUCTS_BY_CATEGORY:\n      return setProducts(state, action);\n    case actionTypes.FETCH_PRODUCTS_BY_SIZE:\n      return setProducts(state, action);\n    case actionTypes.FETCH_PROD_BY_ID:\n      return setSelectedProduct(state, action);\n    case actionTypes.FETCH_FAVE_PROD:\n      return setFaveProducts(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}