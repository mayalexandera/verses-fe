{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  brands: [],\n  brand: []\n};\n\nconst setBrand = (state, action) => {\n  console.log(action.brand);\n  return updateObject(state, {\n    selectProdBrand: { ...action.brand\n    }\n  });\n};\n\nconst setBrands = (state, action) => {\n  return { ...state,\n    brands: action.payload\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_BRANDS:\n      return setBrands(state, action);\n\n    case actionTypes.SET_BRAND:\n      return setBrand(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/brandsReducer.js"],"names":["actionTypes","updateObject","initialState","brands","brand","setBrand","state","action","console","log","selectProdBrand","setBrands","payload","reducer","type","FETCH_BRANDS","SET_BRAND"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,KAAnB;AACA,SAAOH,YAAY,CAACK,KAAD,EAAQ;AACzBI,IAAAA,eAAe,EAAE,EAAC,GAAGH,MAAM,CAACH;AAAX;AADQ,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMO,SAAS,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAO,EAAE,GAAGD,KAAL;AAAYH,IAAAA,MAAM,EAAEI,MAAM,CAACK;AAA3B,GAAP;AACD,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAACP,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACO,IAAf;AACE,SAAKd,WAAW,CAACe,YAAjB;AACE,aAAOJ,SAAS,CAACL,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKP,WAAW,CAACgB,SAAjB;AACE,aAAOX,QAAQ,CAACC,KAAD,EAAQC,MAAR,CAAf;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  brands: [],\n  brand: [],\n};\n\nconst setBrand = (state, action) => {\n  console.log(action.brand)\n  return updateObject(state, {\n    selectProdBrand: {...action.brand},\n  });\n};\n\nconst setBrands = (state, action) => {\n  return { ...state, brands: action.payload };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_BRANDS:\n      return setBrands(state, action);\n    case actionTypes.SET_BRAND:\n      return setBrand(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}