{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  loading: false,\n  message: null\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n  let items = action.payload.products;\n\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      loading: false,\n      error: null,\n      message: null\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state.cart_items);\n  let updatedCart;\n\n  if (state.cart_items !== [] || state.cart_items !== \"undefined\") {\n    updatedCart = [...state.cart_items, { ...action.payload\n    }];\n  } else {\n    updatedCart = [action.payload];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action);\n  let cart_item = state.cart_items.filter(item => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n  console.log(action.payload, updatedCart);\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem\n      });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\"\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","error","loading","message","setCart","state","action","console","log","items","payload","products","id","startFetchCart","addProductToCart","updatedCart","removeProductFromCart","cart_item","filter","item","map","cartItem","push","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  loading: false,\n  message: null,\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n  let items = action.payload.products\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      loading: false,\n      error: null,\n      message: null,\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: null,\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state.cart_items);\n  let updatedCart;\n  if (state.cart_items !== [] || state.cart_items !== \"undefined\") {\n    updatedCart = [...state.cart_items, { ...action.payload }];\n  } else {\n    updatedCart = [action.payload];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action);\n  let cart_item = state.cart_items.filter((item) => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n\n  console.log(action.payload, updatedCart);\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\",\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}