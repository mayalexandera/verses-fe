{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: false,\n  current_user: null,\n  subscribed: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(action.payload);\n  localStorage.setItem(\"token\", action.idToken);\n  console.log(localStorage);\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n    current_user: action.user\n  });\n};\n\nconst verifyMembership = props => {\n  return updateObject(state, {\n    subscribed: props\n  });\n};\n\nconst fetchUserStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst fetchUserFail = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    subscribed: false\n  });\n};\n\nconst fetchUserSuccess = (state, action) => {\n  console.log('in ftchUser', action.payload);\n  return updateObject(state, {\n    error: null,\n    current_user: action.user,\n    loading: false,\n    subscribed: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    current_user: null,\n    subscribed: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null,\n    cart: [],\n    subscribed: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    case actionTypes.VERIFY_MEMBERSHIP:\n      return verifyMembership(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/AuthReducer.js"],"names":["actionTypes","updateObject","initialState","token","localStorage","getItem","userId","JSON","parse","error","loading","current_user","subscribed","authStart","state","action","authSuccess","console","log","payload","setItem","idToken","user","verifyMembership","props","fetchUserStart","fetchUserFail","fetchUserSuccess","authFail","authLogout","cart","reducer","type","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","FETCH_USER_SUCCESS","FETCH_USER_START","FETCH_USER_FAIL","VERIFY_MEMBERSHIP"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: JSON.parse(localStorage.getItem(\"user\")),\n  error: null,\n  loading: false,\n  current_user: null,\n  subscribed: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(action.payload)\n  localStorage.setItem(\"token\", action.idToken);\n  console.log(localStorage)\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false,\n    current_user: action.user\n  });\n};\n\nconst verifyMembership = (props) => {\n  return updateObject(state, {subscribed: props})\n}\n\nconst fetchUserStart = (state, action) => {\n  return updateObject(state, {error: null, loading: true})\n}\n\nconst fetchUserFail = (state, action) => {\n  return updateObject(state, { error: true, loading: false, subscribed: false})\n}\n\nconst fetchUserSuccess = (state, action) => {\n  console.log('in ftchUser', action.payload)\n  return updateObject(state, {error: null, current_user: action.user, loading: false, subscribed: false})\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    current_user: null, subscribed: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null, current_user: null, cart: [], subscribed: false });\n};\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.FETCH_USER_SUCCESS:\n      return fetchUserSuccess(state, action);\n    case actionTypes.FETCH_USER_START:\n      return fetchUserStart(state, action);\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n    case actionTypes.VERIFY_MEMBERSHIP:\n      return verifyMembership(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}