{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const initOrder = cart_id => async (dispatch, getState) => {\n  console.log(cart);\n  let user = getState().auth.userId;\n  dispatch(startOrder());\n  await api.post(`/users/${user}/orders/`, {\n    params: {\n      cart_id: JSON.stringify(cart_id)\n    }\n  }).then(resp => dispatch(orderSuccess(resp.data))).catch(error => {\n    dispatch(orderFailed(error));\n  });\n};\nexport const startOrder = () => {\n  return {\n    type: actionTypes.START_ORDER\n  };\n};\nexport const orderFailed = error => {\n  return {\n    type: actionTypes.ORDER_FAILED,\n    payload: error\n  };\n};\nexport const deleteOrder = order_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  console.log(user, order_id);\n  await api.delete(`users/${user}/orders/`, {\n    params: {\n      user_id: user.value\n    }\n  }).then(dispatch({\n    type: actionTypes.DELETE_ORDER,\n    payload: order_id\n  }));\n};\nexport const orderSuccess = order => {\n  return {\n    type: actionTypes.ORDER_SUCCESS,\n    payload: order\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/OrderActions.js"],"names":["api","actionTypes","actions","initOrder","cart_id","dispatch","getState","console","log","cart","user","auth","userId","startOrder","post","params","JSON","stringify","then","resp","orderSuccess","data","catch","error","orderFailed","type","START_ORDER","ORDER_FAILED","payload","deleteOrder","order_id","delete","user_id","value","DELETE_ORDER","order","ORDER_SUCCESS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAGA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,MAAIC,IAAI,GAAGJ,QAAQ,GAAGK,IAAX,CAAgBC,MAA3B;AACAP,EAAAA,QAAQ,CAACQ,UAAU,EAAX,CAAR;AACA,QAAMb,GAAG,CAACc,IAAJ,CAAU,UAASJ,IAAK,UAAxB,EAAmC;AACvCK,IAAAA,MAAM,EAAE;AACNX,MAAAA,OAAO,EAAEY,IAAI,CAACC,SAAL,CAAeb,OAAf;AADH;AAD+B,GAAnC,EAKLc,IALK,CAKAC,IAAI,IAAId,QAAQ,CAACe,YAAY,CAACD,IAAI,CAACE,IAAN,CAAb,CALhB,EAMLC,KANK,CAMCC,KAAK,IAAI;AACdlB,IAAAA,QAAQ,CAACmB,WAAW,CAACD,KAAD,CAAZ,CAAR;AACD,GARK,CAAN;AASD,CAbM;AAeP,OAAO,MAAMV,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLY,IAAAA,IAAI,EAAExB,WAAW,CAACyB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMF,WAAW,GAAID,KAAD,IAAW;AACpC,SAAO;AACLE,IAAAA,IAAI,EAAExB,WAAW,CAAC0B,YADb;AAC2BC,IAAAA,OAAO,EAAEL;AADpC,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMM,WAAW,GAAIC,QAAD,IAAc,OAAOzB,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,MAAII,IAAI,GAAGJ,QAAQ,GAAGK,IAAX,CAAgBC,MAA3B;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAkBoB,QAAlB;AACA,QAAM9B,GAAG,CAAC+B,MAAJ,CAAY,SAAQrB,IAAK,UAAzB,EAAoC;AACxCK,IAAAA,MAAM,EAAE;AACNiB,MAAAA,OAAO,EAAEtB,IAAI,CAACuB;AADR;AADgC,GAApC,EAKLf,IALK,CAKAb,QAAQ,CAAC;AAACoB,IAAAA,IAAI,EAAExB,WAAW,CAACiC,YAAnB;AAAiCN,IAAAA,OAAO,EAAEE;AAA1C,GAAD,CALR,CAAN;AAMD,CATM;AAWP,OAAO,MAAMV,YAAY,GAAIe,KAAD,IAAW;AACrC,SAAO;AACLV,IAAAA,IAAI,EAAExB,WAAW,CAACmC,aADb;AAC4BR,IAAAA,OAAO,EAAEO;AADrC,GAAP;AAGD,CAJM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\n\nexport const initOrder = (cart_id) => async (dispatch, getState) => {\n  console.log(cart)\n  let user = getState().auth.userId \n  dispatch(startOrder())\n  await api.post(`/users/${user}/orders/`, {\n    params: {\n      cart_id: JSON.stringify(cart_id)\n    }\n  })\n  .then(resp => dispatch(orderSuccess(resp.data)))\n  .catch(error => {\n    dispatch(orderFailed(error))\n  })\n}\n\nexport const startOrder = () => {\n  return {\n    type: actionTypes.START_ORDER\n  }\n}\n\nexport const orderFailed = (error) => {\n  return {\n    type: actionTypes.ORDER_FAILED, payload: error\n  }\n}\n\nexport const deleteOrder = (order_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId \n  console.log(user, order_id)\n  await api.delete(`users/${user}/orders/`, {\n    params: {\n      user_id: user.value\n    }\n  })\n  .then(dispatch({type: actionTypes.DELETE_ORDER, payload: order_id}))\n}\n\nexport const orderSuccess = (order) => {\n  return {\n    type: actionTypes.ORDER_SUCCESS, payload: order\n  }\n}"]},"metadata":{},"sourceType":"module"}