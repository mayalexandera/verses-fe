{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  orders: [],\n  error: null,\n  loading: false\n};\n\nconst startOrder = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst orderSuccess = (state, action) => {\n  console.log(state, action.payload.length);\n  const updated = [];\n  state.orders.map(order => {\n    updated.push({ ...order\n    });\n  });\n  action.payload.map(order => {\n    updated.push({\n      order\n    });\n  });\n  console.log(action.payload, updated);\n  return updateObject(state, {\n    orders: [...updated],\n    error: null,\n    loading: false\n  });\n};\n\nconst fetchOrderSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: [...action.payload],\n    loading: false,\n    error: null\n  });\n};\n\nconst orderFailed = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst deleteOrder = (state, action) => {\n  console.log(state, action.payload);\n  const updated = [];\n  state.orders.map(order => {\n    if (order.id !== action.payload) {\n      updated.push({ ...order\n      });\n    }\n\n    console.log(action.payload, updated);\n  });\n  return updateObject(state, {\n    order: [...updated]\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.START_ORDER:\n      return startOrder(state, action);\n\n    case actionTypes.DELETE_ORDER:\n      return deleteOrder(state, action);\n\n    case actionTypes.ORDER_FAILED:\n      return orderFailed(state, action);\n\n    case actionTypes.ORDER_SUCCESS:\n      return orderSuccess(state, action);\n\n    case actionTypes.FETCH_ORDER_SUCCESS:\n      return fetchOrderSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/ordersReducer.js"],"names":["actionTypes","updateObject","initialState","orders","error","loading","startOrder","state","action","console","log","payload","orderSuccess","length","updated","map","order","push","fetchOrderSuccess","orderFailed","deleteOrder","id","reducer","type","START_ORDER","DELETE_ORDER","ORDER_FAILED","ORDER_SUCCESS","FETCH_ORDER_SUCCESS"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  orders: [],\n  error: null,\n  loading: false\n}\n\nconst startOrder = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state, {\n    loading: true\n  })\n}\n\nconst orderSuccess = (state, action) => {\n  console.log(state, action.payload.length)\n  const updated = [];\n  state.orders.map(order => {\n    updated.push({...order})\n  })\n  action.payload.map(order => {\n    updated.push({order})\n  })\n  console.log(action.payload, updated)\n  return updateObject(state, {\n    orders: [...updated],\n    error: null,\n    loading: false\n  })\n}\n\nconst fetchOrderSuccess = (state, action) => {\n  return updateObject(state,  {\n    orders: [...action.payload],\n    loading: false,\n    error: null\n  })\n}\n\nconst orderFailed = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state, {\n    error: true\n  })\n}\n\nconst deleteOrder = (state, action) => {\n  console.log(state, action.payload) \n  const updated = []\n  state.orders.map(order => {\n    if(order.id !== action.payload) {\n      updated.push({...order})\n    }\n    console.log(action.payload, updated)\n  })\n  return updateObject(state,  {\n    order: [...updated]\n  })\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.START_ORDER:\n      return startOrder(state, action);\n    case actionTypes.DELETE_ORDER:\n      return deleteOrder(state, action);\n    case actionTypes.ORDER_FAILED:\n      return orderFailed(state, action);\n    case actionTypes.ORDER_SUCCESS:\n      return orderSuccess(state, action);\n    case actionTypes.FETCH_ORDER_SUCCESS:\n      return fetchOrderSuccess(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}