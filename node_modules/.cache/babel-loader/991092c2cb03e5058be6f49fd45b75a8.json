{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/PlanCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst PlanCard = props => {\n  const renderPlanActions = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"row\",\n      id: \"plan-route-button\",\n      onClick: e => this.changePlanHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"profile-title\",\n      id: \"plan-route-button\",\n      onClick: e => this.unsubscribeHandler(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"No, I'd like to unsubscribe.\"));\n  };\n\n  const clickHandler = e => {\n    e.preventDefault();\n\n    if (props.current_user !== null && props.current_user.subscribed === false) {\n      console.log(\"option 2\");\n      signUp();\n    }\n\n    if (props.current_plan !== undefined && props.current_plan !== null) {\n      console.log('option 3', props);\n      props.renderPlanActions();\n    }\n  };\n\n  const signUp = () => {\n    props.initPlanMembership(props.plan.id);\n  };\n\n  const deletePlan = () => {\n    props.userPlanDelete();\n  };\n\n  const renderText = () => {\n    //guests\n    if (props.current_plan === null && props.current_plan === null) {\n      return \"Try Now\";\n    } //members with or without plan membership\n\n\n    return props.plan.id !== props.current_plan.plan_id ? \"Try Now\" : \"Current Plan\";\n  };\n\n  const renderId = () => {\n    //guests\n    if (props.current_plan === null && props.current_plan === null) {\n      return \"plan-option\";\n    } else if ( //members with or without plan membership\n    props.current_plan !== undefined && props.current_plan !== null) {\n      return props.plan.id !== props.current_plan.plan_id ? \"plan-option\" : \"current-plan\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"plan-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Up to\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, props.plan.items, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"items per month\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"plan-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, props.plan.description)), /*#__PURE__*/React.createElement(\"hr\", {\n    id: \"order-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card-features\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"plan-bullet-points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, props.plan.features.split(\",\").map(feature => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, feature));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"plan-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    plan: props.plan.id,\n    id: renderId(),\n    value: \"button\",\n    onClick: e => clickHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, renderText())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, props.plan.price_string), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 48\n    }\n  }, \"/month\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.auth.current_user,\n    current_plan: state.plan.current_plan\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPlanMembership: plan_id => dispatch(actions.initPlanMembership(plan_id)),\n    userPlanDelete: () => dispatch(actions.userPlanDelete())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanCard);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/PlanCard.js"],"names":["React","connect","actions","PlanCard","props","renderPlanActions","e","changePlanHandler","unsubscribeHandler","clickHandler","preventDefault","current_user","subscribed","console","log","signUp","current_plan","undefined","initPlanMembership","plan","id","deletePlan","userPlanDelete","renderText","plan_id","renderId","items","description","features","split","map","feature","price_string","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\n\nconst PlanCard = (props) => {\n\n  const renderPlanActions = () => {\n    return (\n      <div className='title'>\n        <button\n          className='row'\n          id='plan-route-button'\n          onClick={(e) => this.changePlanHandler(e)}\n        >\n          Yes\n        </button>\n        <button\n          className='profile-title'\n          id='plan-route-button'\n          onClick={(e) => this.unsubscribeHandler(e)}\n        >\n          No, I'd like to unsubscribe.\n        </button>\n      </div>\n    );\n  };\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    if (props.current_user !== null && props.current_user.subscribed === false){\n      console.log(\"option 2\");\n      signUp();}\n    if (props.current_plan !== undefined && props.current_plan !== null ) {\n      console.log('option 3', props)\n      props.renderPlanActions()\n    }\n  };\n\n  const signUp = () => {\n    props.initPlanMembership(props.plan.id);\n  };\n\n  const deletePlan = () => {\n    props.userPlanDelete();\n  };\n\n  const renderText = () => {\n    //guests\n    if (props.current_plan === null && props.current_plan === null)\n      {return \"Try Now\";}\n    //members with or without plan membership\n    return props.plan.id !== props.current_plan.plan_id\n      ? \"Try Now\"\n      : \"Current Plan\";\n  };\n\n  const renderId = () => {\n    //guests\n    if (props.current_plan === null && props.current_plan === null) {\n      return \"plan-option\";\n    } else if \n    //members with or without plan membership\n     (props.current_plan !== undefined && props.current_plan !== null) {\n      return props.plan.id !== props.current_plan.plan_id\n        ? \"plan-option\"\n        : \"current-plan\";\n    }\n  };\n\n  return (\n    <div className='plan-card'>\n      <React.Fragment>\n        <div className='plan-card-details'>\n          <ul className='plan-title'>Up to</ul>\n          <p>{props.plan.items} </p>\n          <span>items per month</span>\n          <li className='plan-description'>{props.plan.description}</li>\n        </div>\n        <hr id='order-hr' />\n      </React.Fragment>\n      <div className='plan-card-features'>\n        <ul className='plan-bullet-points'>\n          {props.plan.features.split(\",\").map((feature) => {\n            return (\n              <li>\n                <ion-icon name='checkmark'></ion-icon>\n                <span>{feature}</span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div id='plan-button'>\n        <button\n          plan={props.plan.id}\n          id={renderId()}\n          value='button'\n          onClick={(e) => clickHandler(e)}\n        >\n          {renderText()}\n        </button>\n      </div>\n      <div className='plan-price'>\n        <span>{props.plan.price_string}</span> <p>/month</p>\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    current_user: state.auth.current_user,\n    current_plan: state.plan.current_plan,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initPlanMembership: (plan_id) =>\n      dispatch(actions.initPlanMembership(plan_id)),\n    userPlanDelete: () => dispatch(actions.userPlanDelete()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanCard);\n"]},"metadata":{},"sourceType":"module"}