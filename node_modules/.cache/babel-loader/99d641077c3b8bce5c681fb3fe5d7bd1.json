{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  error: null,\n  loading: false\n};\n\nconst updateFavorites = (state, action) => {\n  const updatedFavorites = [...state.select, action.payload];\n  return updateObject(state, {\n    select: updatedFavorites\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = [];\n  state.select.map(fave => {\n    if (fave.id !== action.payload) updatedFavorites.push({ ...fave\n    });\n  });\n  return updateObject(state, {\n    select: updatedFavorites\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst setFavorites = (state, action) => {\n  let favorites = [];\n  action.payload.forEach(product => {\n    favorites.push(product);\n  });\n  return updateObject(state, {\n    select: favorites\n  });\n};\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/favoritesReducer.js"],"names":["actionTypes","updateObject","initialState","select","error","loading","updateFavorites","state","action","updatedFavorites","payload","deleteFavorite","map","fave","id","push","startFetchFavorites","console","log","setFavorites","favorites","forEach","product","fetchFavoritesFailed","reducer","type","CREATE_FAVORITE","DELETE_FAVORITE","SET_FAVORITES","FETCH_FAVORITES_FAILED","START_FETCH_FAVORITES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMC,gBAAgB,GAAG,CAAC,GAAGF,KAAK,CAACJ,MAAV,EAAkBK,MAAM,CAACE,OAAzB,CAAzB;AACA,SAAOT,YAAY,CAACM,KAAD,EAAQ;AACzBJ,IAAAA,MAAM,EAAEM;AADiB,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAME,cAAc,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAMC,gBAAgB,GAAG,EAAzB;AAEAF,EAAAA,KAAK,CAACJ,MAAN,CAAaS,GAAb,CAAkBC,IAAD,IAAU;AACzB,QAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAvB,EAAgCD,gBAAgB,CAACM,IAAjB,CAAsB,EAAE,GAAGF;AAAL,KAAtB;AACjC,GAFD;AAIA,SAAOZ,YAAY,CAACM,KAAD,EAAQ;AACzBJ,IAAAA,MAAM,EAAEM;AADiB,GAAR,CAAnB;AAGD,CAVD;;AAYA,MAAMO,mBAAmB,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC7CS,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmBC,MAAM,CAACE,OAA1B;AACA,SAAOT,YAAY,CAACM,KAAD,EAAQ;AACzBF,IAAAA,OAAO,EAAE;AADgB,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMc,YAAY,GAAG,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIY,SAAS,GAAG,EAAhB;AACAZ,EAAAA,MAAM,CAACE,OAAP,CAAeW,OAAf,CAAwBC,OAAD,IAAa;AAClCF,IAAAA,SAAS,CAACL,IAAV,CAAeO,OAAf;AACD,GAFD;AAGA,SAAOrB,YAAY,CAACM,KAAD,EAAQ;AACzBJ,IAAAA,MAAM,EAAEiB;AADiB,GAAR,CAAnB;AAGD,CARD;;AAUA,MAAMG,oBAAoB,GAAG,CAAChB,KAAD,EAAQC,MAAR,KAAmB;AAC9C,SAAOP,YAAY,CAACM,KAAD,EAAQ;AAAEH,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMmB,OAAO,GAAG,CAACjB,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACiB,IAAf;AACE,SAAKzB,WAAW,CAAC0B,eAAjB;AACE,aAAOpB,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKR,WAAW,CAAC2B,eAAjB;AACE,aAAOhB,cAAc,CAACJ,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKR,WAAW,CAAC4B,aAAjB;AACE,aAAOT,YAAY,CAACZ,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKR,WAAW,CAAC6B,sBAAjB;AACE,aAAON,oBAAoB,CAAChB,KAAD,EAAQC,MAAR,CAA3B;;AACF,SAAKR,WAAW,CAAC8B,qBAAjB;AACE,aAAOd,mBAAmB,CAACT,KAAD,EAAQC,MAAR,CAA1B;;AACF;AACE,aAAOD,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeiB,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  error: null,\n  loading: false,\n};\n\nconst updateFavorites = (state, action) => {\n  const updatedFavorites = [...state.select, action.payload];\n  return updateObject(state, {\n    select: updatedFavorites,\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = [];\n\n  state.select.map((fave) => {\n    if (fave.id !== action.payload) updatedFavorites.push({ ...fave });\n  });\n\n  return updateObject(state, {\n    select: updatedFavorites,\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n  });\n};\n\nconst setFavorites = (state, action) => {\n  let favorites = [];\n  action.payload.forEach((product) => {\n    favorites.push(product);\n  });\n  return updateObject(state, {\n    select: favorites,\n  });\n};\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, { error: true, loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}