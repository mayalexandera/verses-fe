{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  brands: [],\n  brand: []\n};\n\nconst setBrand = (state, action) => {\n  console.log(action.brand);\n  return updateObject(state, {\n    brand: { ...action.brand\n    }\n  });\n};\n\nconst setBrands = (state, action) => {\n  return updateObject(...state, {\n    brands: action.payload\n  });\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_BRANDS:\n      return setBrands(state, action);\n\n    case actionTypes.SET_BRAND:\n      return setBrand(state, action);\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/brandsReducer.js"],"names":["actionTypes","updateObject","initialState","brands","brand","setBrand","state","action","console","log","setBrands","payload","reducer","type","FETCH_BRANDS","SET_BRAND"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACH,KAAnB;AACA,SAAOH,YAAY,CAACK,KAAD,EAAQ;AACzBF,IAAAA,KAAK,EAAE,EAAE,GAAGG,MAAM,CAACH;AAAZ;AADkB,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMM,SAAS,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACnC,SAAON,YAAY,CAAE,GAAGK,KAAL,EAAW;AAAEH,IAAAA,MAAM,EAAEI,MAAM,CAACI;AAAjB,GAAX,CAAnB;AACD,CAFD;;AAIA,OAAO,MAAMC,OAAO,GAAG,CAACN,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACM,IAAf;AACE,SAAKb,WAAW,CAACc,YAAjB;AACE,aAAOJ,SAAS,CAACJ,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKP,WAAW,CAACe,SAAjB;AACE,aAAOV,QAAQ,CAACC,KAAD,EAAQC,MAAR,CAAf;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATM;AAWP,eAAeM,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  brands: [],\n  brand: [],\n};\n\nconst setBrand = (state, action) => {\n  console.log(action.brand);\n  return updateObject(state, {\n    brand: { ...action.brand },\n  });\n};\n\nconst setBrands = (state, action) => {\n  return updateObject( ...state,{ brands: action.payload });\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_BRANDS:\n      return setBrands(state, action);\n    case actionTypes.SET_BRAND:\n      return setBrand(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}