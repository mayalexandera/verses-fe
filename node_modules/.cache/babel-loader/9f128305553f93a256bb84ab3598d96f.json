{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport const addProductToCart = (user_id, product_id, size) => async dispatch => {\n  console.log(user_id);\n  await api.post(`/users/${user_id}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size: size\n  }).then(resp => dispatch({\n    type: actionTypes.ADD_PRODUCT_TO_CART,\n    payload: resp.data\n  }));\n};\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  console.log(user);\n  await api.get(`/users/${user}/cart`).then(response => {\n    console.log(response);\n    dispatch(setCart(response.data));\n  }).catch(error => {\n    dispatch(fetchCartFailed(error));\n  });\n};\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART\n  };\n};\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/refresh`).then(response => dispatch(setCart(response)));\n};\nexport const fetchCartFailed = error => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error\n  };\n};\nexport const setCart = cart => {\n  console.log(cart);\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart\n  };\n};\nexport const removeProductFromCart = cart_item => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  console.log(\"in removeproductacction\", {\n    cart_item\n  });\n  await api.delete(`/users/${user}/cart/cart_items/`, {\n    params: {\n      item_id: cart_item.id\n    }\n  }).then(dispatch({\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n    payload: cart_item.id\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/CartActions.js"],"names":["api","actionTypes","addProductToCart","user_id","product_id","size","dispatch","console","log","post","JSON","stringify","then","resp","type","ADD_PRODUCT_TO_CART","payload","data","initCart","getState","startFetchCart","user","auth","userId","get","response","setCart","catch","error","fetchCartFailed","START_FETCH_CART","refreshCart","delete","FETCH_CART_FAILED","cart","SET_CART","removeProductFromCart","cart_item","params","item_id","id","REMOVE_PRODUCT_FROM_CART"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const addProductToCart = (user_id, product_id, size) => async (dispatch) => {\n  console.log(user_id)\n  await api\n    .post(`/users/${user_id}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size: size,\n    })\n    .then((resp) =>\n      dispatch({\n        type: actionTypes.ADD_PRODUCT_TO_CART,\n        payload: resp.data,\n      })\n    );\n};\n\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart())\n  let user = getState().auth.userId\n  console.log(user)\n await api.get(`/users/${user}/cart`).then(response => {\n   console.log(response)\n   dispatch(setCart(response.data))\n })\n .catch((error) => {\n   dispatch(fetchCartFailed(error))\n })\n}\n\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART,\n  };\n};\n\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api.delete(`/users/${user}/cart/refresh`)\n  .then(response => dispatch(setCart(response)))\n}\nexport const fetchCartFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED, payload: error\n  };\n};\n\nexport const setCart = (cart) => {\n  console.log(cart)\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart,\n  };\n};\n\nexport const removeProductFromCart = (cart_item) => async (\n  dispatch, getState\n  ) => {\n    \n    let user = getState().auth.userId\n    console.log(\"in removeproductacction\", {cart_item})\n  await api\n    .delete(`/users/${user}/cart/cart_items/`, {params: \n      {item_id: cart_item.id} })\n    .then(\n      dispatch({\n        type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n        payload: cart_item.id,\n      })\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}