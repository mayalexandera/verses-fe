{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: null,\n  current_plan: null\n};\n\nconst userPlanStart = state => {\n  return updateObject(state, {\n    error: null,\n    loading: true,\n    message: null,\n    current_plan: null\n  });\n};\n\nconst userPlanDelete = state => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    message: null,\n    current_plan: null\n  });\n};\n\nconst fetchPlansFail = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    loading: false,\n    error: true,\n    message: action.payload\n  });\n};\n\nconst userPlanSuccess = (state, action) => {\n  console.log(action.payload);\n\n  if (action.payload.status === 204) {\n    return updateObject(state, {\n      loading: false,\n      error: true,\n      message: action.payload.message\n    });\n  }\n\n  let newPlan;\n\n  if (action.payload.plan_membership_id === null) {\n    newPlan = null;\n  } else {\n    newPlan = action.payload;\n  }\n\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    current_plan: newPlan\n  });\n};\n\nconst userPlanFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    message: null\n  });\n};\n\nconst fetchPlansSuccess = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst fetchPlansStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/plansReducer.js"],"names":["actionTypes","updateObject","initialState","select","loading","error","message","current_plan","userPlanStart","state","userPlanDelete","fetchPlansFail","action","payload","userPlanSuccess","console","log","status","newPlan","plan_membership_id","userPlanFail","fetchPlansSuccess","fetchPlansStart","reducer","type","USER_PLAN_SUCCESS","USER_PLAN_START","USER_PLAN_FAIL","USER_PLAN_DELETE","FETCH_PLANS_START","FETCH_PLANS_FAIL","FETCH_PLANS_SUCCESS"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: null,\n  current_plan: null,\n};\n\nconst userPlanStart = (state) => {\n  return updateObject(state, { error: null, loading: true, message: null, current_plan: null });\n};\n\nconst userPlanDelete = (state) => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    message: null,\n    current_plan: null,\n  });\n};\n\nconst fetchPlansFail = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    loading: false,\n    error: true,\n    message: action.payload,\n  });\n};\n\nconst userPlanSuccess = (state, action) => {\n  console.log(action.payload)\n  if (action.payload.status === 204) {\n    return updateObject(state, {\n      loading: false,\n      error: true,\n      message: action.payload.message,\n    });\n  }\n  let newPlan;\n  if (action.payload.plan_membership_id === null) {\n    newPlan = null\n  } else {\n    newPlan = action.payload\n  }\n  return updateObject(state, {\n    error: null,\n    loading: false,\n    current_plan: newPlan\n  });\n};\n\nconst userPlanFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false,\n    message: null,\n  });\n};\n\nconst fetchPlansSuccess = (state, action) => {\n  return updateObject(state, {\n    select: action.payload,\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst fetchPlansStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}