{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const fetchProdByBrand = brand_id => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      brand_id: brand_id\n    }\n  }).then(resp => {\n    console.log(resp);\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed(err));\n  });\n};\nexport const fetchProdByCategory = category => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      category: category\n    }\n  }).then(resp => {\n    console.log(resp);\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed(err));\n  });\n};\nexport const fetchProdBySize = size => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      size: size\n    }\n  }).then(resp => {\n    console.log(resp);\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed(err));\n  });\n};\nexport const fetchProductsFailed = error => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED,\n    payload: error\n  };\n};\nexport const setProducts = products => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};\nexport const setShowProduct = product => async dispatch => {\n  console.log(product.product);\n  await dispatch(actions.setShowBrand(product.brand_id)).then(dispatch({\n    type: actionTypes.SET_SHOW_PRODUCT,\n    payload: product\n  }));\n};\nexport const initProducts = () => async dispatch => {\n  await api.get(`/products/`).then(resp => {\n    dispatch(setProducts(resp.data));\n  }).catch(error => {\n    console.log(error);\n    dispatch(fetchProductsFailed(error));\n  });\n};\nexport const fetchShowProduct = prod_id => async dispatch => {\n  console.log(\"in fetchSHow\", prod_id);\n  await api.get(`products/${prod_id}`).then(resp => {\n    dispatch(setShowProduct(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed(error));\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/ProductsActions.js"],"names":["api","actionTypes","actions","fetchProdByBrand","brand_id","dispatch","get","params","then","resp","console","log","setProducts","data","catch","err","fetchProductsFailed","fetchProdByCategory","category","fetchProdBySize","size","error","type","FETCH_PRODUCTS_FAILED","payload","products","SET_PRODUCTS","setShowProduct","product","setShowBrand","SET_SHOW_PRODUCT","initProducts","fetchShowProduct","prod_id"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nexport const fetchProdByBrand = (brand_id) => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        brand_id: brand_id,\n      },\n    })\n    .then((resp) => {\n      console.log(resp);\n      dispatch(setProducts(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchProductsFailed(err));\n    });\n};\n\nexport const fetchProdByCategory = (category) => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        category: category,\n      },\n    })\n    .then((resp) => {\n      console.log(resp);\n      dispatch(setProducts(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchProductsFailed(err));\n    });\n};\n\nexport const fetchProdBySize = (size) => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        size: size,\n      },\n    })\n    .then((resp) => {\n      console.log(resp);\n      dispatch(setProducts(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchProductsFailed(err));\n    });\n};\n\nexport const fetchProductsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED,\n    payload: error,\n  };\n};\n\nexport const setProducts = (products) => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    payload: products,\n  };\n};\n\nexport const setShowProduct = (product) => async (dispatch) => {\n  console.log(product.product);\n  await dispatch(actions.setShowBrand(product.brand_id)).then(\n    dispatch({ type: actionTypes.SET_SHOW_PRODUCT, payload: product })\n  );\n};\n\nexport const initProducts = () => async (dispatch) => {\n  await api\n    .get(`/products/`)\n    .then((resp) => {\n      dispatch(setProducts(resp.data));\n    })\n    .catch((error) => {\n      console.log(error);\n      dispatch(fetchProductsFailed(error));\n    });\n};\n\nexport const fetchShowProduct = (prod_id) => async (dispatch) => {\n  console.log(\"in fetchSHow\", prod_id);\n  await api\n    .get(`products/${prod_id}`)\n    .then((resp) => {\n      dispatch(setShowProduct(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailed(error));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}