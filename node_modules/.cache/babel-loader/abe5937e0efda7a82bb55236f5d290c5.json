{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  cart_products: [],\n  error: null,\n  loading: false,\n  message: ''\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_products: [...action.payload.products],\n      cart_items: [...action.payload.cart_items],\n      loading: false,\n      error: null,\n      message: ''\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: ''\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state, action.payload);\n  let updatedCart;\n\n  if (state.cart_items === [] || state.cart_items === undefined) {\n    updatedCart = Object.assign({}, ...state, { ...action.payload\n    });\n  } else {\n    updatedCart = [action.payload];\n  }\n\n  return updateObject(state, {\n    cart_items: updatedCart,\n    error: null,\n    loading: false,\n    message: ''\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload);\n  let cart_item = state.cart_items.filter(item => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n  console.log(action.payload, updatedCart);\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem\n      });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: ''\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\"\n  });\n};\n\nconst addProductToCartFailed = (state, action) => {\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"Item is out of stock.\"\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART_FAILED:\n      return addProductToCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","cart_products","error","loading","message","setCart","state","action","console","log","payload","id","products","startFetchCart","addProductToCart","updatedCart","undefined","Object","assign","removeProductFromCart","cart_item","filter","item","map","cartItem","push","fetchCartFailed","addProductToCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","ADD_PRODUCT_TO_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    cart_id: null,\n    member_id: null,\n    cart_items: [],\n    cart_products: [],\n    error: null,\n    loading: false,\n    message: ''\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action)\n    if (action.payload !== null ){\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_products: [...action.payload.products],\n      cart_items: [...action.payload.cart_items],\n      loading: false,\n      error: null,\n      message: ''\n    })\n  }\n}\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state, {\n    loading: true, error: null, message: ''\n  })\n}\n\nconst addProductToCart = (state, action) => {\n\n    console.log(state, action.payload);\n    let updatedCart\n    if (state.cart_items === [] || state.cart_items === undefined) {\n      updatedCart = Object.assign({}, ...state, {...action.payload})\n    } else {\n      updatedCart = [action.payload]\n    }\n\n    return updateObject(state, {\n    cart_items: updatedCart,\n    error: null,\n    loading: false,\n    message: ''\n  })\n}\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload)\n  let cart_item = state.cart_items.filter(item => item.id === action.payload)\n  console.log(cart_item)\n  const updatedCart = [];\n  \n  console.log(action.payload, updatedCart)\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem });\n    }\n  })\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false, message: ''\n  });\n}\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message)\n  return updateObject(state,{ error: true, loading: false,  message: \"You must be a subscriber to place orders\"})\n}\n\nconst addProductToCartFailed = (state, action) => {\n  return updateObject(state, {error: true, loading: false, message: \"Item is out of stock.\"})\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART_FAILED:\n      return addProductToCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}