{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/Plans.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport PlanCard from \"./PlanCard\";\n\nclass Plans extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPlans = () => {\n      return this.props.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, \"loading\") : this.props.plans.map(plan => {\n        return /*#__PURE__*/React.createElement(PlanCard, {\n          plan: plan,\n          subscribed: this.props.subscribed,\n          current_plan: this.props.current_plan,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }\n        });\n      });\n    };\n\n    this.renderPlanActions = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"row\",\n        id: \"plan-route-button\",\n        onClick: e => this.changePlanHandler(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"profile-title\",\n        id: \"plan-route-button\",\n        onClick: e => this.unsubscribeHandler(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, \"No, I'd like to unsubscribe.\"));\n    };\n\n    this.unsubscribeHandler = () => {\n      this.props.userPlanDelete();\n    };\n\n    this.changePlanHandler = () => {\n      this.props.userPlanDelete();\n      this.props.initFetchPlans();\n    };\n\n    this.renderText = () => {\n      return this.props.error_message === \"You currently have a subscription.  Would you like to change your plan?\" ? this.renderPlanActions() : \"See Plans\";\n    };\n\n    this.renderHandler = () => {\n      let signUpResponse;\n\n      if (this.props.error_message) {\n        signUpResponse = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, this.props.error_message), this.renderPlanActions());\n      } else {\n        signUpResponse = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 24\n          }\n        }, this.renderPlans());\n      }\n\n      return signUpResponse;\n    };\n  }\n\n  componentDidMount() {\n    this.props.initFetchPlans();\n    this.props.fetchUserPlan();\n    this.renderHandler();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row plan-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: \"plan-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Join Us\"), /*#__PURE__*/React.createElement(\"hr\", {\n      id: \"plan-title-hr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, this.renderHandler()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.plan.loading,\n    current_plan: state.plan.current_plan,\n    current_plan_name: state.plan.current_plan.name,\n    plans: state.plan.select,\n    error_message: state.plan.message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userPlanDelete: () => dispatch(actions.userPlanDelete()),\n    initFetchPlans: () => dispatch(actions.initFetchPlans()),\n    fetchUserPlan: () => dispatch(actions.fetchUserPlan())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/Plans.js"],"names":["React","connect","actions","PlanCard","Plans","Component","renderPlans","props","loading","plans","map","plan","subscribed","current_plan","renderPlanActions","e","changePlanHandler","unsubscribeHandler","userPlanDelete","initFetchPlans","renderText","error_message","renderHandler","signUpResponse","componentDidMount","fetchUserPlan","render","mapStateToProps","state","current_plan_name","name","select","message","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/index\";\nimport PlanCard from \"./PlanCard\";\n\nclass Plans extends React.Component {\n  componentDidMount() {\n    this.props.initFetchPlans();\n    this.props.fetchUserPlan();\n    this.renderHandler();\n  }\n\n  renderPlans = () => {\n    return this.props.loading ? (\n      <div>loading</div>\n    ) : (\n      this.props.plans.map((plan) => {\n        return (\n          <PlanCard\n            plan={plan}\n            subscribed={this.props.subscribed}\n            current_plan={this.props.current_plan}\n          />\n        );\n      })\n    );\n  };\n\n  renderPlanActions = () => {\n    return (\n      <div className='title'>\n        <button\n          className='row'\n          id='plan-route-button'\n          onClick={(e) => this.changePlanHandler(e)}\n        >\n          Yes\n        </button>\n        <button\n          className='profile-title'\n          id='plan-route-button'\n          onClick={(e) => this.unsubscribeHandler(e)}\n        >\n          No, I'd like to unsubscribe.\n        </button>\n      </div>\n    );\n  };\n\n  unsubscribeHandler = () => {\n    this.props.userPlanDelete();\n  };\n\n  changePlanHandler = () => {\n    this.props.userPlanDelete();\n    this.props.initFetchPlans();\n  };\n\n  renderText = () => {\n    return this.props.error_message ===\n      \"You currently have a subscription.  Would you like to change your plan?\"\n      ? this.renderPlanActions()\n      : \"See Plans\";\n  };\n\n  renderHandler = () => {\n    let signUpResponse;\n    if (this.props.error_message) {\n      signUpResponse = (\n        <div>\n          <div className='title'>{this.props.error_message}</div>\n          {this.renderPlanActions()}\n        </div>\n      );\n    } else {\n      signUpResponse = <div>{this.renderPlans()}</div>;\n    }\n    return signUpResponse;\n  };\n\n  render() {\n    return (\n      <div className='row plan-box'>\n        <li id='plan-header'>Join Us</li>\n        <hr id='plan-title-hr' />\n        <div>{this.renderHandler()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.plan.loading,\n    current_plan: state.plan.current_plan,\n    current_plan_name: state.plan.current_plan.name,\n    plans: state.plan.select,\n    error_message: state.plan.message,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n    userPlanDelete: () => dispatch(actions.userPlanDelete()),\n    initFetchPlans: () => dispatch(actions.initFetchPlans()),\n    fetchUserPlan: () => dispatch(actions.fetchUserPlan()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Plans);\n"]},"metadata":{},"sourceType":"module"}