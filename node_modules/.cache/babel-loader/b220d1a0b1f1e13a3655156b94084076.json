{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const fetchProdByFilter = (type, value) => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      type: type,\n      value: value\n    }\n  }).then(resp => {\n    dispatch(setProducts(resp.data));\n  }).catch(err => {\n    dispatch(fetchProductsFailed(err));\n  });\n};\nexport const fetchProductsFailed = error => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED,\n    payload: error\n  };\n};\nexport const setProducts = products => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    payload: products\n  };\n};\nexport const setShowProduct = product => async dispatch => {\n  await dispatch(actions.setShowBrand(product.brand_id)).then(dispatch({\n    type: actionTypes.SET_SHOW_PRODUCT,\n    payload: product\n  }));\n};\nexport const initProducts = () => async dispatch => {\n  await api.get(`/products/`, {\n    params: {\n      type: \"All\"\n    }\n  }).then(resp => {\n    dispatch(setProducts(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed(error));\n  });\n};\nexport const fetchShowProduct = prod_id => async dispatch => {\n  await api.get(`products/${prod_id}`).then(resp => {\n    dispatch(setShowProduct(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed(error));\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/ProductsActions.js"],"names":["api","actionTypes","actions","fetchProdByFilter","type","value","dispatch","get","params","then","resp","setProducts","data","catch","err","fetchProductsFailed","error","FETCH_PRODUCTS_FAILED","payload","products","SET_PRODUCTS","setShowProduct","product","setShowBrand","brand_id","SET_SHOW_PRODUCT","initProducts","fetchShowProduct","prod_id"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB,MAAOC,QAAP,IAAoB;AACpE,QAAMN,GAAG,CACNO,GADG,CACE,YADF,EACe;AACjBC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,IAAI,EAAEA,IADA;AAENC,MAAAA,KAAK,EAAEA;AAFD;AADS,GADf,EAOHI,IAPG,CAOGC,IAAD,IAAU;AACdJ,IAAAA,QAAQ,CAACK,WAAW,CAACD,IAAI,CAACE,IAAN,CAAZ,CAAR;AACD,GATG,EAUHC,KAVG,CAUIC,GAAD,IAAS;AACdR,IAAAA,QAAQ,CAACS,mBAAmB,CAACD,GAAD,CAApB,CAAR;AACD,GAZG,CAAN;AAaD,CAdM;AAgBP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAC5C,SAAO;AACLZ,IAAAA,IAAI,EAAEH,WAAW,CAACgB,qBADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAML,WAAW,GAAIQ,QAAD,IAAc;AACvC,SAAO;AACLf,IAAAA,IAAI,EAAEH,WAAW,CAACmB,YADb;AAELF,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAIC,OAAD,IAAa,MAAOhB,QAAP,IAAoB;AAC7D,QAAMA,QAAQ,CAACJ,OAAO,CAACqB,YAAR,CAAqBD,OAAO,CAACE,QAA7B,CAAD,CAAR,CAAiDf,IAAjD,CACJH,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAEH,WAAW,CAACwB,gBAApB;AAAsCP,IAAAA,OAAO,EAAEI;AAA/C,GAAD,CADJ,CAAN;AAGD,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,MAAM,MAAOpB,QAAP,IAAoB;AACpD,QAAMN,GAAG,CACNO,GADG,CACE,YADF,EACe;AACjBC,IAAAA,MAAM,EAAE;AACNJ,MAAAA,IAAI,EAAE;AADA;AADS,GADf,EAMHK,IANG,CAMGC,IAAD,IAAU;AACdJ,IAAAA,QAAQ,CAACK,WAAW,CAACD,IAAI,CAACE,IAAN,CAAZ,CAAR;AACD,GARG,EASHC,KATG,CASIG,KAAD,IAAW;AAChBV,IAAAA,QAAQ,CAACS,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,GAXG,CAAN;AAYD,CAbM;AAeP,OAAO,MAAMW,gBAAgB,GAAIC,OAAD,IAAa,MAAOtB,QAAP,IAAoB;AAC/D,QAAMN,GAAG,CACNO,GADG,CACE,YAAWqB,OAAQ,EADrB,EAEHnB,IAFG,CAEGC,IAAD,IAAU;AACdJ,IAAAA,QAAQ,CAACe,cAAc,CAACX,IAAI,CAACE,IAAN,CAAf,CAAR;AACD,GAJG,EAKHC,KALG,CAKIG,KAAD,IAAW;AAChBV,IAAAA,QAAQ,CAACS,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,GAPG,CAAN;AAQD,CATM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nexport const fetchProdByFilter = (type, value) => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        type: type,\n        value: value,\n      },\n    })\n    .then((resp) => {\n      dispatch(setProducts(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchProductsFailed(err));\n    });\n};\n\nexport const fetchProductsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED,\n    payload: error,\n  };\n};\n\nexport const setProducts = (products) => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    payload: products,\n  };\n};\n\nexport const setShowProduct = (product) => async (dispatch) => {\n  await dispatch(actions.setShowBrand(product.brand_id)).then(\n    dispatch({ type: actionTypes.SET_SHOW_PRODUCT, payload: product })\n  );\n};\n\nexport const initProducts = () => async (dispatch) => {\n  await api\n    .get(`/products/`, {\n      params: {\n        type: \"All\",\n      },\n    })\n    .then((resp) => {\n      dispatch(setProducts(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailed(error));\n    });\n};\n\nexport const fetchShowProduct = (prod_id) => async (dispatch) => {\n  await api\n    .get(`products/${prod_id}`)\n    .then((resp) => {\n      dispatch(setShowProduct(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchProductsFailed(error));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}