{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nimport _ from \"lodash\";\nexport const initFavorites = user_id => async dispatch => {\n  console.log('in init');\n  dispatch(startFetchFavorites());\n  await api.get(`/users/${user_id}/favorites`).then(resp => {\n    dispatch(setFavorites(resp.data));\n  }).catch(error => {\n    dispatch(fetchFavoritesFailed());\n  });\n};\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  };\n};\nexport const fetchFavoritesFailed = () => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED\n  };\n};\nexport const setFavorites = favorites => {\n  console.log(favorites);\n  const products = [];\n  favorites.map(fave => products.push({ ...fave.product\n  }));\n  return {\n    type: actionTypes.SET_FAVORITES,\n    select: favorites,\n    products: products\n  };\n};\nexport const deleteFavorite = favorite_id => async (dispatch, getState) => {\n  let user_id = getState().auth.userId;\n  console.log(user_id);\n  const response = await api.delete(`/users/${user_id}/favorites/${favorite_id}`, {\n    params: {\n      user_id: user_id.value\n    }\n  }).then(data => console.log(data));\n  dispatch({\n    type: actionTypes.DELETE_FAVORITE,\n    payload: favorite_id\n  });\n};\nexport const createFavorite = (user_id, product_id) => {\n  const response = api.post(`/users/${user_id}/favorites`, {\n    member_id: user_id,\n    product_id: product_id\n  });\n  dispatch({\n    type: actionTypes.CREATE_FAVORITE,\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/FavoritesActions.js"],"names":["api","actionTypes","actions","_","initFavorites","user_id","dispatch","console","log","startFetchFavorites","get","then","resp","setFavorites","data","catch","error","fetchFavoritesFailed","type","START_FETCH_FAVORITES","FETCH_FAVORITES_FAILED","favorites","products","map","fave","push","product","SET_FAVORITES","select","deleteFavorite","favorite_id","getState","auth","userId","response","delete","params","value","DELETE_FAVORITE","payload","createFavorite","product_id","post","member_id","CREATE_FAVORITE"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,MAAMC,QAAN,IAAiB;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAF,EAAAA,QAAQ,CAACG,mBAAmB,EAApB,CAAR;AACC,QAAMT,GAAG,CACPU,GADI,CACC,UAASL,OAAQ,YADlB,EAEJM,IAFI,CAEEC,IAAD,IAAU;AACdN,IAAAA,QAAQ,CAACO,YAAY,CAACD,IAAI,CAACE,IAAN,CAAb,CAAR;AACD,GAJI,EAKJC,KALI,CAKGC,KAAD,IAAW;AAChBV,IAAAA,QAAQ,CAACW,oBAAoB,EAArB,CAAR;AACD,GAPI,CAAN;AASF,CAZM;AAcP,OAAO,MAAMR,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLS,IAAAA,IAAI,EAAEjB,WAAW,CAACkB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMF,oBAAoB,GAAG,MAAM;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEjB,WAAW,CAACmB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMP,YAAY,GAAIQ,SAAD,IAAc;AACxCd,EAAAA,OAAO,CAACC,GAAR,CAAYa,SAAZ;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACCD,EAAAA,SAAS,CAACE,GAAV,CAAeC,IAAD,IAAUF,QAAQ,CAACG,IAAT,CAAc,EAAC,GAAGD,IAAI,CAACE;AAAT,GAAd,CAAxB;AACD,SAAO;AACLR,IAAAA,IAAI,EAAEjB,WAAW,CAAC0B,aADb;AAELC,IAAAA,MAAM,EAAEP,SAFH;AAGLC,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD,CATM;AAWP,OAAO,MAAMO,cAAc,GAAIC,WAAD,IAAiB,OAAOxB,QAAP,EAAiByB,QAAjB,KAA8B;AAC3E,MAAI1B,OAAO,GAAG0B,QAAQ,GAAGC,IAAX,CAAgBC,MAA9B;AACF1B,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACE,QAAM6B,QAAQ,GAAG,MAAMlC,GAAG,CACvBmC,MADoB,CACZ,UAAS9B,OAAQ,cAAayB,WAAY,EAD9B,EACiC;AACpDM,IAAAA,MAAM,EAAE;AACN/B,MAAAA,OAAO,EAAEA,OAAO,CAACgC;AADX;AAD4C,GADjC,EAMpB1B,IANoB,CAMdG,IAAD,IAAUP,OAAO,CAACC,GAAR,CAAYM,IAAZ,CANK,CAAvB;AAOAR,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAEjB,WAAW,CAACqC,eAApB;AAAqCC,IAAAA,OAAO,EAAET;AAA9C,GAAD,CAAR;AACD,CAXM;AAaP,OAAO,MAAMU,cAAc,GAAG,CAACnC,OAAD,EAAUoC,UAAV,KAA0B;AACtD,QAAMP,QAAQ,GAAGlC,GAAG,CAAC0C,IAAJ,CAAU,UAASrC,OAAQ,YAA3B,EAAwC;AACvDsC,IAAAA,SAAS,EAAEtC,OAD4C;AAEvDoC,IAAAA,UAAU,EAAEA;AAF2C,GAAxC,CAAjB;AAIAnC,EAAAA,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAEjB,WAAW,CAAC2C,eAApB;AAAqCL,IAAAA,OAAO,EAAEL,QAAQ,CAACpB;AAAvD,GAAD,CAAR;AACD,CANM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nimport _ from \"lodash\";\n\nexport const initFavorites = (user_id) => async dispatch =>{\n  console.log('in init')\n  dispatch(startFetchFavorites())\n   await api\n    .get(`/users/${user_id}/favorites`)\n    .then((resp) => {\n      dispatch(setFavorites(resp.data))\n    })\n    .catch((error) => {\n      dispatch(fetchFavoritesFailed())\n    });\n  \n};\n\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  }\n}\n\nexport const fetchFavoritesFailed = () => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n  };\n};\n\nexport const setFavorites = (favorites)=> {\n  console.log(favorites);\n  const products = [];\n   favorites.map((fave) => products.push({...fave.product}));\n  return {\n    type: actionTypes.SET_FAVORITES,\n    select: favorites,\n    products: products,\n  };\n};\n\nexport const deleteFavorite = (favorite_id) => async (dispatch, getState) => {\n  let user_id = getState().auth.userId\nconsole.log(user_id)\n  const response = await api\n    .delete(`/users/${user_id}/favorites/${favorite_id}`, {\n      params: {\n        user_id: user_id.value\n      }\n    })\n    .then((data) => console.log(data));\n  dispatch({ type: actionTypes.DELETE_FAVORITE, payload: favorite_id });\n};\n\nexport const createFavorite = (user_id, product_id)  => {\n  const response = api.post(`/users/${user_id}/favorites`, {\n    member_id: user_id,\n    product_id: product_id,\n  });\n  dispatch({ type: actionTypes.CREATE_FAVORITE, payload: response.data });\n};\n"]},"metadata":{},"sourceType":"module"}