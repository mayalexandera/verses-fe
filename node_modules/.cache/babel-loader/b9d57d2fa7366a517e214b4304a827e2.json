{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport const addProductToCart = (product_id, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size: size\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.ADD_PRODUCT_TO_CART,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const updateCartProductQty = (cart_item, quantity, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.patch(`/users/${user}/cart/cart_items/${cart_item.id}`, {\n    cart_item_id: JSON.stringify(cart_item.id),\n    quantity: quantity,\n    size: size,\n    type: \"quantity\"\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.UPDATE_CART_PRODUCT_QTY,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const updateCartProductSize = (cart_item, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.patch(`users/${user}/cart/cart_items/${cart_item.id}`, {\n    cart_item_id: JSON.stringify(cart_item.id),\n    size: size,\n    type: \"size\"\n  }).then(resp => {\n    dispatch({\n      type: actionTypes.UPDATE_CART_PRODUCT_SIZE,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const addCartToFavorite = (product_id, size, cart_item_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id)\n  });\n  dispatch(removeProductFromCart(cart_item_id));\n};\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api.get(`/users/${user}/cart`).then(response => {\n    dispatch(setCart(response.data));\n  }).catch(error => {\n    dispatch(fetchCartFailed(error));\n  });\n};\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART\n  };\n};\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/refresh`).then(response => dispatch(setCart(response)));\n};\nexport const fetchCartFailed = error => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error\n  };\n};\nexport const addProductToCartFailed = error => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error\n  };\n};\nexport const setCart = cart => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart\n  };\n};\nexport const removeProductFromCart = cart_item_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  console.log(cart_item_id);\n  await api.delete(`/users/${user}/cart/cart_items/${cart_item_id}`).then(response => dispatch({\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n    payload: [response.data.total_cost_string, cart_item_id]\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/CartActions.js"],"names":["api","actionTypes","addProductToCart","product_id","size","dispatch","getState","user","auth","userId","post","JSON","stringify","then","resp","type","ADD_PRODUCT_TO_CART","payload","data","catch","err","addProductToCartFailed","updateCartProductQty","cart_item","quantity","patch","id","cart_item_id","UPDATE_CART_PRODUCT_QTY","updateCartProductSize","UPDATE_CART_PRODUCT_SIZE","addCartToFavorite","member_id","removeProductFromCart","initCart","startFetchCart","get","response","setCart","error","fetchCartFailed","START_FETCH_CART","refreshCart","delete","FETCH_CART_FAILED","ADD_PRODUCT_TO_CART_FAILED","cart","SET_CART","console","log","REMOVE_PRODUCT_FROM_CART","total_cost_string"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const addProductToCart = (product_id, size) => async (\n  dispatch, getState\n) => {\n  let user = getState().auth.userId\n  await api\n    .post(`/users/${user}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size: size,\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.ADD_PRODUCT_TO_CART,\n        payload: resp.data,\n      })\n    }\n    )\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const updateCartProductQty = (cart_item, quantity, size) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api\n    .patch(`/users/${user}/cart/cart_items/${cart_item.id}`, {\n      cart_item_id: JSON.stringify(cart_item.id),\n      quantity: quantity,\n      size: size,\n      type: \"quantity\"\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.UPDATE_CART_PRODUCT_QTY,\n        payload: resp.data,\n      });\n    })\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const updateCartProductSize = (cart_item, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api\n    .patch(`users/${user}/cart/cart_items/${cart_item.id}`, {\n      cart_item_id: JSON.stringify(cart_item.id),\n      size: size,\n      type: \"size\",\n    })\n    .then((resp) => {\n      dispatch({\n        type: actionTypes.UPDATE_CART_PRODUCT_SIZE,\n        payload: resp.data,\n      });\n    })\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n}\n\nexport const addCartToFavorite = (\n  product_id,\n  size,\n  cart_item_id\n) => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id),\n  });\n  dispatch(removeProductFromCart(cart_item_id));\n};\n\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api\n    .get(`/users/${user}/cart`)\n    .then((response) => {\n      dispatch(setCart(response.data));\n    })\n    .catch((error) => {\n      dispatch(fetchCartFailed(error));\n    });\n};\n\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART,\n  };\n};\n\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/refresh`)\n    .then((response) => dispatch(setCart(response)));\n};\n\nexport const fetchCartFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const addProductToCartFailed = (error) => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart,\n  };\n};\n\nexport const removeProductFromCart = (cart_item_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  console.log(cart_item_id)\n  await api.delete(`/users/${user}/cart/cart_items/${cart_item_id}`).then(response =>\n    dispatch({\n      type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n      payload: [response.data.total_cost_string, cart_item_id]\n    })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}