{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const setShowBrand = brand_id => async (dispatch, getState) => {\n  let brands = getState().brand.select;\n  let brand = brands.filter(brand => brand.id === brand_id);\n  dispatch({\n    type: actionTypes.SET_SHOW_BRAND,\n    brand: brand[0]\n  });\n};\nexport const initBrands = () => async dispatch => {\n  await api.get(`/brands/`).then(resp => {\n    dispatch(setBrands(resp.data));\n  }).catch(error => {\n    dispatch(fetchBrandsFailed(error));\n  });\n};\nexport const setBrands = brands => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands\n  };\n};\nexport const fetchBrandsFailed = error => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/brandsReducer.js"],"names":["api","actionTypes","setShowBrand","brand_id","dispatch","getState","brands","brand","select","filter","id","type","SET_SHOW_BRAND","initBrands","get","then","resp","setBrands","data","catch","error","fetchBrandsFailed","SET_BRANDS","FETCH_BRANDS_FAILED","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtE,MAAIC,MAAM,GAAGD,QAAQ,GAAGE,KAAX,CAAiBC,MAA9B;AACA,MAAID,KAAK,GAAGD,MAAM,CAACG,MAAP,CAAeF,KAAD,IAAWA,KAAK,CAACG,EAAN,KAAaP,QAAtC,CAAZ;AACAC,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEV,WAAW,CAACW,cAApB;AAAoCL,IAAAA,KAAK,EAAEA,KAAK,CAAC,CAAD;AAAhD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,UAAU,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAClD,QAAMJ,GAAG,CACNc,GADG,CACE,UADF,EAEHC,IAFG,CAEGC,IAAD,IAAU;AACdZ,IAAAA,QAAQ,CAACa,SAAS,CAACD,IAAI,CAACE,IAAN,CAAV,CAAR;AACD,GAJG,EAKHC,KALG,CAKIC,KAAD,IAAW;AAChBhB,IAAAA,QAAQ,CAACiB,iBAAiB,CAACD,KAAD,CAAlB,CAAR;AACD,GAPG,CAAN;AAQD,CATM;AAWP,OAAO,MAAMH,SAAS,GAAIX,MAAD,IAAY;AACnC,SAAO;AACLK,IAAAA,IAAI,EAAEV,WAAW,CAACqB,UADb;AAELhB,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM;AAOP,OAAO,MAAMe,iBAAiB,GAAID,KAAD,IAAW;AAC1C,SAAO;AACLT,IAAAA,IAAI,EAAEV,WAAW,CAACsB,mBADb;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const setShowBrand = (brand_id) => async (dispatch, getState) => {\n  let brands = getState().brand.select;\n  let brand = brands.filter((brand) => brand.id === brand_id);\n  dispatch({ type: actionTypes.SET_SHOW_BRAND, brand: brand[0] });\n};\n\nexport const initBrands = () => async (dispatch) => {\n  await api\n    .get(`/brands/`)\n    .then((resp) => {\n      dispatch(setBrands(resp.data));\n    })\n    .catch((error) => {\n      dispatch(fetchBrandsFailed(error));\n    });\n};\n\nexport const setBrands = (brands) => {\n  return {\n    type: actionTypes.SET_BRANDS,\n    brands: brands,\n  };\n};\n\nexport const fetchBrandsFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_BRANDS_FAILED,\n    payload: error,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}