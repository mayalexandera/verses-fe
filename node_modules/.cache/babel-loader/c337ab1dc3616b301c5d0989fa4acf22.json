{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      cart_total: action.payload.total_cost_string,\n      loading: false,\n      error: null,\n      message: null\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state.cart_items);\n  let updatedCart;\n\n  if (state.cart_items !== [] || state.cart_items !== \"undefined\") {\n    updatedCart = [...state.cart_items, { ...action.payload\n    }];\n  } else {\n    updatedCart = [action.payload];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action);\n  let cart_item = state.cart_items.filter(item => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n  console.log(action.payload, updatedCart);\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem\n      });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\"\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","error","cart_total","loading","message","setCart","state","action","console","log","payload","id","total_cost_string","startFetchCart","addProductToCart","updatedCart","removeProductFromCart","cart_item","filter","item","map","cartItem","push","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  cart_total: null,\n  loading: false,\n  message: null,\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      cart_items: action.payload.cart_items,\n      cart_total: action.payload.total_cost_string,\n      loading: false,\n      error: null,\n      message: null,\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: null,\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state.cart_items);\n  let updatedCart;\n  if (state.cart_items !== [] || state.cart_items !== \"undefined\") {\n    updatedCart = [...state.cart_items, { ...action.payload }];\n  } else {\n    updatedCart = [action.payload];\n  }\n\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: null,\n    loading: false,\n    message: null,\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action);\n  let cart_item = state.cart_items.filter((item) => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n\n  console.log(action.payload, updatedCart);\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null,\n    cart_total: action.payload\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\",\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}