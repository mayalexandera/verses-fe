{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const initOrder = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startOrder());\n  await api.post(`/users/${user}/orders/`).then(resp => {\n    console.log(resp.data);\n    dispatch(orderSuccess(resp.data));\n  }).catch(error => {\n    dispatch(orderFailed(error));\n  });\n};\nexport const fetchOrders = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startOrder());\n  await api.get(`/users/${user}/orders/`).then(resp => {\n    dispatch(fetchOrderSuccess(resp.data));\n  }).catch(error => {\n    dispatch(orderFailed(error));\n  });\n};\nexport const startOrder = () => {\n  return {\n    type: actionTypes.START_ORDER\n  };\n};\nexport const orderFailed = error => {\n  return {\n    type: actionTypes.ORDER_FAILED,\n    payload: error.message\n  };\n};\nexport const deleteOrder = order_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  console.log(user, order_id);\n  await api.delete(`users/${user}/orders/`, {\n    params: {\n      user_id: user.value\n    }\n  }).then(dispatch({\n    type: actionTypes.DELETE_ORDER,\n    payload: order_id\n  }));\n};\nexport const orderSuccess = order => {\n  actions.refreshCart();\n  return {\n    type: actionTypes.ORDER_SUCCESS,\n    payload: order\n  };\n};\nexport const fetchOrderSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDER_SUCCESS,\n    payload: orders\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/OrderActions.js"],"names":["api","actionTypes","actions","initOrder","dispatch","getState","user","auth","userId","startOrder","post","then","resp","console","log","data","orderSuccess","catch","error","orderFailed","fetchOrders","get","fetchOrderSuccess","type","START_ORDER","ORDER_FAILED","payload","message","deleteOrder","order_id","delete","params","user_id","value","DELETE_ORDER","order","refreshCart","ORDER_SUCCESS","orders","FETCH_ORDER_SUCCESS"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC3D,MAAIC,IAAI,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,MAA3B;AACAJ,EAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACA,QAAMT,GAAG,CAACU,IAAJ,CAAU,UAASJ,IAAK,UAAxB,EAAmCK,IAAnC,CAAyCC,IAAD,IAAU;AACtDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACAX,IAAAA,QAAQ,CAACY,YAAY,CAACJ,IAAI,CAACG,IAAN,CAAb,CAAR;AACD,GAHK,EAILE,KAJK,CAICC,KAAK,IAAI;AACdd,IAAAA,QAAQ,CAACe,WAAW,CAACD,KAAD,CAAZ,CAAR;AACD,GANK,CAAN;AAOD,CAVM;AAYP,OAAO,MAAME,WAAW,GAAG,MAAM,OAAOhB,QAAP,EAAiBC,QAAjB,KAA8B;AAC7D,MAAIC,IAAI,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,MAA3B;AACAJ,EAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACA,QAAMT,GAAG,CACNqB,GADG,CACE,UAASf,IAAK,UADhB,EAEHK,IAFG,CAEGC,IAAD,IAAU;AACdR,IAAAA,QAAQ,CAACkB,iBAAiB,CAACV,IAAI,CAACG,IAAN,CAAlB,CAAR;AACD,GAJG,EAKHE,KALG,CAKIC,KAAD,IAAW;AAChBd,IAAAA,QAAQ,CAACe,WAAW,CAACD,KAAD,CAAZ,CAAR;AACD,GAPG,CAAN;AAQD,CAXM;AAaP,OAAO,MAAMT,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLc,IAAAA,IAAI,EAAEtB,WAAW,CAACuB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAML,WAAW,GAAID,KAAD,IAAW;AACpC,SAAO;AACLK,IAAAA,IAAI,EAAEtB,WAAW,CAACwB,YADb;AAELC,IAAAA,OAAO,EAAER,KAAK,CAACS;AAFV,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAAc,OAAOzB,QAAP,EAAiBC,QAAjB,KAA8B;AACrE,MAAIC,IAAI,GAAGD,QAAQ,GAAGE,IAAX,CAAgBC,MAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ,EAAkBuB,QAAlB;AACA,QAAM7B,GAAG,CACN8B,MADG,CACK,SAAQxB,IAAK,UADlB,EAC6B;AAC/ByB,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE1B,IAAI,CAAC2B;AADR;AADuB,GAD7B,EAMHtB,IANG,CAMEP,QAAQ,CAAC;AAAEmB,IAAAA,IAAI,EAAEtB,WAAW,CAACiC,YAApB;AAAkCR,IAAAA,OAAO,EAAEG;AAA3C,GAAD,CANV,CAAN;AAOD,CAVM;AAYP,OAAO,MAAMb,YAAY,GAAImB,KAAD,IAAW;AACrCjC,EAAAA,OAAO,CAACkC,WAAR;AACA,SAAO;AACLb,IAAAA,IAAI,EAAEtB,WAAW,CAACoC,aADb;AAELX,IAAAA,OAAO,EAAES;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMb,iBAAiB,GAAIgB,MAAD,IAAY;AAC3C,SAAO;AACLf,IAAAA,IAAI,EAAEtB,WAAW,CAACsC,mBADb;AAELb,IAAAA,OAAO,EAAEY;AAFJ,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nexport const initOrder = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startOrder());\n  await api.post(`/users/${user}/orders/`).then((resp) => {\n    console.log(resp.data);\n    dispatch(orderSuccess(resp.data));\n  })\n  .catch(error => {\n    dispatch(orderFailed(error))\n  })\n};\n\nexport const fetchOrders = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(startOrder());\n  await api\n    .get(`/users/${user}/orders/`)\n    .then((resp) => {\n      dispatch(fetchOrderSuccess(resp.data));\n    })\n    .catch((error) => {\n      dispatch(orderFailed(error));\n    });\n};\n\nexport const startOrder = () => {\n  return {\n    type: actionTypes.START_ORDER,\n  };\n};\n\nexport const orderFailed = (error) => {\n  return {\n    type: actionTypes.ORDER_FAILED,\n    payload: error.message,\n  };\n};\n\nexport const deleteOrder = (order_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  console.log(user, order_id);\n  await api\n    .delete(`users/${user}/orders/`, {\n      params: {\n        user_id: user.value,\n      },\n    })\n    .then(dispatch({ type: actionTypes.DELETE_ORDER, payload: order_id }));\n};\n\nexport const orderSuccess = (order) => {\n  actions.refreshCart();\n  return {\n    type: actionTypes.ORDER_SUCCESS,\n    payload: order,\n  };\n};\n\nexport const fetchOrderSuccess = (orders) => {\n  return {\n    type: actionTypes.FETCH_ORDER_SUCCESS,\n    payload: orders,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}