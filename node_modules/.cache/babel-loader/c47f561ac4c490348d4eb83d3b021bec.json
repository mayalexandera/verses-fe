{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nimport _ from \"lodash\";\nexport const initFavorites = () => async (dispatch, getState) => {\n  console.log('in init');\n  let user = getState().auth.userId;\n  dispatch(startFetchFavorites());\n  await api.get(`/users/${user}/favorites`).then(resp => {\n    dispatch(setFavorites(resp.data));\n  }).catch(error => {\n    dispatch(fetchFavoritesFailed());\n  });\n};\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  };\n};\nexport const fetchFavoritesFailed = () => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED\n  };\n};\nexport const setFavorites = favorites => {\n  // console.log(favorites);\n  // const products = [];\n  //  favorites.map((fave) => products.push({...fave.product}));\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites\n  };\n};\nexport const deleteFavorite = favorite_id => async (dispatch, getState) => {\n  let user_id = getState().auth.userId;\n  console.log(user_id);\n  await api.delete(`/users/${user_id}/favorites/${favorite_id}`, {\n    params: {\n      user_id: user_id.value\n    }\n  }).then(data => console.log(data));\n  dispatch({\n    type: actionTypes.DELETE_FAVORITE,\n    payload: favorite_id\n  });\n};\nexport const createFavorite = (user_id, product_id) => async dispatch => {\n  await api.post(`/users/${user_id}/favorites`, {\n    member_id: user_id,\n    product_id: product_id\n  }).then(response => dispatch({\n    type: actionTypes.CREATE_FAVORITE,\n    payload: response.data\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/FavoritesActions.js"],"names":["api","actionTypes","actions","_","initFavorites","dispatch","getState","console","log","user","auth","userId","startFetchFavorites","get","then","resp","setFavorites","data","catch","error","fetchFavoritesFailed","type","START_FETCH_FAVORITES","FETCH_FAVORITES_FAILED","favorites","SET_FAVORITES","payload","deleteFavorite","favorite_id","user_id","delete","params","value","DELETE_FAVORITE","createFavorite","product_id","post","member_id","response","CREATE_FAVORITE"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,MAAIC,IAAI,GAAGH,QAAQ,GAAGI,IAAX,CAAgBC,MAA3B;AACAN,EAAAA,QAAQ,CAACO,mBAAmB,EAApB,CAAR;AACC,QAAMZ,GAAG,CACPa,GADI,CACC,UAASJ,IAAK,YADf,EAEJK,IAFI,CAEEC,IAAD,IAAU;AACdV,IAAAA,QAAQ,CAACW,YAAY,CAACD,IAAI,CAACE,IAAN,CAAb,CAAR;AACD,GAJI,EAKJC,KALI,CAKGC,KAAD,IAAW;AAChBd,IAAAA,QAAQ,CAACe,oBAAoB,EAArB,CAAR;AACD,GAPI,CAAN;AASF,CAbM;AAeP,OAAO,MAAMR,mBAAmB,GAAG,MAAM;AACvC,SAAO;AACLS,IAAAA,IAAI,EAAEpB,WAAW,CAACqB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMF,oBAAoB,GAAG,MAAM;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEpB,WAAW,CAACsB;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMP,YAAY,GAAIQ,SAAD,IAAc;AACxC;AACA;AACA;AACA,SAAO;AACLH,IAAAA,IAAI,EAAEpB,WAAW,CAACwB,aADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CARM;AAUP,OAAO,MAAMG,cAAc,GAAIC,WAAD,IAAiB,OAAOvB,QAAP,EAAiBC,QAAjB,KAA8B;AAC3E,MAAIuB,OAAO,GAAGvB,QAAQ,GAAGI,IAAX,CAAgBC,MAA9B;AACFJ,EAAAA,OAAO,CAACC,GAAR,CAAYqB,OAAZ;AACE,QAAM7B,GAAG,CACN8B,MADG,CACK,UAASD,OAAQ,cAAaD,WAAY,EAD/C,EACkD;AACpDG,IAAAA,MAAM,EAAE;AACNF,MAAAA,OAAO,EAAEA,OAAO,CAACG;AADX;AAD4C,GADlD,EAMHlB,IANG,CAMGG,IAAD,IAAUV,OAAO,CAACC,GAAR,CAAYS,IAAZ,CANZ,CAAN;AAOAZ,EAAAA,QAAQ,CAAC;AAAEgB,IAAAA,IAAI,EAAEpB,WAAW,CAACgC,eAApB;AAAqCP,IAAAA,OAAO,EAAEE;AAA9C,GAAD,CAAR;AACD,CAXM;AAaP,OAAO,MAAMM,cAAc,GAAG,CAACL,OAAD,EAAUM,UAAV,KAA0B,MAAM9B,QAAN,IAAkB;AACxE,QAAML,GAAG,CACNoC,IADG,CACG,UAASP,OAAQ,YADpB,EACiC;AACnCQ,IAAAA,SAAS,EAAER,OADwB;AAEnCM,IAAAA,UAAU,EAAEA;AAFuB,GADjC,EAKHrB,IALG,CAKEwB,QAAQ,IACZjC,QAAQ,CAAC;AAAEgB,IAAAA,IAAI,EAAEpB,WAAW,CAACsC,eAApB;AAAqCb,IAAAA,OAAO,EAAEY,QAAQ,CAACrB;AAAvD,GAAD,CANN,CAAN;AASD,CAVM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\nimport _ from \"lodash\";\n\nexport const initFavorites = () => async (dispatch, getState) =>{\n  console.log('in init')\n  let user = getState().auth.userId\n  dispatch(startFetchFavorites())\n   await api\n    .get(`/users/${user}/favorites`)\n    .then((resp) => {\n      dispatch(setFavorites(resp.data))\n    })\n    .catch((error) => {\n      dispatch(fetchFavoritesFailed())\n    });\n  \n};\n\nexport const startFetchFavorites = () => {\n  return {\n    type: actionTypes.START_FETCH_FAVORITES\n  }\n}\n\nexport const fetchFavoritesFailed = () => {\n  return {\n    type: actionTypes.FETCH_FAVORITES_FAILED,\n  };\n};\n\nexport const setFavorites = (favorites)=> {\n  // console.log(favorites);\n  // const products = [];\n  //  favorites.map((fave) => products.push({...fave.product}));\n  return {\n    type: actionTypes.SET_FAVORITES,\n    payload: favorites\n  };\n};\n\nexport const deleteFavorite = (favorite_id) => async (dispatch, getState) => {\n  let user_id = getState().auth.userId\nconsole.log(user_id)\n  await api\n    .delete(`/users/${user_id}/favorites/${favorite_id}`, {\n      params: {\n        user_id: user_id.value\n      }\n    })\n    .then((data) => console.log(data));\n  dispatch({ type: actionTypes.DELETE_FAVORITE, payload: favorite_id });\n};\n\nexport const createFavorite = (user_id, product_id)  => async dispatch => {\n  await api\n    .post(`/users/${user_id}/favorites`, {\n      member_id: user_id,\n      product_id: product_id,\n    })\n    .then(response =>\n      dispatch({ type: actionTypes.CREATE_FAVORITE, payload: response.data })\n    );\n\n};\n"]},"metadata":{},"sourceType":"module"}