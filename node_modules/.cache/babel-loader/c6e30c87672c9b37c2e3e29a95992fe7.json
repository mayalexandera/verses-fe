{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\nexport const addProductToCart = (product_id, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/cart/cart_items`, {\n    product_id: JSON.stringify(product_id),\n    size: size\n  }).then(resp => {\n    console.log(resp.data);\n    dispatch({\n      type: actionTypes.ADD_PRODUCT_TO_CART,\n      payload: resp.data\n    });\n  }).catch(err => dispatch(addProductToCartFailed(err)));\n};\nexport const updateCartProductSize = (cart_item_id, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.patch(`users/${user}/cart/cart_items/${cart_item_id}`, {\n    cart_item_id: JSON.stringify(cart_item_id),\n    size: size\n  }).then(resp => {\n    console.log(resp.data);\n    dispatch({\n      type: actionTypes.UPDATE_CART_PRODUCT_SIZE,\n      payload: resp.data\n    });\n  });\n};\nexport const addCartToFavorite = (product_id, size, cart_item_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id)\n  });\n  console.log(cart_item_id);\n  dispatch(removeProductFromCart(cart_item_id));\n};\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api.get(`/users/${user}/cart`).then(response => {\n    dispatch(setCart(response.data));\n  }).catch(error => {\n    dispatch(fetchCartFailed(error));\n  });\n};\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART\n  };\n};\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/refresh`).then(response => dispatch(setCart(response)));\n};\nexport const fetchCartFailed = error => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error\n  };\n};\nexport const addProductToCartFailed = error => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error\n  };\n};\nexport const setCart = cart => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart\n  };\n};\nexport const removeProductFromCart = cart_item_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/cart_items/${cart_item_id}`).then(response => dispatch({\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n    payload: [response.data.total_cost_string, cart_item_id]\n  }));\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/CartActions.js"],"names":["api","actionTypes","addProductToCart","product_id","size","dispatch","getState","user","auth","userId","post","JSON","stringify","then","resp","console","log","data","type","ADD_PRODUCT_TO_CART","payload","catch","err","addProductToCartFailed","updateCartProductSize","cart_item_id","patch","UPDATE_CART_PRODUCT_SIZE","addCartToFavorite","member_id","removeProductFromCart","initCart","startFetchCart","get","response","setCart","error","fetchCartFailed","START_FETCH_CART","refreshCart","delete","FETCH_CART_FAILED","ADD_PRODUCT_TO_CART_FAILED","cart","SET_CART","REMOVE_PRODUCT_FROM_CART","total_cost_string"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const addProductToCart = (product_id, size) => async (\n  dispatch, getState\n) => {\n  let user = getState().auth.userId\n  await api\n    .post(`/users/${user}/cart/cart_items`, {\n      product_id: JSON.stringify(product_id),\n      size: size,\n    })\n    .then((resp) => {\n      console.log(resp.data)\n      dispatch({\n        type: actionTypes.ADD_PRODUCT_TO_CART,\n        payload: resp.data,\n      })\n    }\n    )\n    .catch((err) => dispatch(addProductToCartFailed(err)));\n};\n\nexport const updateCartProductSize = (cart_item_id, size) => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api.patch(`users/${user}/cart/cart_items/${cart_item_id}`, {\n    cart_item_id: JSON.stringify(cart_item_id),\n    size: size\n  })\n  .then(resp => {\n    console.log(resp.data)\n    dispatch({type: actionTypes.UPDATE_CART_PRODUCT_SIZE, payload: resp.data})\n  })\n}\n\nexport const addCartToFavorite = (\n  product_id,\n  size,\n  cart_item_id\n) => async (dispatch, getState) => {\n  let user = getState().auth.userId\n  await api.post(`/users/${user}/favorites`, {\n    member_id: user,\n    product_id: JSON.stringify(product_id),\n    size: size,\n    cart_item_id: JSON.stringify(cart_item_id),\n  });\n  console.log(cart_item_id);\n  dispatch(removeProductFromCart(cart_item_id));\n};\n\nexport const initCart = () => async (dispatch, getState) => {\n  dispatch(startFetchCart());\n  let user = getState().auth.userId;\n  await api\n    .get(`/users/${user}/cart`)\n    .then((response) => {\n      dispatch(setCart(response.data));\n    })\n    .catch((error) => {\n      dispatch(fetchCartFailed(error));\n    });\n};\n\nexport const startFetchCart = () => {\n  return {\n    type: actionTypes.START_FETCH_CART,\n  };\n};\n\nexport const refreshCart = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api\n    .delete(`/users/${user}/cart/refresh`)\n    .then((response) => dispatch(setCart(response)));\n};\n\nexport const fetchCartFailed = (error) => {\n  return {\n    type: actionTypes.FETCH_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const addProductToCartFailed = (error) => {\n  return {\n    type: actionTypes.ADD_PRODUCT_TO_CART_FAILED,\n    payload: error,\n  };\n};\n\nexport const setCart = (cart) => {\n  return {\n    type: actionTypes.SET_CART,\n    payload: cart,\n  };\n};\n\nexport const removeProductFromCart = (cart_item_id) => async (\n  dispatch,\n  getState\n) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/cart/cart_items/${cart_item_id}`).then(response =>\n    dispatch({\n      type: actionTypes.REMOVE_PRODUCT_FROM_CART,\n      payload: [response.data.total_cost_string, cart_item_id]\n    })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}