{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/PlanCard.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst PlanCard = props => {\n  const clickHandler = e => {\n    e.preventDefault();\n    return props.current_user && props.current_user.subscribed === false ? signUp() : deletePlan();\n  };\n\n  const signUp = () => {\n    props.initPlanMembership(props.plan.id);\n  };\n\n  const deletePlan = () => {\n    props.userPlanDelete();\n  };\n\n  const renderText = () => {\n    if (props.current_plan.plan_membership.plan_id !== props.plan.id) {\n      return \"Try Now\";\n    } else {\n      return \"Current Plan\";\n    }\n  };\n\n  const renderId = () => {\n    //guests\n    if (props.current_plan === undefined || props.current_plan === null) return \"plan-option\"; //members with or without plan membership\n\n    return !props.current_plan.plan_membership || props.plan.id !== props.current_plan.plan_membership.plan_id ? \"plan-option\" : \"current-plan\";\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"plan-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Up to\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, props.plan.items, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"items per month\"), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"plan-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, props.plan.description)), /*#__PURE__*/React.createElement(\"hr\", {\n    id: \"plan-hr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-card-features\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"plan-bullet-points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, props.plan.features.split(\",\").map(feature => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"ion-icon\", {\n      name: \"checkmark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, feature));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"plan-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, props.current_user ? /*#__PURE__*/React.createElement(\"button\", {\n    plan: props.plan.id,\n    id: renderId(),\n    value: \"button\",\n    onClick: e => clickHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, renderText()) : /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/login\",\n    activeStyle: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    plan: props.plan.id,\n    id: renderId(),\n    value: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"TRY NOW\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"plan-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }, props.plan.price_string), \"/month\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    current_user: state.auth.current_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initPlanMembership: plan_id => dispatch(actions.initPlanMembership(plan_id)),\n    userPlanDelete: () => dispatch(actions.userPlanDelete())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanCard);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/PlanCard.js"],"names":["React","connect","NavLink","actions","PlanCard","props","clickHandler","e","preventDefault","current_user","subscribed","signUp","deletePlan","initPlanMembership","plan","id","userPlanDelete","renderText","current_plan","plan_membership","plan_id","renderId","undefined","items","description","features","split","map","feature","color","price_string","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from \"../store/actions/index\";\n\nconst PlanCard = (props) => {\n  const clickHandler = (e) => {\n    e.preventDefault();\n    return props.current_user && props.current_user.subscribed === false\n      ? signUp()\n      : deletePlan();\n  };\n\n  const signUp = () => {\n    props.initPlanMembership(props.plan.id);\n  };\n\n  const deletePlan = () => {\n    props.userPlanDelete();\n  };\n\n  const renderText = () => {\n    if (\n    props.current_plan.plan_membership.plan_id !== props.plan.id) {\n      return \"Try Now\";\n    } else {\n      return \"Current Plan\";\n    }\n  };\n\n  const renderId = () => {\n    //guests\n    if (props.current_plan === undefined || props.current_plan === null)\n      return \"plan-option\";\n      //members with or without plan membership\n    return !props.current_plan.plan_membership ||\n      props.plan.id !== props.current_plan.plan_membership.plan_id\n      ? \"plan-option\"\n      : \"current-plan\";\n  };\n\n  return (\n    <div className='plan-card'>\n      <React.Fragment>\n        <div className='plan-card-details'>\n          <ul className='plan-title'>Up to</ul>\n          <p>{props.plan.items} </p>\n          <span>items per month</span>\n          <li className='plan-description'>{props.plan.description}</li>\n        </div>\n        <hr id='plan-hr' />\n      </React.Fragment>\n      <div className='plan-card-features'>\n        <ul className='plan-bullet-points'>\n          {props.plan.features.split(\",\").map((feature) => {\n            return (\n              <li>\n                <ion-icon name='checkmark'></ion-icon>\n                <span>{feature}</span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div id='plan-button'>\n        {props.current_user ? (\n          <button\n            plan={props.plan.id}\n            id={renderId()}\n            value='button'\n            onClick={(e) => clickHandler(e)}\n          >\n            {renderText()}\n          </button>\n        ) : (\n          <NavLink to='/login' activeStyle={{ color: \"white\" }}>\n            <button plan={props.plan.id} id={renderId()} value='button'>\n              TRY NOW\n            </button>\n          </NavLink>\n        )}\n      </div>\n        <div className='plan-price'><span>{props.plan.price_string}</span>/month</div>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { current_user: state.auth.current_user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    initPlanMembership: (plan_id) =>\n      dispatch(actions.initPlanMembership(plan_id)),\n    userPlanDelete: () => dispatch(actions.userPlanDelete()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanCard);\n"]},"metadata":{},"sourceType":"module"}