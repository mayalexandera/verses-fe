{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = user => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    payload: user\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => async dispatch => {\n  console.log('in auth');\n  dispatch(authStart());\n  const authData = {\n    email: email,\n    password: password,\n    name: name,\n    returnSecureToken: true\n  };\n  let path = !isSignup ? `/session` : `/users/`;\n  await api.post(`/session`, authData).then(response => {\n    console.log(response.data);\n    dispatch(authSuccess(response.data));\n    localStorage.setItem(\"token\", response.data.session_token);\n    localStorage.setItem(\"userId\", response.data.id);\n  }).catch(err => {\n    dispatch(authFail(err));\n  });\n};\nexport const fetchUser = () => async dispatch => {\n  let user = localStorage.getItem(\"userId\");\n  JSON.stringify(user);\n  await api.get(`/users/${user}`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = user => {\n  return {\n    user: user\n  };\n};\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","authStart","type","AUTH_START","authSuccess","user","AUTH_SUCCESS","payload","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","dispatch","console","log","authData","returnSecureToken","path","post","then","response","data","setItem","session_token","id","catch","err","fetchUser","getItem","JSON","stringify","get","fetchUserSuccess","fetchUserFail","FETCH_USER_FAIL","setAuthRedirectPath","SET_AUTH_REDIRECT_PATH"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEF,WAAW,CAACM,YADb;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAACU,SADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAO;AACLX,IAAAA,IAAI,EAAEF,WAAW,CAACc;AADb,GAAP;AAGD,CANM;AAQP,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAAwBC,QAAxB,KACjB,MAAOC,QAAP,IAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACDF,EAAAA,QAAQ,CAACnB,SAAS,EAAV,CAAR;AACA,QAAMsB,QAAQ,GAAG;AACfP,IAAAA,KAAK,EAAEA,KADQ;AAEfC,IAAAA,QAAQ,EAAEA,QAFK;AAGfC,IAAAA,IAAI,EAAEA,IAHS;AAIfM,IAAAA,iBAAiB,EAAE;AAJJ,GAAjB;AAMA,MAAIC,IAAI,GAAG,CAACN,QAAD,GAAa,UAAb,GAA0B,SAArC;AAEA,QAAMpB,GAAG,CACN2B,IADG,CACG,UADH,EACcH,QADd,EAEHI,IAFG,CAEGC,QAAD,IAAc;AAClBP,IAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,IAArB;AACAT,IAAAA,QAAQ,CAAChB,WAAW,CAACwB,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACAjB,IAAAA,YAAY,CAACkB,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACC,IAAT,CAAcE,aAA5C;AACAnB,IAAAA,YAAY,CAACkB,OAAb,CAAqB,QAArB,EAA+BF,QAAQ,CAACC,IAAT,CAAcG,EAA7C;AACD,GAPG,EAQHC,KARG,CAQIC,GAAD,IAAS;AACdd,IAAAA,QAAQ,CAACZ,QAAQ,CAAC0B,GAAD,CAAT,CAAR;AACD,GAVG,CAAN;AAWD,CAvBI;AA0BP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOf,QAAP,IAAoB;AACjD,MAAIf,IAAI,GAAGO,YAAY,CAACwB,OAAb,CAAqB,QAArB,CAAX;AACAC,EAAAA,IAAI,CAACC,SAAL,CAAejC,IAAf;AACA,QAAMN,GAAG,CACNwC,GADG,CACE,UAASlC,IAAK,EADhB,EAEHsB,IAFG,CAEGC,QAAD,IAAc;AAClBR,IAAAA,QAAQ,CAACoB,gBAAgB,CAACZ,QAAQ,CAACC,IAAV,CAAjB,CAAR;AACD,GAJG,EAKHI,KALG,CAKIC,GAAD,IAAS;AACdd,IAAAA,QAAQ,CAACqB,aAAa,CAACP,GAAD,CAAd,CAAR;AACD,GAPG,CAAN;AAQD,CAXM;AAaP,OAAO,MAAMO,aAAa,GAAIhC,KAAD,IAAW;AACtC,SAAO;AACLP,IAAAA,IAAI,EAAEF,WAAW,CAAC0C,eADb;AAELjC,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAM+B,gBAAgB,GAAInC,IAAD,IAAU;AACxC,SAAO;AAELA,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,MAAMsC,mBAAmB,GAAIlB,IAAD,IAAU;AAC3C,SAAO;AACLvB,IAAAA,IAAI,EAAEF,WAAW,CAAC4C,sBADb;AAELnB,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (user) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    payload: user,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => \n   async (dispatch) => {\n     console.log('in auth')\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n\n    await api\n      .post(`/session`, authData)\n      .then((response) => {\n        console.log(response.data)\n        dispatch(authSuccess(response.data));\n        localStorage.setItem(\"token\", response.data.session_token);\n        localStorage.setItem(\"userId\", response.data.id);\n      })\n      .catch((err) => {\n        dispatch(authFail(err));\n      });\n  };\n\n\nexport const fetchUser = () => async (dispatch) => {\n  let user = localStorage.getItem(\"userId\");\n  JSON.stringify(user);\n  await api\n    .get(`/users/${user}`)\n    .then((response) => {\n      dispatch(fetchUserSuccess(response.data));\n    })\n    .catch((err) => {\n      dispatch(fetchUserFail(err));\n    });\n};\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (user) => {\n  return {\n    \n    user: user,\n  };\n};\n\nexport const setAuthRedirectPath = (path) => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path,\n  };\n};"]},"metadata":{},"sourceType":"module"}