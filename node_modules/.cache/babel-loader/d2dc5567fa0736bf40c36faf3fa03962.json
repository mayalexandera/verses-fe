{"ast":null,"code":"var _jsxFileName = \"/Users/mayablevins/Desktop/verses/verses_fe/src/components/Favorites.js\";\nimport React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport api from \"../store/apis/api\";\nimport Favorite from \"./Favorite\";\n\nclass Favorites extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      favorites: [],\n      products: [],\n      brands: []\n    };\n\n    this.fetchBrands = () => {\n      api.get(`/brands/`).then(resp => this.setState({\n        brands: resp.data\n      }));\n    };\n\n    this.fetchFavorites = user_id => {\n      api.get(`/users/${user_id}/favorites`).then(resp => this.setState({\n        favorites: resp.data\n      }));\n    };\n\n    this.fetchProducts = () => {\n      api.get(`/products/`).then(resp => this.setState({\n        products: resp.data\n      }));\n    };\n\n    this.init = () => {\n      this.props.initFavorites(this.props.userId);\n      this.props.initBrands();\n    };\n\n    this.findBrand = product => {\n      console.log(this.props);\n      let brand = this.state.brands.filter(brand => brand.id === product.brand_id);\n      return brand;\n    };\n\n    this.renderList = () => {\n      console.log(\"render list\", this.state.brands);\n      return !this.state.loading && !this.props.error ? this.state.products.map(fave => {\n        let brand = this.findBrand(fave);\n        return /*#__PURE__*/React.createElement(Favorite, {\n          brand: brand,\n          key: fave.id,\n          product: fave,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        });\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 10\n        }\n      }, \"loading...\");\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBrands();\n    this.fetchFavorites(this.props.userId);\n    this.fetchProducts();\n  }\n\n  render() {\n    // console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"section-products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, !this.props.loading && !this.props.error ? this.renderList() : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 83\n      }\n    }, \"loading\")));\n  }\n\n}\n\nexport default Favorites; // const mapStateToProps = (state, ownProps) => {\n//   console.log(state);\n//   return {\n//     favorites: state.favorite.favorites,\n//     products: state.favorite.products,\n//     brands: state.brand.brands,\n//     userId: state.auth.userId,\n//     error: state.favorite.error,\n//     loading: state.favorite.loading\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     initFavorites: (userId) => dispatch(actions.initFavorites(userId)),\n//     setShowProduct: () => dispatch(actions.setShowProduct()),\n//     initBrands: () => dispatch(actions.initBrands())\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Favorites);","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/components/Favorites.js"],"names":["React","actions","connect","api","Favorite","Favorites","Component","state","favorites","products","brands","fetchBrands","get","then","resp","setState","data","fetchFavorites","user_id","fetchProducts","init","props","initFavorites","userId","initBrands","findBrand","product","console","log","brand","filter","id","brand_id","renderList","loading","error","map","fave","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as actions from \"../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport api from \"../store/apis/api\";\n\nimport Favorite from \"./Favorite\";\n\nclass Favorites extends React.Component {\n  state = {\n    favorites: [],\n    products: [],\n    brands: []\n  }\n\n  componentDidMount() {\n      this.fetchBrands()\n    this.fetchFavorites(this.props.userId)\n    this.fetchProducts()\n  }\n      fetchBrands = () => {\n    api.get(`/brands/`).then((resp) => this.setState({ brands: resp.data }));\n  };\n\n  fetchFavorites = (user_id) => {\n     api\n    .get(`/users/${user_id}/favorites`).then(resp => this.setState({favorites: resp.data}))\n  }\n\n  fetchProducts = () => {\n    api\n      .get(`/products/`)\n      .then((resp) => this.setState({ products: resp.data }));\n  };\n\n  init =  () => {\n    this.props.initFavorites(this.props.userId);\n    this.props.initBrands();\n  }\n  findBrand = (product) => {\n    console.log(this.props)\n    let brand = this.state.brands.filter(\n      (brand) => brand.id === product.brand_id\n    );\n    return brand;\n  };\n\n  renderList = () => {\n    console.log(\"render list\", this.state.brands);\n    return !this.state.loading && !this.props.error ? \n     this.state.products.map((fave) => {\n      let brand = this.findBrand(fave)\n      return (\n        <Favorite\n            brand={brand}\n            key={fave.id}\n            product={fave}\n          />\n      );\n    }) : <div>loading...</div>\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n        <div>\n          <div className=\"section-products\">\n              {(!this.props.loading) && (!this.props.error) ? this.renderList() : <div>loading</div>}\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default Favorites;\n\n// const mapStateToProps = (state, ownProps) => {\n//   console.log(state);\n//   return {\n//     favorites: state.favorite.favorites,\n//     products: state.favorite.products,\n//     brands: state.brand.brands,\n//     userId: state.auth.userId,\n//     error: state.favorite.error,\n//     loading: state.favorite.loading\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     initFavorites: (userId) => dispatch(actions.initFavorites(userId)),\n//     setShowProduct: () => dispatch(actions.setShowProduct()),\n//     initBrands: () => dispatch(actions.initBrands())\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n"]},"metadata":{},"sourceType":"module"}