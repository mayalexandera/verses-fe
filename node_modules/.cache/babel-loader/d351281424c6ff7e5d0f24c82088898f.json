{"ast":null,"code":"import api from '../apis/api';\nimport _ from 'lodash';\nimport * as actionTypes from \"./actionTypes\";\nexport const fetchProdByBrand = brand_id => async dispatch => {\n  const response = await api.get(`/brands/${brand_id}/products`);\n  dispatch({\n    type: actionTypes.FETCH_PRODUCTS_BY_BRAND,\n    payload: response.data\n  });\n};\nexport const fetchProdByCategory = category => async dispatch => {\n  const response = await api.get(`/products/`, {\n    params: {\n      category: category\n    }\n  });\n  dispatch({\n    type: actionTypes.FETCH_PRODUCTS_BY_CATEGORY,\n    payload: response.data\n  });\n};\nexport const fetchProdBySize = size => async dispatch => {\n  const response = await api.get(`/products/`, {\n    params: {\n      size: size\n    }\n  }).then(dispatch({\n    type: actionTypes.FETCH_PRODUCTS_BY_SIZE,\n    payload: response.data\n  }));\n};\nexport const fetchProductsFailed = () => {\n  return {\n    type: actionTypes.FETCH_PRODUCTS_FAILED\n  };\n};\nexport const setProducts = products => {\n  return {\n    type: actionTypes.SET_PRODUCTS,\n    products: products\n  };\n};\nexport const setSelectedProducts = product => {\n  return {\n    type: actionTypes.SET_SELECTED_PRODUCT,\n    show: product\n  };\n};\nexport const initProducts = () => async dispatch => {\n  await api.get(`/products/`).then(resp => {\n    dispatch(setProducts(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchShowProd = prod_id => async dispatch => {\n  await api.get(`products/${prod_id}`).then(resp => {\n    dispatch(setShowProd(resp.data));\n  }).catch(error => {\n    dispatch(fetchProductsFailed());\n  });\n};\nexport const fetchFaveProduct = prod_id => async dispatch => {\n  const response = await api.get(`products/${prod_id}`);\n  dispatch({\n    type: actionTypes.FETCH_FAVE_PROD,\n    payload: response.data\n  });\n};\nexport const fetchBrand = brand_id => async dispatch => {\n  const response = await api.get(`/brands/${brand_id}`);\n  dispatch({\n    type: actionTypes.FETCH_BRAND,\n    payload: response.data\n  });\n}; // export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/ProductsActions.js"],"names":["api","_","actionTypes","fetchProdByBrand","brand_id","dispatch","response","get","type","FETCH_PRODUCTS_BY_BRAND","payload","data","fetchProdByCategory","category","params","FETCH_PRODUCTS_BY_CATEGORY","fetchProdBySize","size","then","FETCH_PRODUCTS_BY_SIZE","fetchProductsFailed","FETCH_PRODUCTS_FAILED","setProducts","products","SET_PRODUCTS","setSelectedProducts","product","SET_SELECTED_PRODUCT","show","initProducts","resp","catch","error","fetchShowProd","prod_id","setShowProd","fetchFaveProduct","FETCH_FAVE_PROD","fetchBrand","FETCH_BRAND"],"mappings":"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","sourcesContent":["import api from '../apis/api'\nimport _ from 'lodash'\nimport * as actionTypes from \"./actionTypes\";\n\n export const fetchProdByBrand = (brand_id) => async dispatch => {\n    const response = await api.get(`/brands/${brand_id}/products`)\n    dispatch({type: actionTypes.FETCH_PRODUCTS_BY_BRAND, payload: response.data})\n }\n\n export const fetchProdByCategory = (category) => async (dispatch) => {\n   const response = await api.get(`/products/`, {\n     params: {\n       category: category,\n     },\n   });\n   dispatch({ type: actionTypes.FETCH_PRODUCTS_BY_CATEGORY, payload: response.data });\n };\n\n export const fetchProdBySize = (size) => async (dispatch) => {\n   const response = await api.get(`/products/`, {\n     params: {\n       size: size,\n     },\n   }).then(dispatch({ type: actionTypes.FETCH_PRODUCTS_BY_SIZE, payload: response.data }));\n };\n\n export const fetchProductsFailed = () => {\n   return {\n     type: actionTypes.FETCH_PRODUCTS_FAILED\n   }\n }\n\n export const setProducts = (products) => {\n   return {\n     type: actionTypes.SET_PRODUCTS, \n     products: products\n   }\n }\n\n export const setSelectedProducts = (product) => {\n   return {\n     type: actionTypes.SET_SELECTED_PRODUCT,\n      show: product}\n }\n\n\n export const initProducts = () => async dispatch => {\n    await api.get(`/products/`)\n    .then(resp => {\n      dispatch(setProducts(resp.data))\n    } )\n   .catch(error => {\n     dispatch(fetchProductsFailed())\n    })\n }\n\n  export const fetchShowProd = (prod_id) => async dispatch => {\n     await api.get(`products/${prod_id}`)\n     .then(resp => {\n       dispatch(setShowProd(resp.data))\n       } )\n       .catch(error => {\n         dispatch(fetchProductsFailed())\n       })\n      }\n\n    export const fetchFaveProduct = (prod_id) => async (dispatch) => {\n      const response = await api.get(`products/${prod_id}`);\n      dispatch({ type: actionTypes.FETCH_FAVE_PROD, payload: response.data });\n    };\n\nexport const fetchBrand = (brand_id) => async (dispatch) => {\n  const response = await api.get(`/brands/${brand_id}`);\n  dispatch({ type: actionTypes.FETCH_BRAND, payload: response.data });\n};\n\n// export const fetchProdAndBrands = () => async (dispatch, getState) => {\n//   await dispatch(fetchAllProd());\n\n//   _.chain(getState().products)\n//     .map(\"brand_id\")\n//     .uniq()\n//     .forEach((id) => dispatch(fetchBrand(id)))\n//     .value();\n// };"]},"metadata":{},"sourceType":"module"}