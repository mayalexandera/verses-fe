{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nexport const userPlanStart = () => {\n  return {\n    type: actionTypes.USER_PLAN_START\n  };\n};\nexport const userPlanDelete = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/plan_membership`).then(dispatch({\n    type: actionTypes.USER_PLAN_DELETE\n  }));\n};\nexport const initFetchPlans = () => async dispatch => {\n  dispatch(fetchPlansStart());\n  await api.get(`/plans`).then(resp => {\n    dispatch(fetchPlansSuccess(resp.data));\n  }).catch(err => {\n    dispatch(fetchPlansFail(err.message));\n  });\n};\nexport const fetchPlansSuccess = plans => {\n  return {\n    type: actionTypes.FETCH_PLANS_SUCCESS,\n    payload: plans\n  };\n};\nexport const fetchPlansFail = error => {\n  return {\n    type: actionTypes.FETCH_PLANS_FAIL,\n    payload: error\n  };\n};\nexport const fetchPlansStart = () => {\n  return {\n    type: actionTypes.FETCH_PLANS_START\n  };\n};\nexport const fetchUserPlan = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(userPlanStart());\n  await api.get(`users/${user}/plan_membership`).then(response => {\n    dispatch(userPlanSuccess(response.data));\n  }).catch(err => {\n    dispatch(userPlanFail(err.message));\n  });\n};\nexport const initPlanMembership = plan_id => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: user,\n    plan_id: plan_id\n  };\n  await api.post(`/users/${user}/plan_membership`, planData).then(response => {\n    dispatch(userPlanSuccess(response.data));\n  }).catch(err => {\n    dispatch(userPlanFail(err.message));\n  });\n};\nexport const userPlanSuccess = response => {\n  return {\n    type: actionTypes.USER_PLAN_SUCCESS,\n    message: response.message,\n    status: response.status,\n    plan: response.plan,\n    plan_membership: response.plan_membership\n  };\n};\nexport const userPlanFail = error => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/PlansActions.js"],"names":["api","actionTypes","userPlanStart","type","USER_PLAN_START","userPlanDelete","dispatch","getState","user","auth","userId","delete","then","USER_PLAN_DELETE","initFetchPlans","fetchPlansStart","get","resp","fetchPlansSuccess","data","catch","err","fetchPlansFail","message","plans","FETCH_PLANS_SUCCESS","payload","error","FETCH_PLANS_FAIL","FETCH_PLANS_START","fetchUserPlan","response","userPlanSuccess","userPlanFail","initPlanMembership","plan_id","planData","member_id","post","USER_PLAN_SUCCESS","status","plan","plan_membership","USER_PLAN_FAIL"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const userPlanStart = () => {\n  return { type: actionTypes.USER_PLAN_START };\n};\n\nexport const userPlanDelete = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  await api.delete(`/users/${user}/plan_membership`).then(\n    dispatch({\n      type: actionTypes.USER_PLAN_DELETE,\n    })\n  );\n};\n\nexport const initFetchPlans = () => async (dispatch) => {\n  dispatch(fetchPlansStart());\n  await api\n    .get(`/plans`)\n    .then((resp) => {\n      dispatch(fetchPlansSuccess(resp.data));\n    })\n    .catch((err) => {\n      dispatch(fetchPlansFail(err.message));\n    });\n};\n\nexport const fetchPlansSuccess = (plans) => {\n  return {\n    type: actionTypes.FETCH_PLANS_SUCCESS,\n    payload: plans,\n  };\n};\n\nexport const fetchPlansFail = (error) => {\n  return {\n    type: actionTypes.FETCH_PLANS_FAIL,\n    payload: error,\n  };\n};\n\nexport const fetchPlansStart = () => {\n  return { type: actionTypes.FETCH_PLANS_START };\n};\n\nexport const fetchUserPlan = () => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(userPlanStart());\n  await api\n    .get(`users/${user}/plan_membership`)\n    .then((response) => {\n      dispatch(userPlanSuccess(response.data));\n    })\n    .catch((err) => {\n      dispatch(userPlanFail(err.message));\n    });\n};\n\nexport const initPlanMembership = (plan_id) => async (dispatch, getState) => {\n  let user = getState().auth.userId;\n  dispatch(userPlanStart());\n  const planData = {\n    member_id: user,\n    plan_id: plan_id,\n  };\n  await api\n    .post(`/users/${user}/plan_membership`, planData)\n    .then((response) => {\n      dispatch(userPlanSuccess(response.data));\n    })\n    .catch((err) => {\n      dispatch(userPlanFail(err.message));\n    });\n};\n\nexport const userPlanSuccess = (response) => {\n  return {\n    type: actionTypes.USER_PLAN_SUCCESS,\n    message: response.message,\n    status: response.status,\n    plan: response.plan,\n    plan_membership: response.plan_membership,\n  };\n};\n\nexport const userPlanFail = (error) => {\n  return {\n    type: actionTypes.USER_PLAN_FAIL,\n    payload: error,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}