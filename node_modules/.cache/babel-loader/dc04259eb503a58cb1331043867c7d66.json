{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: localStorage.getItem(\"userId\"),\n  error: null,\n  loading: null,\n  authRedirectPath: \"/\",\n  current_user: null,\n  current_user_plan: null\n};\n\nconst authStart = state => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(state, action);\n  return updateObject(state, {\n    token: action.user.session_token,\n    userId: action.user.id,\n    current_user: { ...action.user\n    },\n    loading: false,\n    error: null\n  });\n};\n\nconst fetchUserFail = (state, action) => {\n  console.log(action);\n  return updateObject(state, {\n    error: true,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error.message,\n    loading: false\n  });\n};\n\nconst authLogout = state => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null,\n    error: null,\n    cart: []\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, {\n    authRedirectPath: action.path\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_USER_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/AuthReducer.js"],"names":["actionTypes","updateObject","initialState","token","localStorage","getItem","userId","error","loading","authRedirectPath","current_user","current_user_plan","authStart","state","authSuccess","action","console","log","user","session_token","id","fetchUserFail","authFail","message","authLogout","cart","setAuthRedirectPath","path","reducer","type","FETCH_USER_SUCCESS","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","FETCH_USER_FAIL","SET_AUTH_REDIRECT_PATH"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  userId: localStorage.getItem(\"userId\"),\n  error: null,\n  loading: null,\n  authRedirectPath: \"/\",\n  current_user:null,\n  current_user_plan: null\n};\n\nconst authStart = (state) => {\n  return updateObject(state, { loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  console.log(state, action)\n  return updateObject(state, {\n    token: action.user.session_token,\n    userId: action.user.id,\n    current_user: {...action.user},\n    loading: false,\n    error: null\n  });\n};\n\nconst fetchUserFail = (state, action) => {\n  console.log(action)\n  return updateObject(state, { error: true, loading: false });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error.message,\n    loading: false,\n  });\n};\n\nconst authLogout = (state) => {\n  return updateObject(state, {\n    token: null,\n    userId: null,\n    current_user: null,\n    error: null,\n    cart: [],\n  });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_USER_SUCCESS:\n      return authSuccess(state, action)\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    case actionTypes.FETCH_USER_FAIL:\n      return fetchUserFail(state, action);\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}