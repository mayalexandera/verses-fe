{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: \"\",\n  current_plan: null\n};\n\nconst userPlanStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst userPlanDelete = (state, action) => {\n  return updateObject(state, {\n    loading: false,\n    error: null,\n    message: \"\"\n  });\n};\n\nconst fetchPlansFail = (state, action) => {\n  console.log(action.payload);\n  return updateObject(state, {\n    select: action.payload,\n    loading: false,\n    error: true,\n    message: action.payload\n  });\n};\n\nconst userPlanSuccess = (state, action) => {\n  console.log(action.payload);\n\n  if (action.payload.status === 204) {\n    return updateObject(state, {\n      loading: false,\n      error: null,\n      message: action.payload.message\n    });\n  }\n\n  return updateObject(state, {\n    error: null,\n    loading: false\n  });\n};\n\nconst userPlanFail = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst fetchPlansSuccess = (state, action) => {\n  console.log(action.payload);\n  return updateObject(state, {\n    select: action.payload,\n    error: null,\n    loading: false,\n    message: ''\n  });\n};\n\nconst fetchPlansStart = (state, action) => {\n  console.log(action.payload);\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/plansReducer.js"],"names":["actionTypes","updateObject","initialState","select","loading","error","message","current_plan","userPlanStart","state","action","userPlanDelete","fetchPlansFail","console","log","payload","userPlanSuccess","status","userPlanFail","fetchPlansSuccess","fetchPlansStart","reducer","type","USER_PLAN_SUCCESS","USER_PLAN_START","USER_PLAN_FAIL","USER_PLAN_DELETE","FETCH_PLANS_START","FETCH_PLANS_FAIL","FETCH_PLANS_SUCCESS"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  loading: false,\n  error: false,\n  message: \"\",\n  current_plan: null\n};\n\n\nconst userPlanStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst userPlanDelete = (state, action) => {\n  return updateObject(state, {loading:false, error:null, message: \"\"})\n}\n\nconst fetchPlansFail = (state, action) => {\n  console.log(action.payload)\n  return updateObject(state, { select: action.payload, loading: false, error: true,\n  message: action.payload})\n}\n\nconst userPlanSuccess = (state, action) => {\n  console.log(action.payload)\n  if (action.payload.status === 204) {\n    return updateObject(state, {loading: false, error: null, message: action.payload.message})\n  }\n  return updateObject(state, { error: null, loading: false });\n};\n\nconst userPlanFail = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, { error: action.error });\n};\n\n\nconst fetchPlansSuccess = (state, action) => {\n  console.log(action.payload)\n  return updateObject(state, {select: action.payload, error: null, loading: false, message: ''})\n}\n\nconst fetchPlansStart = (state, action) => {\n  console.log(action.payload)\n  return updateObject(state, { error: null, loading: true})\n}\n\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.USER_PLAN_SUCCESS:\n      return userPlanSuccess(state, action);\n    case actionTypes.USER_PLAN_START:\n      return userPlanStart(state, action);\n    case actionTypes.USER_PLAN_FAIL:\n      return userPlanFail(state, action);\n    case actionTypes.USER_PLAN_DELETE:\n      return userPlanDelete(state, action);\n    case actionTypes.FETCH_PLANS_START:\n      return fetchPlansStart(state, action);\n    case actionTypes.FETCH_PLANS_FAIL:\n      return fetchPlansFail(state, action);\n    case actionTypes.FETCH_PLANS_SUCCESS:\n      return fetchPlansSuccess(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}