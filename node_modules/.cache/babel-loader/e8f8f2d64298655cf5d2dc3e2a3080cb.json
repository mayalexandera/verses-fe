{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./index\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  console.log(token, userId);\n  dispatch(fetchCart(this.props.userId));\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, name, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true\n    };\n    let path = !isSignup ? `/session` : `/users/`;\n    api.post(path, authData).then(response => {\n      console.log(response.data);\n      localStorage.setItem(\"token\", response.data.session_token);\n      console.log(localStorage);\n      localStorage.setItem(\"userId\", response.data.id);\n      dispatch(authSuccess(response.data.session_token, response.data.id));\n    }).catch(err => {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport const fetchUserStart = () => {\n  return {\n    type: actionTypes.FETCH_USER_START\n  };\n};\nexport const fetchUser = user_id => async dispatch => {\n  dispatch(fetchUserStart());\n  await api.get(`/users/${user_id}`).then(response => {\n    dispatch(fetchUserSuccess(response.data));\n  }).catch(err => {\n    dispatch(fetchUserFail(err));\n  });\n};\nexport const fetchUserFail = error => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error\n  };\n};\nexport const fetchUserSuccess = user => {\n  console.log(user);\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const userId = localStorage.getItem(\"userId\");\n      dispatch(authSuccess(token, userId));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/AuthActions.js"],"names":["api","actionTypes","actions","authStart","type","AUTH_START","authSuccess","token","userId","console","log","dispatch","fetchCart","props","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","name","isSignup","authData","returnSecureToken","path","post","then","response","data","setItem","session_token","id","catch","err","fetchUserStart","FETCH_USER_START","fetchUser","user_id","get","fetchUserSuccess","fetchUserFail","FETCH_USER_FAIL","user","FETCH_USER_SUCCESS","authCheckState","getItem"],"mappings":"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","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"./index\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (token, userId) => {\n  console.log(token, userId)\n  dispatch(fetchCart(this.props.userId));\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\nexport const auth = (email, password, name, isSignup) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      name: name,\n      returnSecureToken: true,\n    };\n     let path = !isSignup ? `/session` : `/users/`;\n\n    api\n      .post(path, authData)\n      .then((response) => {\n        console.log(response.data);\n        localStorage.setItem(\"token\", response.data.session_token);\n        console.log(localStorage)\n        localStorage.setItem(\"userId\", response.data.id);\n        dispatch(authSuccess(response.data.session_token, response.data.id));\n      })\n      .catch((err) => {\n        dispatch(authFail(err.response.data.error));\n      });\n  };\n};\n \nexport const fetchUserStart = () => {\n  return ({type: actionTypes.FETCH_USER_START})\n}\n\n\nexport const fetchUser = (user_id) => async (dispatch) => {\n  dispatch(fetchUserStart())\n\n   await api.get(`/users/${user_id}`)\n  .then(response => {dispatch(fetchUserSuccess(response.data))\n  })\n  .catch(err => {\n    dispatch(fetchUserFail(err))\n  })\n  }\n\n\nexport const fetchUserFail = (error) => {\n  return {\n    type: actionTypes.FETCH_USER_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchUserSuccess = (user) => {\n  console.log(user);\n  return {\n    type: actionTypes.FETCH_USER_SUCCESS,\n    user: user\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}