{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  select: [],\n  products: [],\n  error: false,\n  loading: false\n};\n\nconst updateFavorites = (state, action) => {\n  const updatedFavorites = [...state.select, action.payload];\n  return updateObject(state, {\n    select: updatedFavorites\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = [...state.select.filter(fave => fave.id !== action.payload.id)];\n  return updateObject(state, {\n    select: updatedFavorites\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nconst setFavorites = (state, action) => {\n  console.log(\"in set favorites\", state, action);\n  return updateObject(state, {\n    select: [...action.select],\n    products: [...action.products],\n    loading: false\n  });\n};\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n\n    default:\n      return state;\n      p;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/favoritesReducer.js"],"names":["actionTypes","updateObject","initialState","select","products","error","loading","updateFavorites","state","action","updatedFavorites","payload","deleteFavorite","filter","fave","id","startFetchFavorites","setFavorites","console","log","fetchFavoritesFailed","reducer","type","CREATE_FAVORITE","DELETE_FAVORITE","SET_FAVORITES","FETCH_FAVORITES_FAILED","START_FETCH_FAVORITES","p"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,KAHY;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,QAAMC,gBAAgB,GAAG,CAAC,GAAGF,KAAK,CAACL,MAAV,EAAkBM,MAAM,CAACE,OAAzB,CAAzB;AACA,SAAOV,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,MAAM,EAAEO;AADiB,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAME,cAAc,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACxC,QAAMC,gBAAgB,GAAG,CACvB,GAAGF,KAAK,CAACL,MAAN,CAAaU,MAAb,CAAqBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAAzD,CADoB,CAAzB;AAGA,SAAOd,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,MAAM,EAAEO;AADiB,GAAR,CAAnB;AAGD,CAPD;;AASA,MAAMM,mBAAmB,GAAG,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC7C,SAAOR,YAAY,CAACO,KAAD,EAAQ;AACzBF,IAAAA,OAAO,EAAE;AADgB,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMW,YAAY,GAAG,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACtCS,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCX,KAAhC,EAAuCC,MAAvC;AACA,SAAOR,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,MAAM,EAAE,CAAC,GAAGM,MAAM,CAACN,MAAX,CADiB;AAEzBC,IAAAA,QAAQ,EAAE,CAAC,GAAGK,MAAM,CAACL,QAAX,CAFe;AAGzBE,IAAAA,OAAO,EAAE;AAHgB,GAAR,CAAnB;AAKD,CAPD;;AAUA,MAAMc,oBAAoB,GAAG,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC9C,SAAOR,YAAY,CAACO,KAAD,EAAQ;AAAEH,IAAAA,KAAK,EAAE;AAAT,GAAR,CAAnB;AACD,CAFD;;AAIA,MAAMgB,OAAO,GAAG,CAACb,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACa,IAAf;AACE,SAAKtB,WAAW,CAACuB,eAAjB;AACE,aAAOhB,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKT,WAAW,CAACwB,eAAjB;AACE,aAAOZ,cAAc,CAACJ,KAAD,EAAQC,MAAR,CAArB;;AACF,SAAKT,WAAW,CAACyB,aAAjB;AACE,aAAOR,YAAY,CAACT,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKT,WAAW,CAAC0B,sBAAjB;AACE,aAAON,oBAAoB,CAACZ,KAAD,EAAQC,MAAR,CAA3B;;AACF,SAAKT,WAAW,CAAC2B,qBAAjB;AACE,aAAOX,mBAAmB,CAACR,KAAD,EAAQC,MAAR,CAA1B;;AACF;AACE,aAAOD,KAAP;AAAaoB,MAAAA,CAAC;AAZlB;AAcD,CAfD;;AAiBA,eAAeP,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  select: [],\n  products: [],\n  error: false,\n  loading: false\n};\n\nconst updateFavorites = (state, action) => {\n  const updatedFavorites = [...state.select, action.payload];\n  return updateObject(state, {\n    select: updatedFavorites,\n  });\n};\n\nconst deleteFavorite = (state, action) => {\n  const updatedFavorites = [\n    ...state.select.filter((fave) => fave.id !== action.payload.id),\n  ];\n  return updateObject(state, {\n    select: updatedFavorites,\n  });\n};\n\nconst startFetchFavorites = (state, action) => {\n  return updateObject(state, {\n    loading: true\n  })\n}\n\nconst setFavorites = (state, action) => {\n  console.log(\"in set favorites\", state, action);\n  return updateObject(state, {\n    select: [...action.select],\n    products: [...action.products],\n    loading: false,\n  });\n};\n\n\nconst fetchFavoritesFailed = (state, action) => {\n  return updateObject(state, { error: true });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_FAVORITE:\n      return updateFavorites(state, action);\n    case actionTypes.DELETE_FAVORITE:\n      return deleteFavorite(state, action);\n    case actionTypes.SET_FAVORITES:\n      return setFavorites(state, action);\n    case actionTypes.FETCH_FAVORITES_FAILED:\n      return fetchFavoritesFailed(state, action);\n    case actionTypes.START_FETCH_FAVORITES:\n      return startFetchFavorites(state, action);\n    default:\n      return state;p\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}