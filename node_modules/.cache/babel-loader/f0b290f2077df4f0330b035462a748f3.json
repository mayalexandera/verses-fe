{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  error: null,\n  loading: false,\n  message: null\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action);\n\n  if (action.payload !== null) {\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n      // cart_items: [...action.payload.cart_items],\n      cart_items: action.payload.cart_items,\n      loading: false,\n      error: null,\n      message: null\n    });\n  }\n};\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload);\n  return updateObject(state, {\n    loading: true,\n    error: null,\n    message: null\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  console.log(state, action.payload);\n  let updatedCart; // if (state.cart_items !== [] || state.cart_items !== 'undefined') \n\n  if (state.cart_items === [] || state.cart_items === \"undefined\") {\n    updatedCart = Object.assign({}, ...state, action.payload);\n  } else {\n    // updatedCart = [...action.payload];\n    updatedCart = Object.assign({}, ...action.payload);\n  }\n\n  return updateObject(state, {\n    cart_items: updatedCart,\n    error: null,\n    loading: false,\n    message: null\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload);\n  let cart_item = state.cart_items.filter(item => item.id === action.payload);\n  console.log(cart_item);\n  const updatedCart = [];\n  console.log(action.payload, updatedCart);\n  state.cart_items.map(cartItem => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem\n      });\n    }\n  });\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false,\n    message: null\n  });\n};\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message);\n  return updateObject(state, {\n    error: true,\n    loading: false,\n    message: \"You must be a subscriber to place orders\"\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","error","loading","message","setCart","state","action","console","log","payload","id","startFetchCart","addProductToCart","updatedCart","Object","assign","removeProductFromCart","cart_item","filter","item","map","cartItem","push","fetchCartFailed","reducer","type","SET_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART","FETCH_CART_FAILED","START_FETCH_CART"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    cart_id: null,\n    member_id: null,\n    cart_items: [],\n    error: null,\n    loading: false,\n    message: null\n};\n\nconst setCart = (state, action) => {\n  console.log(state, action)\n    if (action.payload !== null ){\n    return updateObject(state, {\n      cart_id: action.payload.id,\n      member_id: action.payload.member_id,\n\n\n      // cart_items: [...action.payload.cart_items],\n      cart_items: action.payload.cart_items,\n\n\n      loading: false,\n      error: null,\n      message: null\n    })\n  }\n}\n\nconst startFetchCart = (state, action) => {\n  console.log(state, action.payload)\n  return updateObject(state, {\n    loading: true, error: null, message: null\n  })\n}\n\nconst addProductToCart = (state, action) => {\n    console.log(state, action.payload);\n    let updatedCart\n\n    // if (state.cart_items !== [] || state.cart_items !== 'undefined') \n    if (state.cart_items === [] || state.cart_items === \"undefined\") {\n\n\n      updatedCart = Object.assign({}, ...state, action.payload);\n    } else {\n      // updatedCart = [...action.payload];\n      updatedCart = Object.assign({}, ...action.payload)\n    }\n\n    \n  return updateObject(state, {\n    cart_items: updatedCart,\n    error: null,\n    loading: false,\n    message: null\n  })\n}\n\nconst removeProductFromCart = (state, action) => {\n  console.log(state, action.payload)\n  let cart_item = state.cart_items.filter(item => item.id === action.payload)\n  console.log(cart_item)\n  const updatedCart = [];\n  \n  console.log(action.payload, updatedCart)\n  state.cart_items.map((cartItem) => {\n    if (cartItem.id !== action.payload) {\n      updatedCart.push({ ...cartItem });\n    }\n  })\n  return updateObject(state, {\n    cart_items: [...updatedCart],\n    error: false, message: null\n  });\n}\n\nconst fetchCartFailed = (state, action) => {\n  console.log(state, action.payload.message)\n  return updateObject(state,{ error: true, loading: false,  message: \"You must be a subscriber to place orders\"})\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CART:\n      return setCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    case actionTypes.FETCH_CART_FAILED:\n      return fetchCartFailed(state, action);\n    case actionTypes.START_FETCH_CART:\n      return startFetchCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}