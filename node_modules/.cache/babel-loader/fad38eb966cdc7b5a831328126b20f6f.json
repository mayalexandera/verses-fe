{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  cart_products: []\n};\n\nconst fetchCart = (state, action) => {\n  let newItems = [];\n  let newProducts = [];\n\n  if (action.payload.cart_items) {\n    action.payload.cart_items.map(item => {\n      newItems.push({ ...item\n      });\n    });\n    action.payload.products.map(prod => {\n      newProducts.push({ ...prod\n      });\n    });\n  }\n\n  return updateObject(state, {\n    cart_id: action.payload.id,\n    member_id: action.payload.member_id,\n    cart_items: [...newItems],\n    cart_products: [...newProducts]\n  });\n};\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state.cart_items, action.payload];\n  return updateObject(state, {\n    cart_items: updatedCart\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [...action.payload.cart_items];\n  return updateObject(state, {\n    cart_items: updatedCart\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CART:\n      return fetchCart(state, action);\n\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/reducers/CartsReducer.js"],"names":["actionTypes","updateObject","initialState","cart_id","member_id","cart_items","cart_products","fetchCart","state","action","newItems","newProducts","payload","map","item","push","products","prod","id","addProductToCart","updatedCart","removeProductFromCart","reducer","type","FETCH_CART","ADD_PRODUCT_TO_CART","REMOVE_PRODUCT_FROM_CART"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,aAAa,EAAE;AAJI,CAArB;;AAOA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAGF,MAAM,CAACG,OAAP,CAAeP,UAAlB,EAA8B;AAC9BI,IAAAA,MAAM,CAACG,OAAP,CAAeP,UAAf,CAA0BQ,GAA1B,CAA+BC,IAAD,IAAU;AACtCJ,MAAAA,QAAQ,CAACK,IAAT,CAAc,EAAE,GAAGD;AAAL,OAAd;AACD,KAFD;AAGAL,IAAAA,MAAM,CAACG,OAAP,CAAeI,QAAf,CAAwBH,GAAxB,CAA6BI,IAAD,IAAU;AACpCN,MAAAA,WAAW,CAACI,IAAZ,CAAiB,EAAE,GAAGE;AAAL,OAAjB;AACD,KAFD;AAGC;;AACD,SAAOhB,YAAY,CAACO,KAAD,EAAQ;AACzBL,IAAAA,OAAO,EAAEM,MAAM,CAACG,OAAP,CAAeM,EADC;AAEzBd,IAAAA,SAAS,EAAEK,MAAM,CAACG,OAAP,CAAeR,SAFD;AAGzBC,IAAAA,UAAU,EAAE,CAAC,GAAGK,QAAJ,CAHa;AAIzBJ,IAAAA,aAAa,EAAE,CAAC,GAAGK,WAAJ;AAJU,GAAR,CAAnB;AAMD,CAjBD;;AAmBA,MAAMQ,gBAAgB,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAMW,WAAW,GAAG,CAAC,GAAGZ,KAAK,CAACH,UAAV,EAAsBI,MAAM,CAACG,OAA7B,CAApB;AACA,SAAOX,YAAY,CAACO,KAAD,EAAQ;AACzBH,IAAAA,UAAU,EAAEe;AADa,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAMC,qBAAqB,GAAG,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC/C,QAAMW,WAAW,GAAG,CAAC,GAAGX,MAAM,CAACG,OAAP,CAAeP,UAAnB,CAApB;AACA,SAAOJ,YAAY,CAACO,KAAD,EAAQ;AACzBH,IAAAA,UAAU,EAAEe;AADa,GAAR,CAAnB;AAGD,CALD;;AAOA,MAAME,OAAO,GAAG,CAACd,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACc,IAAf;AACE,SAAKvB,WAAW,CAACwB,UAAjB;AACE,aAAOjB,SAAS,CAACC,KAAD,EAAQC,MAAR,CAAhB;;AACF,SAAKT,WAAW,CAACyB,mBAAjB;AACE,aAAON,gBAAgB,CAACX,KAAD,EAAQC,MAAR,CAAvB;;AACF,SAAKT,WAAW,CAAC0B,wBAAjB;AACE,aAAOL,qBAAqB,CAACb,KAAD,EAAQC,MAAR,CAA5B;;AACF;AACE,aAAOD,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAec,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  cart_id: null,\n  member_id: null,\n  cart_items: [],\n  cart_products: [],\n};\n\nconst fetchCart = (state, action) => {\n  let newItems = [];\n  let newProducts = [];\n  if(action.payload.cart_items) {\n  action.payload.cart_items.map((item) => {\n    newItems.push({ ...item });\n  })\n  action.payload.products.map((prod) => {\n    newProducts.push({ ...prod });\n  }) \n  }\n  return updateObject(state, {\n    cart_id: action.payload.id,\n    member_id: action.payload.member_id,\n    cart_items: [...newItems],\n    cart_products: [...newProducts],\n  })\n};\n\nconst addProductToCart = (state, action) => {\n  const updatedCart = [...state.cart_items, action.payload];\n  return updateObject(state, {\n    cart_items: updatedCart,\n  });\n};\n\nconst removeProductFromCart = (state, action) => {\n  const updatedCart = [...action.payload.cart_items];\n  return updateObject(state, {\n    cart_items: updatedCart,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_CART:\n      return fetchCart(state, action);\n    case actionTypes.ADD_PRODUCT_TO_CART:\n      return addProductToCart(state, action);\n    case actionTypes.REMOVE_PRODUCT_FROM_CART:\n      return removeProductFromCart(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}