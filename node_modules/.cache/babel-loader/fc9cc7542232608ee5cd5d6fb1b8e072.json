{"ast":null,"code":"import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\nexport const setBrand = brand_id => async dispatch => {\n  console.log(\"in fetch brand\");\n  await api.get(`/brands/${brand_id}`).then(resp => {\n    dispatch({\n      type: actionTypes.SET_BRAND,\n      brand: resp.data\n    });\n  });\n};\nexport const fetchBrands = () => async dispatch => {\n  const brands = [];\n  await api.get(`/brands/`).then(resp => {\n    for (let key in resp.data) {\n      brands[key] = resp.data[key];\n    }\n  });\n  dispatch({\n    type: actionTypes.FETCH_BRANDS,\n    payload: brands\n  });\n};","map":{"version":3,"sources":["/Users/mayablevins/Desktop/verses/verses_fe/src/store/actions/BrandsActions.js"],"names":["api","actionTypes","actions","setBrand","brand_id","dispatch","console","log","get","then","resp","type","SET_BRAND","brand","data","fetchBrands","brands","key","FETCH_BRANDS","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AAGA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AACxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,QAAMP,GAAG,CAACQ,GAAJ,CAAS,WAAUJ,QAAS,EAA5B,EACLK,IADK,CACAC,IAAI,IAAI;AACdL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEV,WAAW,CAACW,SAApB;AAA+BC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAA3C,KAAD,CAAR;AACD,GAHO,CAAN;AAID,CAPM;AAUP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOV,QAAP,IAAoB;AACnD,QAAMW,MAAM,GAAG,EAAf;AACA,QAAMhB,GAAG,CAACQ,GAAJ,CAAS,UAAT,EACLC,IADK,CACAC,IAAI,IAAI;AACZ,SAAI,IAAIO,GAAR,IAAeP,IAAI,CAACI,IAApB,EAA0B;AACxBE,MAAAA,MAAM,CAACC,GAAD,CAAN,GAAcP,IAAI,CAACI,IAAL,CAAUG,GAAV,CAAd;AACD;AACF,GALK,CAAN;AAMAZ,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEV,WAAW,CAACiB,YAApB;AAAkCC,IAAAA,OAAO,EAAEH;AAA3C,GAAD,CAAR;AACD,CATM","sourcesContent":["import api from \"../apis/api\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as actions from \"../actions/index\";\n\n\nexport const setBrand = (brand_id) => async (dispatch) => {\n  console.log(\"in fetch brand\")\n\n  await api.get(`/brands/${brand_id}`)\n  .then(resp => {\n  dispatch({ type: actionTypes.SET_BRAND, brand: resp.data });\n})\n};\n\n\nexport const fetchBrands = () => async (dispatch) => {\n  const brands = []\n  await api.get(`/brands/`)\n  .then(resp => {\n    for(let key in resp.data) {\n      brands[key] = resp.data[key]\n    }\n  })\n  dispatch({ type: actionTypes.FETCH_BRANDS, payload: brands});\n};\n\n "]},"metadata":{},"sourceType":"module"}